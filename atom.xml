<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SnailTyan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="noahsnail.com/"/>
  <updated>2017-05-04T14:03:31.000Z</updated>
  <id>noahsnail.com/</id>
  
  <author>
    <name>Tyan</name>
    <email>Tyan.Liu.Git@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>scikit-learn的基本用法(六)——交叉验证2</title>
    <link href="noahsnail.com/2017/05/04/2017-5-4-scikit-learn%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E5%85%AD)%E2%80%94%E2%80%94%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%812/"/>
    <id>noahsnail.com/2017/05/04/2017-5-4-scikit-learn的基本用法(六)——交叉验证2/</id>
    <published>2017-05-04T13:45:35.000Z</published>
    <updated>2017-05-04T14:03:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要介绍scikit-learn中的交叉验证。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">import numpy as np</div><div class="line">import matplotlib.pyplot as plt</div><div class="line">from sklearn.datasets import load_digits</div><div class="line">from sklearn.cross_validation import train_test_split</div><div class="line">from sklearn.svm import SVC</div><div class="line">from sklearn.learning_curve import learning_curve</div><div class="line">from sklearn.model_selection import cross_val_score </div><div class="line"></div><div class="line"></div><div class="line"># 加载数据集</div><div class="line">digits = load_digits()</div><div class="line">X = digits.data</div><div class="line">y = digits.target</div><div class="line"># 用SVM进行学习并记录loss</div><div class="line">train_sizes, train_loss, test_loss = learning_curve(SVC(gamma = 0.001), </div><div class="line">                                                    X, y, cv = 10, scoring = &apos;neg_mean_squared_error&apos;,</div><div class="line">                                                    train_sizes = [0.1, 0.25, 0.5, 0.75, 1])</div><div class="line"></div><div class="line"># 训练误差均值</div><div class="line">train_loss_mean = -np.mean(train_loss, axis = 1)</div><div class="line"># 测试误差均值</div><div class="line">test_loss_mean = -np.mean(test_loss, axis = 1)</div><div class="line"></div><div class="line"># 绘制误差曲线</div><div class="line">plt.plot(train_sizes, train_loss_mean, &apos;o-&apos;, color = &apos;r&apos;, label = &apos;Training&apos;)</div><div class="line">plt.plot(train_sizes, test_loss_mean, &apos;o-&apos;, color = &apos;g&apos;, label = &apos;Cross-Validation&apos;)</div><div class="line"></div><div class="line">plt.xlabel(&apos;Training data size&apos;)</div><div class="line">plt.ylabel(&apos;Loss&apos;)</div><div class="line">plt.legend(loc = &apos;best&apos;)</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/sk6.png" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      scikit-learn的基本用法(六)——交叉验证2
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>scikit-learn的基本用法(五)——交叉验证1</title>
    <link href="noahsnail.com/2017/05/04/2017-5-4-scikit-learn%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E4%BA%94)%E2%80%94%E2%80%94%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/"/>
    <id>noahsnail.com/2017/05/04/2017-5-4-scikit-learn的基本用法(五)——交叉验证/</id>
    <published>2017-05-04T13:06:43.000Z</published>
    <updated>2017-05-04T13:41:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要介绍scikit-learn中的交叉验证。通过交叉验证来选取KNN算法中的K值。</p>
<ul>
<li>Demo 1</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">import numpy as np</div><div class="line">from sklearn import datasets</div><div class="line">from sklearn.cross_validation import train_test_split</div><div class="line">from sklearn.neighbors import KNeighborsClassifier</div><div class="line">from sklearn.cross_validation import cross_val_score </div><div class="line"></div><div class="line"># 加载iris数据集</div><div class="line">iris = datasets.load_iris()</div><div class="line"># 读取特征</div><div class="line">X = iris.data</div><div class="line"># 读取分类标签</div><div class="line">y = iris.target</div><div class="line"># 定义分类器</div><div class="line">knn = KNeighborsClassifier(n_neighbors = 5)</div><div class="line"># 进行交叉验证数据评估, 数据分为5部分, 每次用一部分作为测试集</div><div class="line">scores = cross_val_score(knn, X, y, cv = 5, scoring = &apos;accuracy&apos;)</div><div class="line"># 输出5次交叉验证的准确率</div><div class="line">print scores</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[ 0.96666667  1.          0.93333333  0.96666667  1.        ]</div></pre></td></tr></table></figure>
<ul>
<li>Demo 2</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">import numpy as np</div><div class="line">import matplotlib.pyplot as plt</div><div class="line">from sklearn import datasets</div><div class="line">from sklearn.cross_validation import train_test_split</div><div class="line">from sklearn.neighbors import KNeighborsClassifier</div><div class="line">from sklearn.cross_validation import cross_val_score </div><div class="line"></div><div class="line"># 确定knn中k的取值</div><div class="line"></div><div class="line"># 加载iris数据集</div><div class="line">iris = datasets.load_iris()</div><div class="line"># 读取特征</div><div class="line">X = iris.data</div><div class="line"># 读取分类标签</div><div class="line">y = iris.target</div><div class="line"># 定义knn中k的取值, 0-10</div><div class="line">k_range = range(1, 30)</div><div class="line"># 保存k对应的准确率</div><div class="line">k_scores = []</div><div class="line"># 计算每个k取值对应的准确率</div><div class="line">for k in k_range:</div><div class="line">    # 获得knn分类器</div><div class="line">    knn = KNeighborsClassifier(n_neighbors = k)</div><div class="line">    # 对数据进行交叉验证求准确率</div><div class="line">    scores = cross_val_score(knn, X, y, cv = 10, scoring = &apos;accuracy&apos;)</div><div class="line">    # 保存交叉验证结果的准确率均值</div><div class="line">    k_scores.append(scores.mean())</div><div class="line"></div><div class="line"># 绘制k取不同值时的准确率变化图像</div><div class="line">plt.plot(k_range, k_scores)</div><div class="line">plt.xlabel(&apos;K Value in KNN&apos;)</div><div class="line">plt.ylabel(&apos;Cross-Validation Mean Accuracy&apos;)</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/sk5.png" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      scikit-learn的基本用法(五)——交叉验证1
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib的基本用法(十四)——figure图的嵌套</title>
    <link href="noahsnail.com/2017/05/04/2017-5-4-matplotlib%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E5%8D%81%E5%9B%9B)%E2%80%94%E2%80%94figure%E5%9B%BE%E7%9A%84%E5%B5%8C%E5%A5%97/"/>
    <id>noahsnail.com/2017/05/04/2017-5-4-matplotlib的基本用法(十四)——figure图的嵌套/</id>
    <published>2017-05-04T12:06:54.000Z</published>
    <updated>2017-05-04T12:07:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要使用matplotlib进行图嵌套的绘制。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line"></div><div class="line"># 定义figure</div><div class="line">fig = plt.figure()</div><div class="line"></div><div class="line"># 定义数据</div><div class="line">x = [1, 2, 3, 4, 5, 6, 7]</div><div class="line">y = [1, 3, 4, 2, 5, 8, 6]</div><div class="line"></div><div class="line"># figure的百分比, 从figure 10%的位置开始绘制, 宽高是figure的80%</div><div class="line">left, bottom, width, height = 0.1, 0.1, 0.8, 0.8</div><div class="line"># 获得绘制的句柄</div><div class="line">ax1 = fig.add_axes([left, bottom, width, height])</div><div class="line"># 绘制点(x,y)</div><div class="line">ax1.plot(x, y, &apos;r&apos;)</div><div class="line">ax1.set_xlabel(&apos;x&apos;)</div><div class="line">ax1.set_ylabel(&apos;y&apos;)</div><div class="line">ax1.set_title(&apos;test&apos;)</div><div class="line"></div><div class="line"></div><div class="line"># 嵌套方法一</div><div class="line"># figure的百分比, 从figure 10%的位置开始绘制, 宽高是figure的80%</div><div class="line">left, bottom, width, height = 0.2, 0.6, 0.25, 0.25</div><div class="line"># 获得绘制的句柄</div><div class="line">ax2 = fig.add_axes([left, bottom, width, height])</div><div class="line"># 绘制点(x,y)</div><div class="line">ax2.plot(x, y, &apos;r&apos;)</div><div class="line">ax2.set_xlabel(&apos;x&apos;)</div><div class="line">ax2.set_ylabel(&apos;y&apos;)</div><div class="line">ax2.set_title(&apos;part1&apos;)</div><div class="line"></div><div class="line"></div><div class="line"># 嵌套方法二</div><div class="line">plt.axes([bottom, left, width, height])</div><div class="line">plt.plot(x, y, &apos;r&apos;)</div><div class="line">plt.xlabel(&apos;x&apos;)</div><div class="line">plt.ylabel(&apos;y&apos;)</div><div class="line">plt.title(&apos;part2&apos;)</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m14.png" alt="图像"></p>
]]></content>
    
    <summary type="html">
    
      matplotlib的基本用法(十四)——figure图的嵌套
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib的基本用法(十三)——figure绘制多图</title>
    <link href="noahsnail.com/2017/05/04/2017-5-4-matplotlib%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E5%8D%81%E4%B8%89)%E2%80%94%E2%80%94figure%E7%BB%98%E5%88%B6%E5%A4%9A%E5%9B%BE/"/>
    <id>noahsnail.com/2017/05/04/2017-5-4-matplotlib的基本用法(十三)——figure绘制多图/</id>
    <published>2017-05-04T11:28:15.000Z</published>
    <updated>2017-05-04T11:48:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要使用matplotlib进行多图的绘制。</p>
<ul>
<li>Demo 1</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line"></div><div class="line"># 定义figure</div><div class="line">plt.figure()</div><div class="line"># figure分成3行3列, 取得第一个子图的句柄, 第一个子图跨度为1行3列, 起点是表格(0, 0)</div><div class="line">ax1 = plt.subplot2grid((3, 3), (0, 0), colspan = 3, rowspan = 1)</div><div class="line">ax1.plot([0, 1], [0, 1])</div><div class="line">ax1.set_title(&apos;Test&apos;)</div><div class="line"></div><div class="line"># figure分成3行3列, 取得第二个子图的句柄, 第二个子图跨度为1行3列, 起点是表格(1, 0)</div><div class="line">ax2 = plt.subplot2grid((3, 3), (1, 0), colspan = 2, rowspan = 1)</div><div class="line">ax2.plot([0, 1], [0, 1])</div><div class="line"></div><div class="line"># figure分成3行3列, 取得第三个子图的句柄, 第三个子图跨度为1行1列, 起点是表格(1, 2)</div><div class="line">ax3 = plt.subplot2grid((3, 3), (1, 2), colspan = 1, rowspan = 1)</div><div class="line">ax3.plot([0, 1], [0, 1])</div><div class="line"></div><div class="line"># figure分成3行3列, 取得第四个子图的句柄, 第四个子图跨度为1行3列, 起点是表格(2, 0)</div><div class="line">ax4 = plt.subplot2grid((3, 3), (2, 0), colspan = 3, rowspan = 1)</div><div class="line">ax4.plot([0, 1], [0, 1])</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m131.png" alt="图像"></p>
<ul>
<li>Demo 2</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line">import matplotlib.gridspec as gridspec</div><div class="line"></div><div class="line"># 定义figure</div><div class="line">plt.figure()</div><div class="line"># 分隔figure</div><div class="line">gs = gridspec.GridSpec(3, 3)</div><div class="line">ax1 = plt.subplot(gs[0, :])</div><div class="line">ax2 = plt.subplot(gs[1, 0:2])</div><div class="line">ax3 = plt.subplot(gs[1, 2])</div><div class="line">ax4 = plt.subplot(gs[2, :])</div><div class="line"></div><div class="line"># 绘制图像</div><div class="line">ax1.plot([0, 1], [0, 1])</div><div class="line">ax1.set_title(&apos;Test&apos;)</div><div class="line"></div><div class="line">ax2.plot([0, 1], [0, 1])</div><div class="line"></div><div class="line">ax3.plot([0, 1], [0, 1])</div><div class="line"></div><div class="line">ax4.plot([0, 1], [0, 1])</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m131.png" alt="图像"></p>
<ul>
<li>Demo 3</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line"></div><div class="line"># 划分figure</div><div class="line">fig, ((ax11, ax12), (ax21, ax22)) = plt.subplots(2, 2, sharex = True, sharey = True)</div><div class="line"></div><div class="line"># 绘制图像</div><div class="line">ax11.scatter([0, 0.5], [0, 1])</div><div class="line">ax12.scatter([0, 1], [0, 1])</div><div class="line">ax21.scatter([0, 1], [0, -1])</div><div class="line">ax22.scatter([0, -1], [0, 1])</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m132.png" alt="图像"></p>
]]></content>
    
    <summary type="html">
    
      matplotlib的基本用法(十三)——figure绘制多图
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>scikit-learn的基本用法(四)——数据归一化</title>
    <link href="noahsnail.com/2017/05/04/2017--5-4-scikit-learn%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E5%9B%9B)%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%BD%92%E4%B8%80%E5%8C%96/"/>
    <id>noahsnail.com/2017/05/04/2017--5-4-scikit-learn的基本用法(四)——数据归一化/</id>
    <published>2017-05-04T10:47:06.000Z</published>
    <updated>2017-05-04T11:06:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要介绍scikit-learn中的数据预处理之归一化。</p>
<ul>
<li>Demo 1</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">import numpy as np</div><div class="line">from sklearn import preprocessing</div><div class="line"></div><div class="line"></div><div class="line"># 定义array</div><div class="line">a = np.array([-10, 2.3, 13.7, 56, 108])</div><div class="line">print a</div><div class="line"></div><div class="line"># 对array进行归一化(normalization)</div><div class="line"># scale进行的操作是按列减去均值, 除以方差, 因此数据的均值为0, 方差为1</div><div class="line">print preprocessing.scale(a)</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[ -10.     2.3   13.7   56.   108. ]</div><div class="line">[-1.01951435 -0.73451375 -0.47036685  0.50975718  1.71463777]</div></pre></td></tr></table></figure>
<ul>
<li>Demo 2</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">import numpy as np</div><div class="line">import matplotlib.pyplot as plt</div><div class="line">from sklearn import preprocessing</div><div class="line">from sklearn.cross_validation import train_test_split</div><div class="line">from sklearn.datasets.samples_generator import make_classification</div><div class="line">from sklearn.svm import SVC</div><div class="line"></div><div class="line"># 生成数据集</div><div class="line">X, y = make_classification(n_samples = 200, n_features = 2, n_redundant = 0, n_informative = 2, </div><div class="line">                           random_state = 22, n_clusters_per_class = 1, scale = 100)</div><div class="line"># 查看数据分布</div><div class="line">plt.scatter(X[:, 0], X[:, 1], c = y)</div><div class="line">plt.show()</div><div class="line"></div><div class="line"># 数据归一化处理, 不进行处理时注释掉</div><div class="line">X = preprocessing.scale(X)</div><div class="line"># 将数据分为训练集和测试集</div><div class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)</div><div class="line"># 构建分类器</div><div class="line">svm = SVC()</div><div class="line"># 训练分类器</div><div class="line">svm.fit(X_train, y_train)</div><div class="line"># 测试</div><div class="line">print svm.score(X_test, y_test)</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/sk4.png" alt="image"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 进行归一化的准确率</div><div class="line">0.9</div><div class="line"># 不进行归一化的准确率</div><div class="line">0.65</div></pre></td></tr></table></figure>
<p>备注：由于数据是随机生成的, 结果可能会不同，但进行归一化与不进行归一化的差异是一致的。</p>
]]></content>
    
    <summary type="html">
    
      scikit-learn的基本用法(四)——数据归一化
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>scikit-learn的基本用法(三)——model的介绍</title>
    <link href="noahsnail.com/2017/05/03/2017-5-3-scikit-learn%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E4%B8%89)%E2%80%94%E2%80%94model%E7%9A%84%E4%BB%8B%E7%BB%8D/"/>
    <id>noahsnail.com/2017/05/03/2017-5-3-scikit-learn的基本用法(三)——model的介绍/</id>
    <published>2017-05-03T13:47:38.000Z</published>
    <updated>2017-05-04T02:45:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要是scikit-learn中model的介绍。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">from sklearn import datasets</div><div class="line">from sklearn.linear_model import LinearRegression</div><div class="line"></div><div class="line"># 直接加载数据集</div><div class="line">loaded_data = datasets.load_boston()</div><div class="line">data_X = loaded_data.data</div><div class="line">data_y = loaded_data.target</div><div class="line"></div><div class="line"># 定义模型model</div><div class="line">model = LinearRegression()</div><div class="line"># 学习参数</div><div class="line">model.fit(data_X, data_y)</div><div class="line"># 输出权重weight</div><div class="line">print model.coef_</div><div class="line"># 输出偏置bias</div><div class="line">print model.intercept_</div><div class="line"># 输出model定义时的参数, 没有给定则返回默认参数</div><div class="line">print model.get_params()</div><div class="line"># 评估学习到的模型</div><div class="line"># 通过coefficient of determination(决定系数),来判断回归方程拟合的程度.</div><div class="line">print model.score(data_X, data_y)</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[ -1.07170557e-01   4.63952195e-02   2.08602395e-02   2.68856140e+00</div><div class="line">  -1.77957587e+01   3.80475246e+00   7.51061703e-04  -1.47575880e+00</div><div class="line">   3.05655038e-01  -1.23293463e-02  -9.53463555e-01   9.39251272e-03</div><div class="line">  -5.25466633e-01]</div><div class="line">36.4911032804</div><div class="line">&#123;&apos;copy_X&apos;: True, &apos;normalize&apos;: False, &apos;n_jobs&apos;: 1, &apos;fit_intercept&apos;: True&#125;</div><div class="line">0.740607742865</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      scikit-learn的基本用法(三)——model的介绍
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>scikit-learn的基本用法(二)——数据集的使用</title>
    <link href="noahsnail.com/2017/05/03/2017-5-3-scikit-learn%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E4%BA%8C)%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>noahsnail.com/2017/05/03/2017-5-3-scikit-learn的基本用法(二)——数据集的使用/</id>
    <published>2017-05-03T12:58:40.000Z</published>
    <updated>2017-05-03T13:06:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要是演示scikit-learn自带的数据集的一些用法。本文介绍两种sklearn构建数据集的方式，一种是直接加载已有的数据集，另一种是通过工具构建一个数据集。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line"></div><div class="line">from sklearn import datasets</div><div class="line">from sklearn.linear_model import LinearRegression</div><div class="line"></div><div class="line"># 直接加载数据集</div><div class="line">loaded_data = datasets.load_boston()</div><div class="line">data_X = loaded_data.data</div><div class="line">data_y = loaded_data.target</div><div class="line"></div><div class="line"># 定义模型</div><div class="line">model = LinearRegression()</div><div class="line"># 学习参数</div><div class="line">model.fit(data_X, data_y)</div><div class="line"># 计算预测值</div><div class="line">result = model.predict(data_X)</div><div class="line"></div><div class="line"></div><div class="line"># 创造一些线性回归的数据点</div><div class="line">X, y = datasets.make_regression(n_samples = 100, n_features = 1, n_targets = 1, noise = 5)</div><div class="line"># 绘制创造的数据集的散点图</div><div class="line">plt.scatter(X, y)</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[ 30.00821269  25.0298606   30.5702317   28.60814055]</div><div class="line">[ 24.   21.6  34.7  33.4]</div></pre></td></tr></table></figure>
<p><img src="http://ocs628urt.bkt.clouddn.com/sk2.png" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      scikit-learn的基本用法(二)——数据集的使用
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib的基本用法(十二)——subplot绘制多图</title>
    <link href="noahsnail.com/2017/05/03/2017-5-3-matplotlib%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E5%8D%81%E4%BA%8C)%E2%80%94%E2%80%94subplot%E7%BB%98%E5%88%B6%E5%A4%9A%E5%9B%BE/"/>
    <id>noahsnail.com/2017/05/03/2017-5-3-matplotlib的基本用法(十二)——subplot绘制多图/</id>
    <published>2017-05-03T12:20:49.000Z</published>
    <updated>2017-05-03T12:38:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要使用matplotlib进行多图的绘制。</p>
<ul>
<li>Demo 1</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line"></div><div class="line">plt.figure()</div><div class="line"></div><div class="line"># 绘制第一个图</div><div class="line">plt.subplot(2, 2, 1)</div><div class="line">plt.plot([0, 1], [0, 1])</div><div class="line"># 绘制第二个图</div><div class="line">plt.subplot(2, 2, 2)</div><div class="line">plt.plot([0, 1], [0, 1])</div><div class="line"># 绘制第三个图</div><div class="line">plt.subplot(2, 2, 3)</div><div class="line">plt.plot([0, 1], [0, 1])</div><div class="line"># 绘制第四个图</div><div class="line">plt.subplot(2, 2, 4)</div><div class="line">plt.plot([0, 1], [0, 1])</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m121.png" alt="图像"></p>
<ul>
<li>Demo 2</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line"></div><div class="line">plt.figure()</div><div class="line"></div><div class="line"># 绘制第一个图</div><div class="line">plt.subplot(2, 1, 1)</div><div class="line">plt.plot([0, 1], [0, 1])</div><div class="line"># 绘制第二个图</div><div class="line">plt.subplot(2, 3, 4)</div><div class="line">plt.plot([0, 1], [0, 1])</div><div class="line"># 绘制第三个图</div><div class="line">plt.subplot(2, 3, 5)</div><div class="line">plt.plot([0, 1], [0, 1])</div><div class="line"># 绘制第四个图</div><div class="line">plt.subplot(2, 3, 6)</div><div class="line">plt.plot([0, 1], [0, 1])</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m122.png" alt="图像"></p>
]]></content>
    
    <summary type="html">
    
      matplotlib的基本用法(十二)——subplot绘制多图
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib的基本用法(十一)——绘制3D图</title>
    <link href="noahsnail.com/2017/05/03/2017-5-3-matplotlib%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E5%8D%81%E4%B8%80)%E2%80%94%E2%80%94%E7%BB%98%E5%88%B63D%E5%9B%BE/"/>
    <id>noahsnail.com/2017/05/03/2017-5-3-matplotlib的基本用法(十一)——绘制3D图/</id>
    <published>2017-05-03T01:21:20.000Z</published>
    <updated>2017-05-03T05:12:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要使用matplotlib进行3D图像的绘制。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line">import numpy as np</div><div class="line">from mpl_toolkits.mplot3d import Axes3D</div><div class="line"></div><div class="line"></div><div class="line"># 定义figure</div><div class="line">fig = plt.figure()</div><div class="line"># 将figure变为3d</div><div class="line">ax = Axes3D(fig)</div><div class="line"></div><div class="line"># 数据数目</div><div class="line">n = 256</div><div class="line"># 定义x, y</div><div class="line">x = np.arange(-4, 4, 0.25)</div><div class="line">y = np.arange(-4, 4, 0.25)</div><div class="line"></div><div class="line"># 生成网格数据</div><div class="line">X, Y = np.meshgrid(x, y)</div><div class="line"></div><div class="line"># 计算每个点对的长度</div><div class="line">R = np.sqrt(X ** 2 + Y ** 2)</div><div class="line"># 计算Z轴的高度</div><div class="line">Z = np.sin(R)</div><div class="line"></div><div class="line"># 绘制3D曲面</div><div class="line">ax.plot_surface(X, Y, Z, rstride = 1, cstride = 1, cmap = plt.get_cmap(&apos;rainbow&apos;))</div><div class="line"># 绘制从3D曲面到底部的投影</div><div class="line">ax.contour(X, Y, Z, zdim = &apos;z&apos;, offset = -2, cmap = &apos;rainbow&apos;)</div><div class="line"></div><div class="line"># 设置z轴的维度</div><div class="line">ax.set_zlim(-2, 2)</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m11.png" alt="图像"></p>
]]></content>
    
    <summary type="html">
    
      matplotlib的基本用法(十一)——绘制3D图
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib的基本用法(十)——绘制Image</title>
    <link href="noahsnail.com/2017/05/02/2017-5-2-matplotlib%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E5%8D%81)%E2%80%94%E2%80%94%E7%BB%98%E5%88%B6Image/"/>
    <id>noahsnail.com/2017/05/02/2017-5-2-matplotlib的基本用法(十)——绘制Image/</id>
    <published>2017-05-02T14:30:13.000Z</published>
    <updated>2017-05-03T01:20:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要使用matplotlib进行图像的绘制。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line">import numpy as np</div><div class="line"></div><div class="line"># 定义图像数据</div><div class="line">a = np.linspace(0, 1, 9).reshape(3, 3)</div><div class="line"># 显示图像数据</div><div class="line">plt.imshow(a, interpolation = &apos;nearest&apos;, cmap = &apos;bone&apos;, origin = &apos;lower&apos;)</div><div class="line"># 添加颜色条</div><div class="line">plt.colorbar()</div><div class="line"># 去掉坐标轴</div><div class="line">plt.xticks(())</div><div class="line">plt.yticks(())</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m10.png" alt="图像"></p>
]]></content>
    
    <summary type="html">
    
      matplotlib的基本用法(十)——绘制Image
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>scikit-learn的基本用法(一)——KNN算法的使用</title>
    <link href="noahsnail.com/2017/05/02/2017-5-2-scikit-learn%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E4%B8%80)%E2%80%94%E2%80%94KNN%E7%AE%97%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>noahsnail.com/2017/05/02/2017-5-2-scikit-learn的基本用法(一)——KNN算法的使用/</id>
    <published>2017-05-02T14:08:38.000Z</published>
    <updated>2017-05-02T14:10:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要使用scikit-learn中的KNN算法进行Iris数据集的分类。Iris也称鸢尾花卉数据集，是一类多重变量分析的数据集。通过花萼长度，花萼宽度，花瓣长度，花瓣宽度4个属性预测鸢尾花卉属于（Setosa，Versicolour，Virginica）三个种类中的哪一类。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">import numpy as np</div><div class="line">from sklearn import datasets</div><div class="line">from sklearn.cross_validation import train_test_split</div><div class="line">from sklearn.neighbors import KNeighborsClassifier</div><div class="line"></div><div class="line"># 加载iris数据集</div><div class="line">iris = datasets.load_iris()</div><div class="line"># 读取特征</div><div class="line">iris_X = iris.data</div><div class="line"># 读取分类标签</div><div class="line">iris_y = iris.target</div><div class="line"># 将数据分为训练、测试两部分</div><div class="line">X_train, X_test, y_train, y_test = train_test_split(iris_X, iris_y, test_size = 0.2)</div><div class="line"># 定义分类器</div><div class="line">knn = KNeighborsClassifier()</div><div class="line"># 进行分类</div><div class="line">knn.fit(X_train, y_train)</div><div class="line"># 计算预测值</div><div class="line">y_predict = knn.predict(X_test)</div><div class="line"># 计算准确率, 由于每次数据集划分不同, 可能不一样</div><div class="line">print np.sum(np.fabs(y_predict - y_test)) / float(len(y_test))</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">0.0666666666667</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      scikit-learn的基本用法(一)——KNN算法的使用
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib的基本用法(九)——绘制等高线图</title>
    <link href="noahsnail.com/2017/05/02/2017-5-2-matplotlib%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E4%B9%9D)%E2%80%94%E2%80%94%E7%BB%98%E5%88%B6%E7%AD%89%E9%AB%98%E7%BA%BF%E5%9B%BE/"/>
    <id>noahsnail.com/2017/05/02/2017-5-2-matplotlib的基本用法(九)——绘制等高线图/</id>
    <published>2017-05-02T13:39:50.000Z</published>
    <updated>2017-05-02T13:47:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要使用matplotlib进行等高线图的绘制。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line">import numpy as np</div><div class="line"></div><div class="line"># 定义等高线高度函数</div><div class="line">def f(x, y):</div><div class="line">    return (1 - x / 2 + x ** 5 + y ** 3) * np.exp(- x ** 2 - y ** 2)</div><div class="line"></div><div class="line"># 数据数目</div><div class="line">n = 256</div><div class="line"># 定义x, y</div><div class="line">x = np.linspace(-3, 3, n)</div><div class="line">y = np.linspace(-3, 3, n)</div><div class="line"></div><div class="line"># 生成网格数据</div><div class="line">X, Y = np.meshgrid(x, y)</div><div class="line"></div><div class="line"></div><div class="line"># 填充等高线的颜色, 8是等高线分为几部分</div><div class="line">plt.contourf(X, Y, f(X, Y), 8, alpha = 0.75, cmap = plt.cm.hot)</div><div class="line"># 绘制等高线</div><div class="line">C = plt.contour(X, Y, f(X, Y), 8, colors = &apos;black&apos;, linewidth = 0.5)</div><div class="line"># 绘制等高线数据</div><div class="line">plt.clabel(C, inline = True, fontsize = 10)</div><div class="line"></div><div class="line"># 去除坐标轴</div><div class="line">plt.xticks(())</div><div class="line">plt.yticks(())</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m9.png" alt="等高线图"></p>
]]></content>
    
    <summary type="html">
    
      matplotlib的基本用法(九)——绘制等高线图
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib的基本用法(八)——绘制柱状图</title>
    <link href="noahsnail.com/2017/05/02/2017-5-2-matplotlib%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E5%85%AB)%E2%80%94%E2%80%94%E7%BB%98%E5%88%B6%E6%9F%B1%E7%8A%B6%E5%9B%BE/"/>
    <id>noahsnail.com/2017/05/02/2017-5-2-matplotlib的基本用法(八)——绘制柱状图/</id>
    <published>2017-05-02T11:27:32.000Z</published>
    <updated>2017-05-02T13:40:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要使用matplotlib进行柱状图的绘制。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line">import numpy as np</div><div class="line"></div><div class="line"># 数据数目</div><div class="line">n = 10</div><div class="line">x = np.arange(n)</div><div class="line"># 生成数据, 均匀分布(0.5, 1.0)之间</div><div class="line">y1 = (1 - x / float(n)) * np.random.uniform(0.5, 1.0, n)</div><div class="line">y2 = (1 - x / float(n)) * np.random.uniform(0.5, 1.0, n)</div><div class="line"></div><div class="line"># 绘制柱状图, 向上</div><div class="line">plt.bar(x, y1, facecolor = &apos;blue&apos;, edgecolor = &apos;white&apos;)</div><div class="line"># 绘制柱状图, 向下</div><div class="line">plt.bar(x, -y2, facecolor = &apos;green&apos;, edgecolor = &apos;white&apos;)</div><div class="line"></div><div class="line"></div><div class="line">temp = zip(x, y2)</div><div class="line"># 在柱状图上显示具体数值, ha水平对齐, va垂直对齐</div><div class="line">for x, y in zip(x, y1):</div><div class="line">    plt.text(x + 0.05, y + 0.1, &apos;%.2f&apos; % y, ha = &apos;center&apos;, va = &apos;bottom&apos;)</div><div class="line"></div><div class="line">for x, y in temp:</div><div class="line">    plt.text(x + 0.05, -y - 0.1, &apos;%.2f&apos; % y, ha = &apos;center&apos;, va = &apos;bottom&apos;)</div><div class="line"></div><div class="line"># 设置坐标轴范围</div><div class="line">plt.xlim(-1, n)</div><div class="line">plt.ylim(-1.5, 1.5)</div><div class="line"># 去除坐标轴</div><div class="line">plt.xticks(())</div><div class="line">plt.yticks(())</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m8.png" alt="柱状图"></p>
]]></content>
    
    <summary type="html">
    
      matplotlib的基本用法(八)——绘制柱状图
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib的基本用法(七)——绘制散点图</title>
    <link href="noahsnail.com/2017/05/02/2017-5-2-matplotlib%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E4%B8%83)%E2%80%94%E2%80%94%E7%BB%98%E5%88%B6%E6%95%A3%E7%82%B9%E5%9B%BE/"/>
    <id>noahsnail.com/2017/05/02/2017-5-2-matplotlib的基本用法(七)——绘制散点图/</id>
    <published>2017-05-02T10:45:48.000Z</published>
    <updated>2017-05-02T10:50:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要使用matplotlib进行散点图的绘制。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">import numpy as np</div><div class="line">import matplotlib.pyplot as plt</div><div class="line"></div><div class="line"># 数据个数</div><div class="line">n = 1024</div><div class="line"># 均值为0, 方差为1的随机数</div><div class="line">x = np.random.normal(0, 1, n)</div><div class="line">y = np.random.normal(0, 1, n)</div><div class="line"></div><div class="line"># 计算颜色值</div><div class="line">color = np.arctan2(y, x)</div><div class="line"># 绘制散点图</div><div class="line">plt.scatter(x, y, s = 75, c = color, alpha = 0.5)</div><div class="line"># 设置坐标轴范围</div><div class="line">plt.xlim((-1.5, 1.5))</div><div class="line">plt.ylim((-1.5, 1.5))</div><div class="line"></div><div class="line"># 不显示坐标轴的值</div><div class="line">plt.xticks(())</div><div class="line">plt.yticks(())</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m7.png" alt="散点图"></p>
]]></content>
    
    <summary type="html">
    
      matplotlib的基本用法(七)——绘制散点图
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>Caffe的layer解析</title>
    <link href="noahsnail.com/2017/05/02/2017-5-2-Caffe%E7%9A%84layer%E8%A7%A3%E6%9E%90/"/>
    <id>noahsnail.com/2017/05/02/2017-5-2-Caffe的layer解析/</id>
    <published>2017-05-02T07:56:28.000Z</published>
    <updated>2017-05-02T08:39:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Caffe中的layer"><a href="#1-Caffe中的layer" class="headerlink" title="1. Caffe中的layer"></a>1. Caffe中的layer</h2><p>在Caffe中，神经网络Net是由一层层的神经网络层layer组合构建出来的，神经网络结构位于主要是在<code>.prototxt</code>文件中。Caffe中的layer分为Data Layers、Vision Layers、Recurrent Layers、Common Layers、Normalization Layers、Activation/Neuron Layers、Utility Layers、Loss Layers等。下面对这些layer进行一一的介绍。</p>
<h2 id="2-Data-Layer"><a href="#2-Data-Layer" class="headerlink" title="2. Data Layer"></a>2. Data Layer</h2><p>Data Layer是数据层，主要用来向神经网络中输入训练数据的，它支持的输入数据类型有：</p>
<ul>
<li><p>Image Data<br>读取原始图像数据</p>
</li>
<li><p>Database<br>从LEVELDB或LMDB中读取数据</p>
</li>
<li><p>HDF5 Input<br>读取HDF5数据，数据可以是任意维度的</p>
</li>
<li><p>HDF5 Output<br>输出HDF5数据</p>
</li>
<li><p>Input<br>通常在部署神经网络时使用</p>
</li>
<li><p>Window Data - read window data file.<br>存在硬盘上的图片，需要在一个txt里指定用于训练图片以及bounding box。</p>
</li>
<li><p>Memory Data<br>直接从内存中读取数据</p>
</li>
<li><p>Dummy Data<br>静态数据和调试</p>
</li>
</ul>
<p>Data Layer的定义如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">layer &#123;</div><div class="line">  name: &quot;data&quot;</div><div class="line">  type: &quot;Data&quot;</div><div class="line">  top: &quot;data&quot;</div><div class="line">  top: &quot;label&quot;</div><div class="line">  include &#123;</div><div class="line">    phase: TRAIN</div><div class="line">  &#125;</div><div class="line">  transform_param &#123;</div><div class="line">    mean_file: &quot;mean.binaryproto&quot;</div><div class="line">  &#125;</div><div class="line">  data_param &#123;</div><div class="line">    source: &quot;train_lmdb&quot;</div><div class="line">    batch_size: 32</div><div class="line">    backend: LMDB</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>name：用来定义layer的名字，没有限制。<br>type：layer的类型，具体类型可参考<a href="http://caffe.berkeleyvision.org/tutorial/layers.html" target="_blank" rel="external">http://caffe.berkeleyvision.org/tutorial/layers.html</a>。<br>top：layer的输出数据，由于是分类问题，因此有两个top，数据和标签。<br>bottom：layer的输入数据。<br>source：表示训练数据或测试数据的地址，必须有。<br>batch_size：一次训练或测试多少幅数据，必须有。<br>bakcend：可选，默认为LEVELDB。<br>include：表明该层属于训练阶段还是测试阶段，如果不指定，表示两个阶段都包括。</p>
]]></content>
    
    <summary type="html">
    
      Caffe的layer解析
    
    </summary>
    
      <category term="Caffe" scheme="noahsnail.com/categories/Caffe/"/>
    
    
      <category term="Caffe" scheme="noahsnail.com/tags/Caffe/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib的基本用法(六)——设置坐标轴label</title>
    <link href="noahsnail.com/2017/04/30/2017-4-30-matplotlib%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E5%85%AD)%E2%80%94%E2%80%94%E8%AE%BE%E7%BD%AE%E5%9D%90%E6%A0%87%E8%BD%B4label/"/>
    <id>noahsnail.com/2017/04/30/2017-4-30-matplotlib的基本用法(六)——设置坐标轴label/</id>
    <published>2017-04-30T07:20:48.000Z</published>
    <updated>2017-04-30T07:21:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要是关于matplotlib的一些基本用法。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line">import numpy as np</div><div class="line"></div><div class="line"># 绘制普通图像</div><div class="line">x = np.linspace(-3, 3, 50)</div><div class="line">y = 2 * x + 1</div><div class="line"></div><div class="line">plt.figure()</div><div class="line">plt.plot(x, y)</div><div class="line"></div><div class="line"># 将上、右边框去掉</div><div class="line">ax = plt.gca()</div><div class="line">ax.spines[&apos;right&apos;].set_color(&apos;none&apos;)</div><div class="line">ax.spines[&apos;top&apos;].set_color(&apos;none&apos;)</div><div class="line"></div><div class="line"># 设置x轴的位置及数据在坐标轴上的位置</div><div class="line">ax.xaxis.set_ticks_position(&apos;bottom&apos;)</div><div class="line">ax.spines[&apos;bottom&apos;].set_position((&apos;data&apos;, 0))</div><div class="line"># 设置y轴的位置及数据在坐标轴上的位置</div><div class="line">ax.yaxis.set_ticks_position(&apos;left&apos;)</div><div class="line">ax.spines[&apos;left&apos;].set_position((&apos;data&apos;, 0))</div><div class="line"></div><div class="line"># 设置坐标轴label的大小，背景色等信息</div><div class="line">for label in ax.get_xticklabels() + ax.get_yticklabels():</div><div class="line">    label.set_fontsize(12)</div><div class="line">    label.set_bbox(dict(facecolor = &apos;green&apos;, edgecolor = &apos;None&apos;, alpha = 0.7))</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m6.png" alt="设置结果图"></p>
]]></content>
    
    <summary type="html">
    
      matplotlib的基本用法(六)——设置坐标轴label
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib的基本用法(五)——添加annotation</title>
    <link href="noahsnail.com/2017/04/30/2017-4-30-matplotlib%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E4%BA%94)%E2%80%94%E2%80%94%E6%B7%BB%E5%8A%A0annotation/"/>
    <id>noahsnail.com/2017/04/30/2017-4-30-matplotlib的基本用法(五)——添加annotation/</id>
    <published>2017-04-30T05:03:10.000Z</published>
    <updated>2017-04-30T07:03:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要是关于matplotlib的一些基本用法。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line">import numpy as np</div><div class="line"></div><div class="line"># 绘制普通图像</div><div class="line">x = np.linspace(-3, 3, 50)</div><div class="line">y = 2 * x + 1</div><div class="line"></div><div class="line">plt.figure()</div><div class="line">plt.plot(x, y)</div><div class="line"></div><div class="line"># 将上、右边框去掉</div><div class="line">ax = plt.gca()</div><div class="line">ax.spines[&apos;right&apos;].set_color(&apos;none&apos;)</div><div class="line">ax.spines[&apos;top&apos;].set_color(&apos;none&apos;)</div><div class="line"></div><div class="line"># 设置x轴的位置及数据在坐标轴上的位置</div><div class="line">ax.xaxis.set_ticks_position(&apos;bottom&apos;)</div><div class="line">ax.spines[&apos;bottom&apos;].set_position((&apos;data&apos;, 0))</div><div class="line"># 设置y轴的位置及数据在坐标轴上的位置</div><div class="line">ax.yaxis.set_ticks_position(&apos;left&apos;)</div><div class="line">ax.spines[&apos;left&apos;].set_position((&apos;data&apos;, 0))</div><div class="line"></div><div class="line"># 定义(x0, y0)点</div><div class="line">x0 = 1</div><div class="line">y0 = 2 * x0 + 1</div><div class="line"></div><div class="line"># 绘制(x0, y0)点</div><div class="line">plt.scatter(x0, y0, s = 50, color = &apos;blue&apos;)</div><div class="line"># 绘制虚线</div><div class="line">plt.plot([x0, x0], [y0, 0], &apos;k--&apos;, lw = 2.5)</div><div class="line"># 绘制注解一</div><div class="line">plt.annotate(r&apos;$2 * x + 1 = %s$&apos; % y0, xy = (x0, y0), xycoords = &apos;data&apos;, xytext = (+30, -30), \</div><div class="line">             textcoords = &apos;offset points&apos;, fontsize = 16, arrowprops = dict(arrowstyle = &apos;-&gt;&apos;, connectionstyle = &apos;arc3, rad = .2&apos;))</div><div class="line"></div><div class="line"># 绘制注解二</div><div class="line">plt.text(-3, 3, r&apos;$Test\ text. \mu \sigma_i, \alpha_i$&apos;, fontdict = &#123;&apos;size&apos;: 16, &apos;color&apos;: &apos;red&apos;&#125;)</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/m5.png" alt="设置结果图"></p>
]]></content>
    
    <summary type="html">
    
      matplotlib的基本用法(五)——添加annotation
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>pandas的基本用法(八)——数据的绘制</title>
    <link href="noahsnail.com/2017/04/29/2017-4-29-pandas%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E5%85%AB)%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BB%98%E5%88%B6/"/>
    <id>noahsnail.com/2017/04/29/2017-4-29-pandas的基本用法(八)——数据的绘制/</id>
    <published>2017-04-29T14:18:12.000Z</published>
    <updated>2017-04-29T14:37:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要是关于pandas的一些数据的绘制。</p>
<h2 id="Demo-1"><a href="#Demo-1" class="headerlink" title="Demo 1"></a>Demo 1</h2><ul>
<li>Code</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">import pandas as pd</div><div class="line">import numpy as np</div><div class="line">import matplotlib.pyplot as plt</div><div class="line"></div><div class="line"># 定义Series</div><div class="line">data = pd.Series(np.random.randn(1000), index = np.arange(1000))</div><div class="line">print data</div><div class="line"># 累加数据</div><div class="line">data = data.cumsum()</div><div class="line"># 绘制数据</div><div class="line">data.plot()</div><div class="line"># 显示数据</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>Data</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">0      1.548346</div><div class="line">1      0.572742</div><div class="line">2      1.104705</div><div class="line">3      1.548704</div><div class="line">4      0.287301</div><div class="line">5     -0.656314</div><div class="line">6     -0.202801</div><div class="line">7     -0.196791</div><div class="line">8      0.096911</div><div class="line">9     -0.113942</div><div class="line">10    -0.883673</div><div class="line">11     1.501955</div><div class="line">12    -0.711122</div><div class="line">13     0.142911</div><div class="line">14    -0.941701</div><div class="line">15     1.522272</div><div class="line">16     0.610483</div><div class="line">17    -0.219638</div><div class="line">18     1.745611</div><div class="line">19     0.031911</div><div class="line">20     0.889913</div><div class="line">21     0.771158</div><div class="line">22    -0.586174</div><div class="line">23     0.873769</div><div class="line">24    -2.186166</div><div class="line">25     1.643832</div><div class="line">26     0.522218</div><div class="line">27    -0.301171</div><div class="line">28    -1.128542</div><div class="line">29     0.085811</div><div class="line">         ...   </div><div class="line">970   -0.823560</div><div class="line">971    0.828570</div><div class="line">972    0.344901</div><div class="line">973   -1.700792</div><div class="line">974   -0.458375</div><div class="line">975    0.846068</div><div class="line">976    1.054396</div><div class="line">977   -0.338136</div><div class="line">978    1.039985</div><div class="line">979    0.132224</div><div class="line">980   -0.152097</div><div class="line">981    1.034157</div><div class="line">982   -0.950993</div><div class="line">983    1.934781</div><div class="line">984    0.301666</div><div class="line">985   -0.910372</div><div class="line">986    0.606312</div><div class="line">987    1.562350</div><div class="line">988    0.979057</div><div class="line">989    0.262618</div><div class="line">990    0.105402</div><div class="line">991    0.352259</div><div class="line">992    0.462557</div><div class="line">993   -0.686371</div><div class="line">994    1.125795</div><div class="line">995   -1.202305</div><div class="line">996   -0.879454</div><div class="line">997    0.479948</div><div class="line">998   -0.058433</div><div class="line">999    1.150558</div><div class="line">dtype: float64</div></pre></td></tr></table></figure>
<ul>
<li>Image</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/p1.png" alt="Image"></p>
<h2 id="Demo-2"><a href="#Demo-2" class="headerlink" title="Demo 2"></a>Demo 2</h2><ul>
<li>Code</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># 定义DataFrame</div><div class="line">data = pd.DataFrame(np.random.randn(1000, 4), index = np.arange(1000), columns = list(&apos;ABCD&apos;))</div><div class="line">print data</div><div class="line"># 累加数据</div><div class="line">data = data.cumsum()</div><div class="line"># print data</div><div class="line"># 绘制数据</div><div class="line">data.plot()</div><div class="line"># 显示数据</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>Data</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">            A         B         C         D</div><div class="line">0    0.188169 -0.410177 -0.035167 -0.632530</div><div class="line">1    1.902968 -0.253942  0.116262 -0.409900</div><div class="line">2   -0.477557 -0.544720  0.475352 -0.763175</div><div class="line">3   -0.131545  0.276950 -0.309663 -1.704675</div><div class="line">4   -0.497051 -0.786458  0.142589 -1.658723</div><div class="line">5   -1.219892 -2.844160  0.923590  1.463719</div><div class="line">6   -0.729045 -1.040011 -0.453982 -0.589323</div><div class="line">7    1.235946 -0.616109 -0.160319 -1.101710</div><div class="line">8    0.064108 -0.880624  0.291627 -0.481524</div><div class="line">9    1.178941 -0.812158 -0.440956  0.017456</div><div class="line">10   0.246466  1.173672 -1.010398  0.493644</div><div class="line">11   0.228121 -0.715523  0.287755 -0.227716</div><div class="line">12   0.435218 -1.112818  1.938080 -0.348133</div><div class="line">13  -1.154960  0.090186 -0.365532 -0.513318</div><div class="line">14   1.061165 -0.040768 -0.994464  1.183172</div><div class="line">15   0.138335  0.690717  0.485866 -0.014977</div><div class="line">16   0.938048  0.251487  0.009421 -0.809593</div><div class="line">17  -1.480628 -0.270541  0.882366 -1.808014</div><div class="line">18  -1.122170  0.791330 -1.122514 -1.248467</div><div class="line">19   0.736545  1.094979 -0.926841 -0.223580</div><div class="line">20   0.439745  0.505928 -0.425728  0.306738</div><div class="line">21   0.117386 -3.699946  0.050963 -1.166935</div><div class="line">22  -1.433574  0.311665  2.226888 -1.139630</div><div class="line">23   1.641118 -0.198970 -0.240798  0.720337</div><div class="line">24   0.722513  1.714796 -0.542274  0.443971</div><div class="line">25   0.154177  0.701450  0.832888 -1.898574</div><div class="line">26  -0.713805 -1.184821 -0.531134  0.068217</div><div class="line">27   0.694963 -0.318380  1.437368  0.213080</div><div class="line">28   0.331043  1.892780 -0.256899 -1.189912</div><div class="line">29  -0.247650  1.601953 -1.695998 -1.001989</div><div class="line">..        ...       ...       ...       ...</div><div class="line">970  1.096683  0.796003  0.258615 -1.275517</div><div class="line">971 -1.302741  1.864113 -0.753244 -0.035786</div><div class="line">972 -0.259019  0.760312 -1.273606  0.896497</div><div class="line">973 -0.060886  1.100344  2.051858 -0.898953</div><div class="line">974  0.058918  0.123978 -0.534120  1.256028</div><div class="line">975 -0.813877 -0.344310 -1.149161  0.768660</div><div class="line">976 -0.234716 -1.039258  0.592899  0.662823</div><div class="line">977  0.353870 -0.536609 -1.078631  1.716869</div><div class="line">978 -2.455930 -0.022458  1.159104  1.597242</div><div class="line">979 -1.318595 -0.716460  1.254460 -2.477972</div><div class="line">980 -0.655070 -1.299694  0.442306  0.685829</div><div class="line">981 -0.242390  0.495463 -0.746983  1.224797</div><div class="line">982 -0.452496 -0.961725 -0.795946  1.296465</div><div class="line">983 -0.118532  0.136311 -0.311137 -0.205128</div><div class="line">984 -0.395279  0.646056  1.757899  0.089445</div><div class="line">985  1.459979  0.024268 -0.294394  1.992585</div><div class="line">986  0.915223 -0.313486  0.873132 -1.046711</div><div class="line">987 -1.483945  0.520361  0.728229  1.279807</div><div class="line">988  1.496952  0.793115 -0.717488 -0.367732</div><div class="line">989 -0.913652 -1.891394 -0.692108 -0.478300</div><div class="line">990 -1.384200  0.167642  0.077620  0.741487</div><div class="line">991 -0.895972 -0.393196 -0.694417 -1.110403</div><div class="line">992  1.045946 -0.618238  1.229456  0.467488</div><div class="line">993 -0.199291 -0.199487  1.714675  0.371975</div><div class="line">994  0.653998  0.548682  0.598073 -0.668729</div><div class="line">995 -0.522661  1.547213  0.684786  0.991293</div><div class="line">996 -0.682826  1.844690 -0.577090  0.440919</div><div class="line">997 -0.935643 -0.264333  1.067578  0.677179</div><div class="line">998  0.957670 -1.024795  0.607110 -0.475680</div><div class="line">999 -0.854264 -0.680246 -0.166721 -0.394088</div><div class="line"></div><div class="line">[1000 rows x 4 columns]</div></pre></td></tr></table></figure>
<ul>
<li>Image</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/p2.png" alt="Image"></p>
<h2 id="Demo-3"><a href="#Demo-3" class="headerlink" title="Demo 3"></a>Demo 3</h2><ul>
<li>Code</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 绘制散点图</div><div class="line">ax = data.plot.scatter(x = &apos;A&apos;, y = &apos;B&apos;, color = &apos;DarkBlue&apos;)</div><div class="line">data.plot.scatter(x = &apos;A&apos;, y = &apos;C&apos;, color = &apos;DarkGreen&apos;, ax = ax)</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>Image</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/p3.png" alt="Image"></p>
]]></content>
    
    <summary type="html">
    
      pandas的基本用法(八)——数据的绘制
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>pandas的基本用法(七)——合并数据merge</title>
    <link href="noahsnail.com/2017/04/29/2017-4-29-pandas%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E4%B8%83)%E2%80%94%E2%80%94%E5%90%88%E5%B9%B6%E6%95%B0%E6%8D%AEmerge/"/>
    <id>noahsnail.com/2017/04/29/2017-4-29-pandas的基本用法(七)——合并数据merge/</id>
    <published>2017-04-29T13:35:35.000Z</published>
    <updated>2017-04-29T14:02:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要是关于pandas的一些基本用法。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># _*_ coding: utf-8 _*_</div><div class="line"></div><div class="line">import pandas as pd</div><div class="line">import numpy as np</div><div class="line"></div><div class="line"></div><div class="line"># Test 1</div><div class="line"># 定义数据</div><div class="line">left = pd.DataFrame(&#123;&apos;key&apos;: [&apos;K0&apos;, &apos;K1&apos;, &apos;K2&apos;, &apos;K3&apos;],</div><div class="line">                    &apos;A&apos;: [&apos;A0&apos;, &apos;A1&apos;, &apos;A2&apos;, &apos;A3&apos;], </div><div class="line">                    &apos;B&apos;: [&apos;B0&apos;, &apos;B1&apos;, &apos;B2&apos;, &apos;B3&apos;]&#125;)</div><div class="line">right = pd.DataFrame(&#123;&apos;key&apos;: [&apos;K0&apos;, &apos;K1&apos;, &apos;K2&apos;, &apos;K3&apos;],</div><div class="line">                    &apos;C&apos;: [&apos;C0&apos;, &apos;C1&apos;, &apos;C2&apos;, &apos;C3&apos;], </div><div class="line">                    &apos;D&apos;: [&apos;D0&apos;, &apos;D1&apos;, &apos;D2&apos;, &apos;D3&apos;]&#125;)</div><div class="line"></div><div class="line">print left</div><div class="line">print right</div><div class="line"></div><div class="line"># merge合并</div><div class="line">res = pd.merge(left, right, on = &apos;key&apos;)</div><div class="line">print res</div><div class="line"></div><div class="line"># Test 1 result</div><div class="line">    A   B key</div><div class="line">0  A0  B0  K0</div><div class="line">1  A1  B1  K1</div><div class="line">2  A2  B2  K2</div><div class="line">3  A3  B3  K3</div><div class="line">    C   D key</div><div class="line">0  C0  D0  K0</div><div class="line">1  C1  D1  K1</div><div class="line">2  C2  D2  K2</div><div class="line">3  C3  D3  K3</div><div class="line"></div><div class="line">    A   B key   C   D</div><div class="line">0  A0  B0  K0  C0  D0</div><div class="line">1  A1  B1  K1  C1  D1</div><div class="line">2  A2  B2  K2  C2  D2</div><div class="line">3  A3  B3  K3  C3  D3</div><div class="line"></div><div class="line"># Test 2</div><div class="line"># 定义数据</div><div class="line">left = pd.DataFrame(&#123;&apos;key1&apos;: [&apos;K0&apos;, &apos;K1&apos;, &apos;K2&apos;, &apos;K3&apos;],</div><div class="line">                     &apos;key2&apos;: [&apos;K0&apos;, &apos;K1&apos;, &apos;K2&apos;, &apos;K3&apos;],</div><div class="line">                    &apos;A&apos;: [&apos;A0&apos;, &apos;A1&apos;, &apos;A2&apos;, &apos;A3&apos;], </div><div class="line">                    &apos;B&apos;: [&apos;B0&apos;, &apos;B1&apos;, &apos;B2&apos;, &apos;B3&apos;]&#125;)</div><div class="line">right = pd.DataFrame(&#123;&apos;key1&apos;: [&apos;K0&apos;, &apos;K1&apos;, &apos;K2&apos;, &apos;K3&apos;],</div><div class="line">                      &apos;key2&apos;: [&apos;K0&apos;, &apos;K1&apos;, &apos;K2&apos;, &apos;K4&apos;],</div><div class="line">                    &apos;C&apos;: [&apos;C0&apos;, &apos;C1&apos;, &apos;C2&apos;, &apos;C3&apos;], </div><div class="line">                    &apos;D&apos;: [&apos;D0&apos;, &apos;D1&apos;, &apos;D2&apos;, &apos;D3&apos;]&#125;)</div><div class="line"></div><div class="line">print left</div><div class="line">print right</div><div class="line"># 合并两列, 默认方法是how=inner, 只合并相同的部分, how的取值可以为[&apos;left&apos;, &apos;right&apos;, &apos;outer&apos;, &apos;inner&apos;]</div><div class="line">res = pd.merge(left, right, on = [&apos;key1&apos;, &apos;key2&apos;])</div><div class="line">print res</div><div class="line"></div><div class="line"># Test 2 result</div><div class="line">    A   B key1 key2</div><div class="line">0  A0  B0   K0   K0</div><div class="line">1  A1  B1   K1   K1</div><div class="line">2  A2  B2   K2   K2</div><div class="line">3  A3  B3   K3   K3</div><div class="line">    C   D key1 key2</div><div class="line">0  C0  D0   K0   K0</div><div class="line">1  C1  D1   K1   K1</div><div class="line">2  C2  D2   K2   K2</div><div class="line">3  C3  D3   K3   K4</div><div class="line">    A   B key1 key2   C   D</div><div class="line">0  A0  B0   K0   K0  C0  D0</div><div class="line">1  A1  B1   K1   K1  C1  D1</div><div class="line">2  A2  B2   K2   K2  C2  D2</div><div class="line"></div><div class="line"># Test 3</div><div class="line"># 通过indicator表明merge的方式</div><div class="line">res = pd.merge(left, right, on = [&apos;key1&apos;, &apos;key2&apos;], how = &apos;outer&apos;, indicator = True)</div><div class="line">print res</div><div class="line"></div><div class="line"># 修改indicator的名字</div><div class="line">res = pd.merge(left, right, on = [&apos;key1&apos;, &apos;key2&apos;], how = &apos;outer&apos;, indicator = &apos;indicator&apos;)</div><div class="line">print res</div><div class="line"></div><div class="line"># Test 3 result</div><div class="line">     A    B key1 key2    C    D      _merge</div><div class="line">0   A0   B0   K0   K0   C0   D0        both</div><div class="line">1   A1   B1   K1   K1   C1   D1        both</div><div class="line">2   A2   B2   K2   K2   C2   D2        both</div><div class="line">3   A3   B3   K3   K3  NaN  NaN   left_only</div><div class="line">4  NaN  NaN   K3   K4   C3   D3  right_only</div><div class="line"></div><div class="line">     A    B key1 key2    C    D   indicator</div><div class="line">0   A0   B0   K0   K0   C0   D0        both</div><div class="line">1   A1   B1   K1   K1   C1   D1        both</div><div class="line">2   A2   B2   K2   K2   C2   D2        both</div><div class="line">3   A3   B3   K3   K3  NaN  NaN   left_only</div><div class="line">4  NaN  NaN   K3   K4   C3   D3  right_only</div><div class="line"></div><div class="line"># Test 4</div><div class="line"># 定义数据</div><div class="line">left = pd.DataFrame(&#123; &apos;A&apos;: [&apos;A0&apos;, &apos;A1&apos;, &apos;A2&apos;, &apos;A3&apos;], </div><div class="line">                      &apos;B&apos;: [&apos;B0&apos;, &apos;B1&apos;, &apos;B2&apos;, &apos;B3&apos;]&#125;,</div><div class="line">                      index = [&apos;K0&apos;, &apos;K1&apos;, &apos;K2&apos;, &apos;K3&apos;])</div><div class="line">right = pd.DataFrame(&#123;&apos;C&apos;: [&apos;C0&apos;, &apos;C1&apos;, &apos;C2&apos;, &apos;C3&apos;], </div><div class="line">                      &apos;D&apos;: [&apos;D0&apos;, &apos;D1&apos;, &apos;D2&apos;, &apos;D3&apos;]&#125;,</div><div class="line">                      index = [&apos;K0&apos;, &apos;K1&apos;, &apos;K2&apos;, &apos;K3&apos;])</div><div class="line"></div><div class="line">print left</div><div class="line">print right</div><div class="line"></div><div class="line"># merge数据</div><div class="line">res = pd.merge(left, right, left_index = True, right_index = True, how = &apos;outer&apos;)</div><div class="line">print res</div><div class="line"></div><div class="line"># Test 4 result</div><div class="line">     A   B</div><div class="line">K0  A0  B0</div><div class="line">K1  A1  B1</div><div class="line">K2  A2  B2</div><div class="line">K3  A3  B3</div><div class="line">     C   D</div><div class="line">K0  C0  D0</div><div class="line">K1  C1  D1</div><div class="line">K2  C2  D2</div><div class="line">K3  C3  D3</div><div class="line"></div><div class="line">     A   B   C   D</div><div class="line">K0  A0  B0  C0  D0</div><div class="line">K1  A1  B1  C1  D1</div><div class="line">K2  A2  B2  C2  D2</div><div class="line">K3  A3  B3  C3  D3</div><div class="line"></div><div class="line"># Test 5</div><div class="line"># 定义数据</div><div class="line">left = pd.DataFrame(&#123; &apos;A&apos;: [&apos;A0&apos;, &apos;A1&apos;, &apos;A2&apos;, &apos;A3&apos;], </div><div class="line">                      &apos;B&apos;: [&apos;B0&apos;, &apos;B1&apos;, &apos;B2&apos;, &apos;B3&apos;]&#125;)</div><div class="line">right = pd.DataFrame(&#123;&apos;A&apos;: [&apos;A0&apos;, &apos;A1&apos;, &apos;A2&apos;, &apos;A3&apos;], </div><div class="line">                      &apos;B&apos;: [&apos;D0&apos;, &apos;D1&apos;, &apos;D2&apos;, &apos;D3&apos;]&#125;)</div><div class="line"></div><div class="line">print left</div><div class="line">print right</div><div class="line"></div><div class="line"># 区分两个B</div><div class="line">res = pd.merge(left, right, on = &apos;A&apos;, how = &apos;inner&apos;, suffixes = [&apos;_left&apos;, &apos;_right&apos;])</div><div class="line">print res</div><div class="line"></div><div class="line"># Test 5 result</div><div class="line">    A   B</div><div class="line">0  A0  B0</div><div class="line">1  A1  B1</div><div class="line">2  A2  B2</div><div class="line">3  A3  B3</div><div class="line">    A   B</div><div class="line">0  A0  D0</div><div class="line">1  A1  D1</div><div class="line">2  A2  D2</div><div class="line">3  A3  D3</div><div class="line">    A B_left B_right</div><div class="line">0  A0     B0      D0</div><div class="line">1  A1     B1      D1</div><div class="line">2  A2     B2      D2</div><div class="line">3  A3     B3      D3</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      pandas的基本用法(七)——合并数据merge
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>matplotlib的基本用法(四)——设置legend图例</title>
    <link href="noahsnail.com/2017/04/29/2017-4-29-matplotlib%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95(%E5%9B%9B)%E2%80%94%E2%80%94%E8%AE%BE%E7%BD%AElegend%E5%9B%BE%E4%BE%8B/"/>
    <id>noahsnail.com/2017/04/29/2017-4-29-matplotlib的基本用法(四)——设置legend图例/</id>
    <published>2017-04-29T03:56:42.000Z</published>
    <updated>2017-04-29T04:07:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<p>本文主要是关于matplotlib的一些基本用法。</p>
<ul>
<li>Demo</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">import matplotlib.pyplot as plt</div><div class="line">import numpy as np</div><div class="line"></div><div class="line"># 绘制普通图像</div><div class="line">x = np.linspace(-1, 1, 50)</div><div class="line">y1 = 2 * x + 1</div><div class="line">y2 = x**2</div><div class="line"></div><div class="line">plt.figure()</div><div class="line"># 在绘制时设置lable, 逗号是必须的</div><div class="line">l1, = plt.plot(x, y1, label = &apos;line&apos;)</div><div class="line">l2, = plt.plot(x, y2, label = &apos;parabola&apos;, color = &apos;red&apos;, linewidth = 1.0, linestyle = &apos;--&apos;)</div><div class="line"></div><div class="line"># 设置坐标轴的取值范围</div><div class="line">plt.xlim((-1, 1))</div><div class="line">plt.ylim((0, 2))</div><div class="line"></div><div class="line"># 设置坐标轴的lable</div><div class="line">plt.xlabel(&apos;X axis&apos;)</div><div class="line">plt.ylabel(&apos;Y axis&apos;)</div><div class="line"></div><div class="line"># 设置x坐标轴刻度, 原来为0.25, 修改后为0.5</div><div class="line">plt.xticks(np.linspace(-1, 1, 5))</div><div class="line"># 设置y坐标轴刻度及标签, $$是设置字体</div><div class="line">plt.yticks([0, 0.5], [&apos;$minimum$&apos;, &apos;normal&apos;])</div><div class="line"></div><div class="line"># 设置legend</div><div class="line">plt.legend(handles = [l1, l2,], labels = [&apos;a&apos;, &apos;b&apos;], loc = &apos;best&apos;)</div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="http://ocs628urt.bkt.clouddn.com/t4.png" alt="设置结果图"></p>
]]></content>
    
    <summary type="html">
    
      matplotlib的基本用法(四)——设置legend图例
    
    </summary>
    
      <category term="tensorflow" scheme="noahsnail.com/categories/tensorflow/"/>
    
    
      <category term="tensorflow" scheme="noahsnail.com/tags/tensorflow/"/>
    
  </entry>
  
</feed>
