<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SnailTyan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://noahsnail.com/"/>
  <updated>2021-08-11T07:50:34.662Z</updated>
  <id>http://noahsnail.com/</id>
  
  <author>
    <name>Tyan</name>
    <email>Tyan.Liu.Git@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Leetcode 1779. Find Nearest Point That Has the Same X or Y Coordinate</title>
    <link href="http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-1779-Find-Nearest-Point-That-Has-the-Same-X-or-Y-Coordinate/"/>
    <id>http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-1779-Find-Nearest-Point-That-Has-the-Same-X-or-Y-Coordinate/</id>
    <published>2021-08-11T07:48:37.534Z</published>
    <updated>2021-08-11T07:50:34.662Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Find_Nearest_Point_That_Has_the_Same_X_or_Y_Coordinate.png" alt="Find Nearest Point That Has the Same X or Y Coordinate"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，碰到横纵坐标相等的点计算曼哈顿距离，并与最短距离比较，如果更短，则更新最短距离的点的索引以及最短距离。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">nearestValidPoint</span><span class="params">(self, x: int, y: int, points: List[List[int]])</span> -&gt; int:</span></div><div class="line">        index = <span class="number">-1</span></div><div class="line">        minimum = float(<span class="string">'inf'</span>)</div><div class="line">        <span class="keyword">for</span> i, (x1, y1) <span class="keyword">in</span> enumerate(points):</div><div class="line">            <span class="keyword">if</span> x == x1:</div><div class="line">                distance = abs(y - y1)</div><div class="line">                <span class="keyword">if</span> distance &lt; minimum:</div><div class="line">                    minimum = distance</div><div class="line">                    index = i</div><div class="line">            <span class="keyword">elif</span> y == y1:</div><div class="line">                distance = abs(x - x1)</div><div class="line">                <span class="keyword">if</span> distance &lt; minimum:</div><div class="line">                    minimum = distance</div><div class="line">                    index = i</div><div class="line">        <span class="keyword">return</span> index</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-nearest-point-that-has-the-same-x-or-y-coordinate/" target="_blank" rel="external">https://leetcode.com/problems/find-nearest-point-that-has-the-same-x-or-y-coordinate/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1779. Find Nearest Point That Has the Same X or Y Coordinate
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 973. K Closest Points to Origin</title>
    <link href="http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-973-K-Closest-Points-to-Origin/"/>
    <id>http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-973-K-Closest-Points-to-Origin/</id>
    <published>2021-08-11T07:31:46.983Z</published>
    <updated>2021-08-11T07:33:41.305Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/K_Closest_Points_to_Origin.png" alt="K Closest Points to Origin"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，依次计算与原点的距离，然后排序取前<code>k</code>个即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">kClosest</span><span class="params">(self, points: List[List[int]], k: int)</span> -&gt; List[List[int]]:</span></div><div class="line">        n = len(points)</div><div class="line">        distances = [<span class="number">0</span>] * n</div><div class="line">        <span class="keyword">for</span> index, (x, y) <span class="keyword">in</span> enumerate(points):</div><div class="line">            distances[index] = x * x + y * y</div><div class="line">        indexes = sorted(list(range(n)), key=<span class="keyword">lambda</span> i: distances[i])</div><div class="line">        <span class="keyword">return</span> [points[i] <span class="keyword">for</span> i <span class="keyword">in</span> indexes[:k]]</div><div class="line">        <span class="comment"># return sorted(points, key=lambda x: x[0] * x[0] + x[1] * x[1])[:k]</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/k-closest-points-to-origin/" target="_blank" rel="external">https://leetcode.com/problems/k-closest-points-to-origin/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 973. K Closest Points to Origin
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1716. Calculate Money in Leetcode Bank</title>
    <link href="http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-1716-Calculate-Money-in-Leetcode-Bank/"/>
    <id>http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-1716-Calculate-Money-in-Leetcode-Bank/</id>
    <published>2021-08-11T07:01:32.342Z</published>
    <updated>2021-08-11T07:07:59.464Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Calculate_Money_in_Leetcode_Bank.png" alt="Calculate Money in Leetcode Bank"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用两个变量<code>monday</code>和<code>others</code>表示周一和其它天，由于一周是7天，因此遍历时当碰到当天能整除<code>7</code>时，表示是周一，当天存钱数量为<code>monday+1</code>，同时更新<code>monday</code>和<code>others</code>值，当不能整除时，当天存钱数量为<code>others+1</code>，更新<code>others</code>值，每天的钱数累加到<code>total</code>中即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">totalMoney</span><span class="params">(self, n: int)</span> -&gt; int:</span></div><div class="line">        total = <span class="number">0</span></div><div class="line">        monday = <span class="number">0</span></div><div class="line">        week = <span class="number">7</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            <span class="keyword">if</span> i % week == <span class="number">0</span>:</div><div class="line">                current = monday + <span class="number">1</span></div><div class="line">                monday = current</div><div class="line">                others = current</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                current = others + <span class="number">1</span></div><div class="line">                others = current</div><div class="line">            total += current</div><div class="line">        <span class="keyword">return</span> total</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/calculate-money-in-leetcode-bank/" target="_blank" rel="external">https://leetcode.com/problems/calculate-money-in-leetcode-bank/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1716. Calculate Money in Leetcode Bank
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1545. Find Kth Bit in Nth Binary String</title>
    <link href="http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-1545-Find-Kth-Bit-in-Nth-Binary-String/"/>
    <id>http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-1545-Find-Kth-Bit-in-Nth-Binary-String/</id>
    <published>2021-08-11T05:19:58.351Z</published>
    <updated>2021-08-11T05:43:46.312Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Find_Kth_Bit_in_Nth_Binary_String.png" alt="Find Kth Bit in Nth Binary String"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，依次求出<code>Si</code>，返回对应的第<code>k</code>位即可。Version 2进行了优化，当字符串的长度大于等于<code>k</code>时，第<code>k</code>位字符就已经可以确定并返回了，不需要执行到<code>Sn</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findKthBit</span><span class="params">(self, n: int, k: int)</span> -&gt; str:</span></div><div class="line">        pre = <span class="string">'0'</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</div><div class="line">            current = pre + <span class="string">'1'</span> + self.invert(pre)[::<span class="number">-1</span>]</div><div class="line">            pre = current</div><div class="line">        <span class="keyword">return</span> pre[k<span class="number">-1</span>]</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">invert</span><span class="params">(self, s)</span>:</span></div><div class="line">        result = <span class="string">''</span></div><div class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</div><div class="line">            <span class="keyword">if</span> ch == <span class="string">'1'</span>:</div><div class="line">                result += <span class="string">'0'</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result += <span class="string">'1'</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findKthBit</span><span class="params">(self, n: int, k: int)</span> -&gt; str:</span></div><div class="line">        pre = <span class="string">'0'</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</div><div class="line">            <span class="keyword">if</span> len(pre) &lt; k:</div><div class="line">                current = pre + <span class="string">'1'</span> + self.invert(pre)[::<span class="number">-1</span>]</div><div class="line">                pre = current</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">return</span> pre[k<span class="number">-1</span>]</div><div class="line">        <span class="keyword">return</span> pre[k<span class="number">-1</span>]</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">invert</span><span class="params">(self, s)</span>:</span></div><div class="line">        result = <span class="string">''</span></div><div class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</div><div class="line">            <span class="keyword">if</span> ch == <span class="string">'1'</span>:</div><div class="line">                result += <span class="string">'0'</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result += <span class="string">'1'</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-kth-bit-in-nth-binary-string/" target="_blank" rel="external">https://leetcode.com/problems/find-kth-bit-in-nth-binary-string/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1545. Find Kth Bit in Nth Binary String
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1324. Print Words Vertically</title>
    <link href="http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-1324-Print-Words-Vertically/"/>
    <id>http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-1324-Print-Words-Vertically/</id>
    <published>2021-08-11T03:19:58.909Z</published>
    <updated>2021-08-11T05:04:27.653Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Print_Words_Vertically.png" alt="Print Words Vertically"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先将字符串按空格分开，然后找到最长的子串长度，遍历长度构造结果子串，注意每个子串后面的空格要去掉。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printVertically</span><span class="params">(self, s: str)</span> -&gt; List[str]:</span></div><div class="line">        result = []</div><div class="line">        words = s.split(<span class="string">' '</span>)</div><div class="line">        n = max(list(map(len, words)))</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            temp = <span class="string">''</span></div><div class="line">            <span class="keyword">for</span> word <span class="keyword">in</span> words:</div><div class="line">                <span class="keyword">if</span> i &lt; len(word):</div><div class="line">                    temp += word[i]</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    temp += <span class="string">' '</span></div><div class="line">            result.append(temp.rstrip())</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/print-words-vertically/" target="_blank" rel="external">https://leetcode.com/problems/print-words-vertically/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1324. Print Words Vertically
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1154. Day of the Year</title>
    <link href="http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-1154-Day-of-the-Year/"/>
    <id>http://noahsnail.com/2021/08/11/2021-08-11-Leetcode-1154-Day-of-the-Year/</id>
    <published>2021-08-11T01:48:56.557Z</published>
    <updated>2021-08-11T03:08:43.734Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Day_of_the_Year.png" alt="Day of the Year"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先将年、月、日分离出来，然后根据月份和日期累加天数，最后判断时闰年的话总天数加<code>1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dayOfYear</span><span class="params">(self, date: str)</span> -&gt; int:</span></div><div class="line">        year, month, day = map(int, date.split(<span class="string">'-'</span>))</div><div class="line">        months = [<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>]</div><div class="line">        days = day</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(month):</div><div class="line">            days += months[i]</div><div class="line">        <span class="keyword">if</span> month &gt; <span class="number">2</span> <span class="keyword">and</span> (year % <span class="number">400</span> == <span class="number">0</span> <span class="keyword">or</span> (year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span>)):</div><div class="line">            days += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> days</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/day-of-the-year/" target="_blank" rel="external">https://leetcode.com/problems/day-of-the-year/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1154. Day of the Year
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1486. XOR Operation in an Array</title>
    <link href="http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1486-XOR-Operation-in-an-Array/"/>
    <id>http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1486-XOR-Operation-in-an-Array/</id>
    <published>2021-08-10T09:56:03.375Z</published>
    <updated>2021-08-11T01:40:50.529Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/XOR_Operation_in_an_Array.png" alt="XOR Operation in an Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，初始值设为<code>0</code>，因为任何数异或<code>0</code>都不改变其值，按规则依次计算数组中的值，然后进行异或运算即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">xorOperation</span><span class="params">(self, n: int, start: int)</span> -&gt; int:</span></div><div class="line">        result = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            x = start + <span class="number">2</span> * i</div><div class="line">            result ^= x</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/xor-operation-in-an-array/" target="_blank" rel="external">https://leetcode.com/problems/xor-operation-in-an-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1486. XOR Operation in an Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1688. Count of Matches in Tournament</title>
    <link href="http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1688-Count-of-Matches-in-Tournament/"/>
    <id>http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1688-Count-of-Matches-in-Tournament/</id>
    <published>2021-08-10T09:47:47.832Z</published>
    <updated>2021-08-10T09:49:55.467Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Count_of_Matches_in_Tournament.png" alt="Count of Matches in Tournament"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，按讲述的规则实现即可，最后其实会发现结果始终是<code>n-1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numberOfMatches</span><span class="params">(self, n: int)</span> -&gt; int:</span></div><div class="line">        total = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> n != <span class="number">1</span>:</div><div class="line">            matches = n // <span class="number">2</span></div><div class="line">            total += matches</div><div class="line">            <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">                n = matches</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                n = matches + <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> total</div><div class="line">        <span class="comment"># return n - 1</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/count-of-matches-in-tournament/" target="_blank" rel="external">https://leetcode.com/problems/count-of-matches-in-tournament/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1688. Count of Matches in Tournament
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1822. Sign of the Product of an Array</title>
    <link href="http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1822-Sign-of-the-Product-of-an-Array/"/>
    <id>http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1822-Sign-of-the-Product-of-an-Array/</id>
    <published>2021-08-10T07:33:51.722Z</published>
    <updated>2021-08-10T07:38:03.741Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Sign_of_the_Product_of_an_Array.png" alt="Sign of the Product of an Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，碰到<code>0</code>直接返回<code>0</code>，计数负数的个数，如果负数个数时奇数返回<code>-1</code>，偶数返回<code>1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">arraySign</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</div><div class="line">            <span class="keyword">if</span> num == <span class="number">0</span>:</div><div class="line">                <span class="keyword">return</span> <span class="number">0</span></div><div class="line">            <span class="keyword">elif</span> num &lt; <span class="number">0</span>:</div><div class="line">                count += <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> count % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">-1</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">arraySign</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        result = <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</div><div class="line">            <span class="keyword">if</span> num == <span class="number">0</span>:</div><div class="line">                <span class="keyword">return</span> <span class="number">0</span></div><div class="line">            <span class="keyword">elif</span> num &lt; <span class="number">0</span>:</div><div class="line">                result *= <span class="number">-1</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/sign-of-the-product-of-an-array/" target="_blank" rel="external">https://leetcode.com/problems/sign-of-the-product-of-an-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1822. Sign of the Product of an Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1905. Count Sub Islands</title>
    <link href="http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1905-Count-Sub-Islands/"/>
    <id>http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1905-Count-Sub-Islands/</id>
    <published>2021-08-10T07:20:16.812Z</published>
    <updated>2021-08-10T07:34:05.655Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Count_Sub_Islands.png" alt="Count Sub Islands"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，以第二个矩阵中碰到的<code>1</code>作为起点，然后使用广度优先搜索找到所有相邻的<code>1</code>，即一个岛屿，并将所有岛的坐标保存到队列中(值为1的坐标)，将矩阵二中搜索的点对应的值设为<code>2</code>，防止重复搜索，搜索过程中需要同时检查搜索的点是否是矩阵一种的岛屿，如果不是，将标志位设为<code>False</code>，最后根据标志位判断是否是矩阵一种的子岛屿。搜索过程其实就是Flood Fill算法。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countSubIslands</span><span class="params">(self, grid1: List[List[int]], grid2: List[List[int]])</span> -&gt; int:</span></div><div class="line">        m = len(grid1)</div><div class="line">        n = len(grid1[<span class="number">0</span>])</div><div class="line">        count = <span class="number">0</span></div><div class="line">        queue = collections.deque()</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(n):</div><div class="line">                <span class="keyword">if</span> grid2[i][j] == <span class="number">1</span>:</div><div class="line">                    queue.append((i, j))</div><div class="line">                    count += self.subIslands(queue, grid2, grid1)     </div><div class="line">        <span class="keyword">return</span> count</div><div class="line"></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subIslands</span><span class="params">(self, queue, grid, check)</span>:</span></div><div class="line">        m = len(grid)</div><div class="line">        n = len(grid[<span class="number">0</span>])</div><div class="line">        flag = <span class="keyword">True</span></div><div class="line">        <span class="keyword">while</span> queue:</div><div class="line">            x, y = queue.popleft()</div><div class="line">            <span class="keyword">if</span> check[x][y] == <span class="number">0</span>:</div><div class="line">                flag = <span class="keyword">False</span></div><div class="line">            <span class="keyword">if</span> x &gt; <span class="number">0</span> <span class="keyword">and</span> grid[x<span class="number">-1</span>][y] == <span class="number">1</span>:</div><div class="line">                grid[x<span class="number">-1</span>][y] = <span class="number">2</span></div><div class="line">                queue.append((x<span class="number">-1</span>, y))</div><div class="line">            <span class="keyword">if</span> y &gt; <span class="number">0</span> <span class="keyword">and</span> grid[x][y<span class="number">-1</span>] == <span class="number">1</span>:</div><div class="line">                grid[x][y<span class="number">-1</span>] = <span class="number">2</span></div><div class="line">                queue.append((x, y<span class="number">-1</span>))</div><div class="line">            <span class="keyword">if</span> x &lt; m<span class="number">-1</span> <span class="keyword">and</span> grid[x+<span class="number">1</span>][y] == <span class="number">1</span>:</div><div class="line">                grid[x+<span class="number">1</span>][y] = <span class="number">2</span></div><div class="line">                queue.append((x+<span class="number">1</span>, y))</div><div class="line">            <span class="keyword">if</span> y &lt; n<span class="number">-1</span> <span class="keyword">and</span> grid[x][y+<span class="number">1</span>] == <span class="number">1</span>:</div><div class="line">                grid[x][y+<span class="number">1</span>] = <span class="number">2</span></div><div class="line">                queue.append((x, y+<span class="number">1</span>))    </div><div class="line">        <span class="keyword">if</span> flag:</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/count-sub-islands/" target="_blank" rel="external">https://leetcode.com/problems/count-sub-islands/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1905. Count Sub Islands
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1299. Replace Elements with Greatest Element on Right Side</title>
    <link href="http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1299-Replace-Elements-with-Greatest-Element-on-Right-Side/"/>
    <id>http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1299-Replace-Elements-with-Greatest-Element-on-Right-Side/</id>
    <published>2021-08-10T06:13:33.714Z</published>
    <updated>2021-08-10T06:30:31.476Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Replace_Elements_with_Greatest_Element_on_Right_Side.png" alt="Replace Elements with Greatest Element on Right Side"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先排序获取索引，从最大值所在的索引开始遍历，只要是其左侧没有更新过的值都更新，使用<code>left</code>来确定范围，<code>left</code>始终是已更新数据的最右侧，其是下一次遍历的左边界。Version 2从倒数第二个元素开始向前遍历，<code>maximum</code>用来保存右侧最大值，每次遍历先更新当前索引结果位置的数值为<code>maximum</code>，然后更新<code>maximum</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replaceElements</span><span class="params">(self, arr: List[int])</span> -&gt; List[int]:</span></div><div class="line">        n = len(arr)</div><div class="line">        result = [<span class="number">-1</span>] * n</div><div class="line">        indexes = sorted(range(n), key=<span class="keyword">lambda</span> i: arr[i], reverse=<span class="keyword">True</span>)</div><div class="line">        left = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            index = indexes[i]</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(left, index):</div><div class="line">                result[j] = arr[index]</div><div class="line">            left = max(left, index)</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replaceElements</span><span class="params">(self, arr: List[int])</span> -&gt; List[int]:</span></div><div class="line">        n = len(arr)</div><div class="line">        result = [<span class="number">-1</span>] * n</div><div class="line">        maximum = arr[<span class="number">-1</span>]</div><div class="line">        i = n - <span class="number">2</span></div><div class="line">        <span class="keyword">while</span> i &gt; <span class="number">-1</span>:</div><div class="line">            result[i] = maximum</div><div class="line">            maximum = max(maximum, arr[i])</div><div class="line">            i -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/" target="_blank" rel="external">https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1299. Replace Elements with Greatest Element on Right Side
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1340. Jump Game V</title>
    <link href="http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1340-Jump-Game-V/"/>
    <id>http://noahsnail.com/2021/08/10/2021-08-10-Leetcode-1340-Jump-Game-V/</id>
    <published>2021-08-10T05:23:16.436Z</published>
    <updated>2021-08-10T05:55:05.963Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Jump_Game_V.png" alt="Jump Game V"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，采用深度优先搜索，使用<code>visited</code>记录遍历过的索引及对应的跳跃次数，如果当前索引遍历过，直接返回对应的跳跃次数，分别遍历其左右两侧，取左右两侧最大的跳跃次数，返回最大跳跃次数加上当前元素的跳跃次数<code>1</code>。Version 2对数组先排序，获得排序后的索引，然后从最小值的索引开始寻找左右两侧最大跳跃次数，这样每个数左右两侧比其小的数的跳跃次数都已计算出来，所有元素的初始默认跳跃次数为<code>1</code>，依次更新<code>dp[current]</code>，最后返回最大跳跃次数。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxJumps</span><span class="params">(self, arr: List[int], d: int)</span> -&gt; int:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        n = len(arr)</div><div class="line">        visited = &#123;&#125;</div><div class="line">        nums = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            nums = max(nums, self.dfs(arr, i, visited, d))</div><div class="line">        <span class="keyword">return</span> nums</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dfs</span><span class="params">(self, arr, current, visited, d)</span>:</span></div><div class="line">        <span class="keyword">if</span> current <span class="keyword">in</span> visited:</div><div class="line">            <span class="keyword">return</span> visited[current]</div><div class="line">        n = len(arr)</div><div class="line">        count = <span class="number">0</span></div><div class="line">        i = current - <span class="number">1</span></div><div class="line">        thres = max(<span class="number">-1</span>, current - d - <span class="number">1</span>)</div><div class="line">        <span class="keyword">while</span> i &gt; thres <span class="keyword">and</span> arr[i] &lt; arr[current]:</div><div class="line">            temp = self.dfs(arr, i, visited, d)</div><div class="line">            visited[i] = temp</div><div class="line">            count = max(count, temp)</div><div class="line">            i -= <span class="number">1</span></div><div class="line">        i = current + <span class="number">1</span></div><div class="line">        thres = min(n, current + d + <span class="number">1</span>)</div><div class="line">        <span class="keyword">while</span> i &lt;  thres <span class="keyword">and</span> arr[i] &lt; arr[current]:</div><div class="line">            temp = self.dfs(arr, i, visited, d)</div><div class="line">            visited[i] = temp</div><div class="line">            count = max(count, temp)</div><div class="line">            i += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count + <span class="number">1</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxJumps</span><span class="params">(self, arr: List[int], d: int)</span> -&gt; int:</span></div><div class="line">        indexes = sorted(range(len(arr)), key=<span class="keyword">lambda</span> i: arr[i])</div><div class="line">        n = len(arr)</div><div class="line">        dp = [<span class="number">1</span>] * n</div><div class="line">        nums = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> current <span class="keyword">in</span> indexes:</div><div class="line">            i = current - <span class="number">1</span></div><div class="line">            thres = max(<span class="number">-1</span>, current - d - <span class="number">1</span>)</div><div class="line">            count = <span class="number">0</span></div><div class="line">            <span class="keyword">while</span> i &gt; thres <span class="keyword">and</span> arr[i] &lt; arr[current]:</div><div class="line">                count = max(count, dp[i])</div><div class="line">                i -= <span class="number">1</span></div><div class="line">            i = current + <span class="number">1</span></div><div class="line">            thres = min(n, current + d + <span class="number">1</span>)</div><div class="line">            <span class="keyword">while</span> i &lt; thres <span class="keyword">and</span> arr[i] &lt; arr[current]:</div><div class="line">                count = max(count, dp[i])</div><div class="line">                i += <span class="number">1</span></div><div class="line">            dp[current] += count</div><div class="line">            nums = max(nums, dp[current])</div><div class="line">        <span class="keyword">return</span> nums</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/jump-game-v/" target="_blank" rel="external">https://leetcode.com/problems/jump-game-v/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1340. Jump Game V
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1345. Jump Game IV</title>
    <link href="http://noahsnail.com/2021/08/09/2021-08-09-Leetcode-1345-Jump-Game-IV/"/>
    <id>http://noahsnail.com/2021/08/09/2021-08-09-Leetcode-1345-Jump-Game-IV/</id>
    <published>2021-08-09T08:01:30.392Z</published>
    <updated>2021-08-09T08:31:54.309Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Jump_Game_IV.png" alt="Jump Game IV"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先用字典保存数值相同的元素的索引，然后使用广度优先遍历，初始值为<code>(0, 0)</code>，分别表示索引位置为0以及跳跃次数<code>1</code>，遍历当前索引的左边元素、右边元素、以及值相同元素的索引，保存索引位置及跳跃次数，使用<code>visited</code>保存访问过的索引，相同数值的索引访问之后要将字典<code>mapping</code>中保持的索引序列也重置。Version 2代码稍微简洁一些。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minJumps</span><span class="params">(self, arr: List[int])</span> -&gt; int:</span></div><div class="line">        visited = &#123;&#125;</div><div class="line">        mapping = collections.defaultdict(list)</div><div class="line">        <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(arr):</div><div class="line">            mapping[value] += [index]</div><div class="line">        queue = collections.deque()</div><div class="line">        queue.append((<span class="number">0</span>, <span class="number">0</span>))</div><div class="line">        thres = len(arr) - <span class="number">1</span></div><div class="line">        visited[<span class="number">0</span>] = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> queue:</div><div class="line">            index, steps = queue.popleft()</div><div class="line">            <span class="keyword">if</span> index == thres:</div><div class="line">                <span class="keyword">return</span> steps</div><div class="line">            steps += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> index &gt; <span class="number">0</span> <span class="keyword">and</span> index<span class="number">-1</span> <span class="keyword">not</span> <span class="keyword">in</span> visited:</div><div class="line">                visited[index<span class="number">-1</span>] = index - <span class="number">1</span></div><div class="line">                queue.append((index<span class="number">-1</span>, steps))</div><div class="line">            <span class="keyword">if</span> index &lt; thres <span class="keyword">and</span> index+<span class="number">1</span> <span class="keyword">not</span> <span class="keyword">in</span> visited:</div><div class="line">                queue.append((index+<span class="number">1</span>, steps))</div><div class="line">                visited[index+<span class="number">1</span>] = index + <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> index + <span class="number">1</span> == thres:</div><div class="line">                    <span class="keyword">return</span> steps</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> mapping[arr[index]]:</div><div class="line">                <span class="keyword">if</span> i == thres:</div><div class="line">                    <span class="keyword">return</span> steps</div><div class="line">                <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> visited:</div><div class="line">                    queue.append((i, steps))</div><div class="line">                    visited[i] = i</div><div class="line">            mapping[arr[index]] = []</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minJumps</span><span class="params">(self, arr: List[int])</span> -&gt; int:</span></div><div class="line">        <span class="keyword">if</span> len(arr) == <span class="number">1</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span></div><div class="line">        visited = &#123;&#125;</div><div class="line">        mapping = collections.defaultdict(list)</div><div class="line">        <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(arr):</div><div class="line">            mapping[value] += [index]</div><div class="line">        queue = collections.deque()</div><div class="line">        queue.append((<span class="number">0</span>, <span class="number">0</span>))</div><div class="line">        thres = len(arr) - <span class="number">1</span></div><div class="line">        visited[<span class="number">0</span>] = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> queue:</div><div class="line">            index, steps = queue.popleft()</div><div class="line">            steps += <span class="number">1</span></div><div class="line">            temp = set([index<span class="number">-1</span>, index + <span class="number">1</span>] + mapping[arr[index]])</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> temp:</div><div class="line">                <span class="keyword">if</span> i == thres:</div><div class="line">                    <span class="keyword">return</span> steps</div><div class="line">                <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> visited <span class="keyword">and</span> i &gt; <span class="number">-1</span> <span class="keyword">and</span> i &lt; len(arr):</div><div class="line">                    queue.append((i, steps))</div><div class="line">                    visited[i] = i</div><div class="line">            mapping[arr[index]] = []</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/jump-game-iv/" target="_blank" rel="external">https://leetcode.com/problems/jump-game-iv/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1345. Jump Game IV
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1871. Jump Game VII</title>
    <link href="http://noahsnail.com/2021/08/09/2021-08-09-Leetcode-1871-Jump-Game-VII/"/>
    <id>http://noahsnail.com/2021/08/09/2021-08-09-Leetcode-1871-Jump-Game-VII/</id>
    <published>2021-08-09T02:58:33.916Z</published>
    <updated>2021-08-09T06:05:41.642Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Jump_Game_VII.png" alt="Jump Game VII"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用队列来保存可进行下一次检索的候选索引，从第<code>0</code>的位置开始检索，根据<code>minJump</code>和<code>maxJump</code>确定检索范围，如果当前字符为<code>0</code>，则将索引添加到队列中，如果恰好是最后一个位置，返回<code>True</code>。下一次的检索范围不能直接从<code>index+minJump</code>开始，因为有可能会造成重复检索，因此取<code>max(index+minJump, end)</code>，<code>end</code>为上一次检索的最后位置，这样检索的时间复杂度为<code>O(n)</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">canReach</span><span class="params">(self, s: str, minJump: int, maxJump: int)</span> -&gt; bool:</span></div><div class="line">        queue = collections.deque()</div><div class="line">        queue.append(<span class="number">0</span>)</div><div class="line">        end = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> queue:</div><div class="line">            index = queue.popleft()</div><div class="line">            start = max(index+minJump, end)</div><div class="line">            end = min(index+maxJump+<span class="number">1</span>, len(s))</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(start, end):</div><div class="line">                <span class="keyword">if</span> s[i] == <span class="string">'0'</span>:</div><div class="line">                    <span class="keyword">if</span> i == len(s) - <span class="number">1</span>:</div><div class="line">                        <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">                    queue.append(i)</div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/jump-game-vii/" target="_blank" rel="external">https://leetcode.com/problems/jump-game-vii/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1871. Jump Game VII
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1306. Jump Game III</title>
    <link href="http://noahsnail.com/2021/08/09/2021-08-09-Leetcode-1306-Jump-Game-III/"/>
    <id>http://noahsnail.com/2021/08/09/2021-08-09-Leetcode-1306-Jump-Game-III/</id>
    <published>2021-08-09T01:42:13.608Z</published>
    <updated>2021-08-09T02:51:52.788Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Jump_Game_III.png" alt="Jump Game III"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用广度优先搜索，其实是个二叉树遍历问题，使用字典记录搜索过的索引，每次根据当前值计算下一次搜索的左右索引，如果在数组范围内且没被搜索过，则将其记录到队列中，依次搜索，如果当前值为<code>0</code>，返回<code>True</code>，如果队列为空时都没找到，则返回<code>False</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">canReach</span><span class="params">(self, arr: List[int], start: int)</span> -&gt; bool:</span></div><div class="line">        n = len(arr)</div><div class="line">        queue = collections.deque()</div><div class="line">        queue.append(start)</div><div class="line">        records = &#123;&#125;</div><div class="line">        <span class="keyword">while</span> queue:</div><div class="line">            index = queue.popleft()</div><div class="line">            value = arr[index]</div><div class="line">            <span class="keyword">if</span> value == <span class="number">0</span>:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">            records[index] = value</div><div class="line">            left = index - value</div><div class="line">            right = index + value</div><div class="line">            <span class="keyword">if</span> left &gt; <span class="number">-1</span> <span class="keyword">and</span> left <span class="keyword">not</span> <span class="keyword">in</span> records:</div><div class="line">                queue.append(left)</div><div class="line">            <span class="keyword">if</span> right &lt; n <span class="keyword">and</span> right <span class="keyword">not</span> <span class="keyword">in</span> records:</div><div class="line">                queue.append(right)</div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/jump-game-iii/" target="_blank" rel="external">https://leetcode.com/problems/jump-game-iii/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1306. Jump Game III
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 934. Shortest Bridge</title>
    <link href="http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-934-Shortest-Bridge/"/>
    <id>http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-934-Shortest-Bridge/</id>
    <published>2021-08-06T09:36:31.410Z</published>
    <updated>2021-08-09T00:46:38.829Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Shortest_Bridge.png" alt="Shortest Bridge"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先找到矩阵中第一个<code>1</code>作为起点，然后使用广度优先搜索找到所有相邻的<code>1</code>，即第一个岛，并将所有岛的坐标及更改的<code>0</code>计数保存到队列中，初始计数为<code>0</code>，搜索第一个岛的同时，将各个点对应的值设为<code>2</code>，防止重复搜索。从第一个岛的所有点开始，重新使用广度优先搜索，如果搜索的点值为<code>0</code>，将值设为<code>2</code>，表示已经搜索过，同时将点的坐标及计数保存，计数要加<code>1</code>，如果搜索的点为<code>1</code>，说明找到了第二个岛，返回反转的<code>0</code>的计数。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shortestBridge</span><span class="params">(self, grid: List[List[int]])</span> -&gt; int:</span></div><div class="line">        n = len(grid)</div><div class="line">        queue = collections.deque()</div><div class="line">        queue2 = collections.deque()</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            flag = <span class="keyword">False</span></div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(n):</div><div class="line">                <span class="keyword">if</span> grid[i][j] == <span class="number">1</span>:</div><div class="line">                    grid[i][j] = <span class="number">2</span></div><div class="line">                    queue.append((i, j))</div><div class="line">                    flag = <span class="keyword">True</span></div><div class="line">                    <span class="keyword">break</span></div><div class="line">            <span class="keyword">if</span> flag:</div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">while</span> queue:</div><div class="line">            x, y = queue.popleft()</div><div class="line">            queue2.append((x, y, <span class="number">0</span>))</div><div class="line">            <span class="keyword">if</span> x &gt; <span class="number">0</span> <span class="keyword">and</span> grid[x<span class="number">-1</span>][y] == <span class="number">1</span>:</div><div class="line">                grid[x<span class="number">-1</span>][y] = <span class="number">2</span></div><div class="line">                queue.append((x<span class="number">-1</span>, y))</div><div class="line">            <span class="keyword">if</span> y &gt; <span class="number">0</span> <span class="keyword">and</span> grid[x][y<span class="number">-1</span>] == <span class="number">1</span>:</div><div class="line">                grid[x][y<span class="number">-1</span>] = <span class="number">2</span></div><div class="line">                queue.append((x, y<span class="number">-1</span>))</div><div class="line">            <span class="keyword">if</span> x &lt; n<span class="number">-1</span> <span class="keyword">and</span> grid[x+<span class="number">1</span>][y] == <span class="number">1</span>:</div><div class="line">                grid[x+<span class="number">1</span>][y] = <span class="number">2</span></div><div class="line">                queue.append((x+<span class="number">1</span>, y))</div><div class="line">            <span class="keyword">if</span> y &lt; n<span class="number">-1</span> <span class="keyword">and</span> grid[x][y+<span class="number">1</span>] == <span class="number">1</span>:</div><div class="line">                grid[x][y+<span class="number">1</span>] = <span class="number">2</span></div><div class="line">                queue.append((x, y+<span class="number">1</span>))</div><div class="line">        <span class="keyword">while</span> queue2:</div><div class="line">            x, y, count = queue2.popleft()</div><div class="line">            <span class="keyword">if</span> x &gt; <span class="number">0</span>:</div><div class="line">                <span class="keyword">if</span> grid[x<span class="number">-1</span>][y] == <span class="number">0</span>:</div><div class="line">                    grid[x<span class="number">-1</span>][y] = <span class="number">2</span></div><div class="line">                    queue2.append((x<span class="number">-1</span>, y, count + <span class="number">1</span>))</div><div class="line">                <span class="keyword">elif</span> grid[x<span class="number">-1</span>][y] == <span class="number">1</span>:</div><div class="line">                    <span class="keyword">return</span> count</div><div class="line">            <span class="keyword">if</span> y &gt; <span class="number">0</span>:</div><div class="line">                <span class="keyword">if</span> grid[x][y<span class="number">-1</span>] == <span class="number">0</span>:</div><div class="line">                    grid[x][y<span class="number">-1</span>] = <span class="number">2</span></div><div class="line">                    queue2.append((x, y<span class="number">-1</span>, count + <span class="number">1</span>))</div><div class="line">                <span class="keyword">elif</span> grid[x][y<span class="number">-1</span>] == <span class="number">1</span>:</div><div class="line">                    <span class="keyword">return</span> count</div><div class="line">            <span class="keyword">if</span> x &lt; n<span class="number">-1</span>:</div><div class="line">                <span class="keyword">if</span> grid[x+<span class="number">1</span>][y] == <span class="number">0</span>:</div><div class="line">                    grid[x+<span class="number">1</span>][y] = <span class="number">2</span></div><div class="line">                    queue2.append((x+<span class="number">1</span>, y, count + <span class="number">1</span>))</div><div class="line">                <span class="keyword">elif</span> grid[x+<span class="number">1</span>][y] == <span class="number">1</span>:</div><div class="line">                    <span class="keyword">return</span> count</div><div class="line">            <span class="keyword">if</span> y &lt; n<span class="number">-1</span>:</div><div class="line">                <span class="keyword">if</span> grid[x][y+<span class="number">1</span>] == <span class="number">0</span>:</div><div class="line">                    grid[x][y+<span class="number">1</span>] = <span class="number">2</span></div><div class="line">                    queue2.append((x, y+<span class="number">1</span>, count + <span class="number">1</span>))</div><div class="line">                <span class="keyword">elif</span> grid[x][y+<span class="number">1</span>] == <span class="number">1</span>:</div><div class="line">                    <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/shortest-bridge/" target="_blank" rel="external">https://leetcode.com/problems/shortest-bridge/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 934. Shortest Bridge
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 724. Find Pivot Index</title>
    <link href="http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-724-Find-Pivot-Index/"/>
    <id>http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-724-Find-Pivot-Index/</id>
    <published>2021-08-06T07:45:05.998Z</published>
    <updated>2021-08-06T07:48:51.748Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Find_Pivot_Index.png" alt="Find Pivot Index"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先将数组分为左右两边，左边为<code>0</code>，右边是数组总和，遍历数组，左边加上当前位置的前一个数，右边减去当前位置的数，如果左右相等，返回当前索引，这样优先找到的是满足条件的最左边的索引，最后没找到，返回<code>-1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pivotIndex</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        left = <span class="number">0</span></div><div class="line">        right = sum(nums)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</div><div class="line">            <span class="keyword">if</span> i &gt; <span class="number">0</span>:</div><div class="line">                left += nums[i<span class="number">-1</span>]</div><div class="line">            right -= nums[i]</div><div class="line">            <span class="keyword">if</span> left == right:</div><div class="line">                <span class="keyword">return</span> i</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-pivot-index/" target="_blank" rel="external">https://leetcode.com/problems/find-pivot-index/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 724. Find Pivot Index
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1590. Make Sum Divisible by P</title>
    <link href="http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-1590-Make-Sum-Divisible-by-P/"/>
    <id>http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-1590-Make-Sum-Divisible-by-P/</id>
    <published>2021-08-06T06:44:42.298Z</published>
    <updated>2021-08-06T07:00:48.770Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Make_Sum_Divisible_by_P.png" alt="Make Sum Divisible by P"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用前缀和来解决，先对整个数组求和，总和与<code>p</code>的余数设为<code>k</code>，如果<code>k==0</code>，则直接返回<code>0</code>即可。否则，将遍历数组，求前缀和，前缀和与<code>p</code>的余数设为<code>remainder</code>，题目需要移除的部分是两个前缀和相减后的部分，其与<code>p</code>的余数应为<code>k</code>，即<code>(remainder - temp) % p == k</code>，<code>temp</code>是需要寻找的余数，由于<code>remainder - temp</code>为负数时，公式变为<code>p + remainder - temp = k</code>，通过公式变换，可以得到<code>temp = p + remainder - k</code>，由于<code>remainder - temp</code>大于<code>0</code>时不需要加上<code>p</code>，因此公式变为<code>temp = (remainder + p - k) % p</code>。字典中保持的是余数及对应的位置索引，由于余数相同时索引位置更新，因此字典中保存的永远余数相同时是最大的位置索引，这样可以保证满足条件时要移除的元素数量最少。注意，假设第一个数的余数就等于<code>k</code>，此时数组中没有要寻找的余数<code>temp=0</code>的位置，因此<code>stat[0]=-1</code>，这样计算的长度才不会错。初始长度设为数组长度，如果没找到满足条件的子数组，则长度不更新，此时将长度设为<code>-1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minSubarray</span><span class="params">(self, nums: List[int], p: int)</span> -&gt; int:</span></div><div class="line">        k = sum(nums) % p</div><div class="line">        <span class="keyword">if</span> k == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span></div><div class="line">        total = <span class="number">0</span></div><div class="line">        stat = collections.defaultdict(int)</div><div class="line">        stat[<span class="number">0</span>] = <span class="number">-1</span></div><div class="line">        length = len(nums)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</div><div class="line">            total += nums[i]</div><div class="line">            remainder = total % p</div><div class="line">            temp = (remainder + p - k) % p</div><div class="line">            <span class="keyword">if</span> temp <span class="keyword">in</span> stat:</div><div class="line">                length = min(length, i - stat[temp])</div><div class="line">            stat[remainder] = i</div><div class="line">        <span class="keyword">if</span> length == len(nums):</div><div class="line">            length = <span class="number">-1</span></div><div class="line">        <span class="keyword">return</span> length</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/make-sum-divisible-by-p/" target="_blank" rel="external">https://leetcode.com/problems/make-sum-divisible-by-p/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1590. Make Sum Divisible by P
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 523. Continuous Subarray Sum</title>
    <link href="http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-523-Continuous-Subarray-Sum/"/>
    <id>http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-523-Continuous-Subarray-Sum/</id>
    <published>2021-08-06T06:20:08.241Z</published>
    <updated>2021-08-06T06:26:30.020Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Continuous_Subarray_Sum.png" alt="Continuous Subarray Sum"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用前缀和来解决，遍历数组，求前缀和，求前缀和与<code>k</code>的余数，余数在字典中存在时，则意味着当前前缀和减去之前的前缀和等于<code>k</code>的倍数，此时计算两个前缀和的长度差，如果大于等于<code>2</code>，则返回<code>True</code>，如果余数不存在，则将余数保存在字典中并记录其索引位置。由于余数相同时不会更新索引，因此，字典中前缀和余数相同时，保存的是最靠前的位置。注意，假设第一个数就等于<code>k</code>的倍数，此时数组中没有余数<code>0</code>的位置，因此<code>stat[0]=-1</code>，这样计算的长度才不会错。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSubarraySum</span><span class="params">(self, nums: List[int], k: int)</span> -&gt; bool:</span></div><div class="line">        n = len(nums)</div><div class="line">        total = <span class="number">0</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        stat[<span class="number">0</span>] = <span class="number">-1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            total += nums[i]</div><div class="line">            remainder = total % k</div><div class="line">            <span class="keyword">if</span> remainder <span class="keyword">in</span> stat:</div><div class="line">                length = i - stat[remainder]</div><div class="line">                <span class="keyword">if</span> length &gt; <span class="number">1</span>:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                stat[remainder] = i</div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/continuous-subarray-sum/" target="_blank" rel="external">https://leetcode.com/problems/continuous-subarray-sum/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 523. Continuous Subarray Sum
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 560. Subarray Sum Equals K</title>
    <link href="http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-560-Subarray-Sum-Equals-K/"/>
    <id>http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-560-Subarray-Sum-Equals-K/</id>
    <published>2021-08-06T05:55:34.697Z</published>
    <updated>2021-08-06T07:43:58.222Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Subarray_Sum_Equals_K.png" alt="Subarray Sum Equals K"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用前缀和来解决，遍历数组，求前缀和，统计前缀和的次数并保存到字典中，当碰到差值在字典中存在时，则意味着当前数组减去之前的前缀和数组等于<code>k</code>，将次数加到<code>count</code>中，更新前缀和的次数。注意，假设第一个数就等于<code>k</code>，此时数组中没有差值<code>0</code>的次数，因此<code>stat[0]=1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subarraySum</span><span class="params">(self, nums: List[int], k: int)</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        total = <span class="number">0</span></div><div class="line">        count  = <span class="number">0</span></div><div class="line">        stat = collections.defaultdict(int)</div><div class="line">        stat[<span class="number">0</span>] = <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            total += nums[i]</div><div class="line">            count += stat[total - k]</div><div class="line">            stat[total] += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/subarray-sum-equals-k/" target="_blank" rel="external">https://leetcode.com/problems/subarray-sum-equals-k/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 560. Subarray Sum Equals K
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
