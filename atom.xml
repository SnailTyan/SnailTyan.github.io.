<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SnailTyan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://noahsnail.com/"/>
  <updated>2022-05-07T06:37:40.666Z</updated>
  <id>http://noahsnail.com/</id>
  
  <author>
    <name>Tyan</name>
    <email>Tyan.Liu.Git@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Leetcode 1528. Shuffle String</title>
    <link href="http://noahsnail.com/2022/05/07/2022-05-07-Leetcode-1528-Shuffle-String/"/>
    <id>http://noahsnail.com/2022/05/07/2022-05-07-Leetcode-1528-Shuffle-String/</id>
    <published>2022-05-07T06:17:12.453Z</published>
    <updated>2022-05-07T06:37:40.666Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Shuffle_String.png" alt="Shuffle String"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，根据要求，按顺序将字母填到对应位置即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">restoreString</span><span class="params">(self, s: str, indices: List[int])</span> -&gt; str:</span></div><div class="line">        res = [<span class="string">'0'</span>] * len(s)</div><div class="line">        <span class="keyword">for</span> index, pos <span class="keyword">in</span> enumerate(indices):</div><div class="line">            res[pos] = s[index]</div><div class="line">        <span class="keyword">return</span> <span class="string">''</span>.join(res)</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/shuffle-string/" target="_blank" rel="external">https://leetcode.com/problems/shuffle-string/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1528. Shuffle String
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1323. Maximum 69 Number</title>
    <link href="http://noahsnail.com/2022/05/07/2022-05-07-Leetcode-1323-Maximum-69-Number/"/>
    <id>http://noahsnail.com/2022/05/07/2022-05-07-Leetcode-1323-Maximum-69-Number/</id>
    <published>2022-05-07T05:49:40.505Z</published>
    <updated>2022-05-07T06:01:26.099Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Maximum_69_Number.png" alt="Maximum 69 Number"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，从左到右，找到第一个<code>6</code>，将其改为<code>9</code>，返回更改之后的数字。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maximum69Number</span> <span class="params">(self, num: int)</span> -&gt; int:</span></div><div class="line">        digits = list(str(num))</div><div class="line">        <span class="keyword">for</span> index, digit <span class="keyword">in</span> enumerate(digits):</div><div class="line">            <span class="keyword">if</span> digit == <span class="string">'6'</span>:</div><div class="line">                digits[index] = <span class="string">'9'</span></div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">return</span> int(<span class="string">''</span>.join(digits))</div></pre></td></tr></table></figure>
<p><strong>解析：</strong>Version 2。</p>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maximum69Number</span> <span class="params">(self, num: int)</span> -&gt; int:</span></div><div class="line">        <span class="keyword">return</span> int(str(num).replace(<span class="string">'6'</span>, <span class="string">'9'</span>, <span class="number">1</span>))</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/maximum-69-number/" target="_blank" rel="external">https://leetcode.com/problems/maximum-69-number/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1323. Maximum 69 Number
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 2078. Two Furthest Houses With Different Colors</title>
    <link href="http://noahsnail.com/2022/05/07/2022-05-07-Leetcode-2078-Two-Furthest-Houses-With-Different-Colors/"/>
    <id>http://noahsnail.com/2022/05/07/2022-05-07-Leetcode-2078-Two-Furthest-Houses-With-Different-Colors/</id>
    <published>2022-05-07T03:08:03.317Z</published>
    <updated>2022-05-07T05:41:37.983Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Two_Furthest_Houses_With_Different_Colors.png" alt="Two Furthest Houses With Different Colors"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，两层循环遍历，O(N^2)。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxDistance</span><span class="params">(self, colors: List[int])</span> -&gt; int:</span></div><div class="line">        distance = <span class="number">0</span></div><div class="line">        length = len(colors)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, length):</div><div class="line">                <span class="keyword">if</span> colors[i] != colors[j]:</div><div class="line">                    distance = max(distance, j - i)</div><div class="line">        <span class="keyword">return</span> distance</div></pre></td></tr></table></figure>
<p><strong>解析：</strong>Version 2，贪心算法，从右往左找与左边第一个不同颜色的房子，从左往右找与右边第一个不同颜色的房子，取距离最大的一个，O(N)。</p>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxDistance</span><span class="params">(self, colors: List[int])</span> -&gt; int:</span></div><div class="line">        distance = <span class="number">0</span></div><div class="line">        length = len(colors)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</div><div class="line">            <span class="keyword">if</span> colors[i] != colors[<span class="number">0</span>]:</div><div class="line">                distance = max(distance, i)</div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            <span class="keyword">if</span> colors[i] != colors[length - <span class="number">1</span>]:</div><div class="line">                distance = max(distance, length - <span class="number">1</span> - i)</div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">return</span> distance</div></pre></td></tr></table></figure>
<p><strong>解析：</strong>Version 3，Version 2的另一个版本，通过一次循环完成，O(N)。</p>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxDistance</span><span class="params">(self, colors: List[int])</span> -&gt; int:</span></div><div class="line">        distance = <span class="number">0</span></div><div class="line">        length = len(colors)</div><div class="line">        <span class="keyword">for</span> index, color <span class="keyword">in</span> enumerate(colors):</div><div class="line">            <span class="keyword">if</span> color != colors[<span class="number">0</span>]:</div><div class="line">                distance = max(distance, index)</div><div class="line">            <span class="keyword">if</span> color != colors[length<span class="number">-1</span>]:</div><div class="line">                distance = max(distance, length - <span class="number">1</span> - index)</div><div class="line">        <span class="keyword">return</span> distance</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/two-furthest-houses-with-different-colors/" target="_blank" rel="external">https://leetcode.com/problems/two-furthest-houses-with-different-colors/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 2078. Two Furthest Houses With Different Colors
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 2016. Maximum Difference Between Increasing Elements</title>
    <link href="http://noahsnail.com/2022/05/07/2022-05-07-Leetcode-2016-Maximum-Difference-Between-Increasing-Elements/"/>
    <id>http://noahsnail.com/2022/05/07/2022-05-07-Leetcode-2016-Maximum-Difference-Between-Increasing-Elements/</id>
    <published>2022-05-07T01:31:35.994Z</published>
    <updated>2022-05-07T05:40:43.075Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Maximum_Difference_Between_Increasing_Elements.png" alt="Maximum Difference Between Increasing Elements"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，两层循环遍历，O(N^2)。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maximumDifference</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        length = len(nums)</div><div class="line">        diff = <span class="number">-1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, length):</div><div class="line">                <span class="keyword">if</span> nums[j] &gt; nums[i]:</div><div class="line">                    diff = max(diff, nums[j] - nums[i])</div><div class="line">        <span class="keyword">return</span> diff</div></pre></td></tr></table></figure>
<p><strong>解析：</strong>Version 2，从左向右遍历，<code>minimum</code>始终保持左半部分最小值，如果当前数字<code>num</code>比<code>minimum</code>大，求二者的<code>difference</code>，取<code>difference</code>最大值，O(N)。</p>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maximumDifference</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        length = len(nums)</div><div class="line">        diff = <span class="number">-1</span></div><div class="line">        minimum = nums[<span class="number">0</span>]</div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</div><div class="line">            <span class="keyword">if</span> num &gt; minimum:</div><div class="line">                diff = max(diff, num - minimum)</div><div class="line">            minimum = min(minimum, num)</div><div class="line">        <span class="keyword">return</span> diff</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/maximum-difference-between-increasing-elements/" target="_blank" rel="external">https://leetcode.com/problems/maximum-difference-between-increasing-elements/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 2016. Maximum Difference Between Increasing Elements
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1464. Maximum Product of Two Elements in an Array</title>
    <link href="http://noahsnail.com/2022/05/05/2022-05-05-Leetcode-1464-Maximum-Product-of-Two-Elements-in-an-Array/"/>
    <id>http://noahsnail.com/2022/05/05/2022-05-05-Leetcode-1464-Maximum-Product-of-Two-Elements-in-an-Array/</id>
    <published>2022-05-05T03:31:45.599Z</published>
    <updated>2022-05-07T05:40:46.498Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Maximum_Product_of_Two_Elements_in_an_Array.png" alt="Maximum Product of Two Elements in an Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，两层循环遍历，O(N^2)。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxProduct</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        product = <span class="number">0</span></div><div class="line">        length = len(nums)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, length):</div><div class="line">                product = max(product, (nums[i] - <span class="number">1</span>) * (nums[j] - <span class="number">1</span>))</div><div class="line">        <span class="keyword">return</span> product</div></pre></td></tr></table></figure>
<p><strong>解析：</strong>Version 2，找到数组里最大的两个元素即可，O(N)。</p>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxProduct</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        x1 = max(nums[<span class="number">0</span>], nums[<span class="number">1</span>])</div><div class="line">        x2 = min(nums[<span class="number">0</span>], nums[<span class="number">1</span>])</div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums[<span class="number">2</span>:]:</div><div class="line">            <span class="keyword">if</span> num &gt;= x1:</div><div class="line">                x2 = x1</div><div class="line">                x1 = num</div><div class="line">            <span class="keyword">elif</span> num &gt; x2:</div><div class="line">                x2 = num</div><div class="line">        product = (x1 - <span class="number">1</span>) * (x2 - <span class="number">1</span>)</div><div class="line">        <span class="keyword">return</span> product</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/maximum-product-of-two-elements-in-an-array/" target="_blank" rel="external">https://leetcode.com/problems/maximum-product-of-two-elements-in-an-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1464. Maximum Product of Two Elements in an Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1031. Maximum Sum of Two Non-Overlapping Subarrays</title>
    <link href="http://noahsnail.com/2021/09/02/2021-09-02-Leetcode-1031-Maximum-Sum-of-Two-Non-Overlapping-Subarrays/"/>
    <id>http://noahsnail.com/2021/09/02/2021-09-02-Leetcode-1031-Maximum-Sum-of-Two-Non-Overlapping-Subarrays/</id>
    <published>2021-09-02T06:31:49.035Z</published>
    <updated>2021-09-02T08:30:27.403Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Maximum_Sum_of_Two_Non-Overlapping_Subarrays.png" alt="Maximum Sum of Two Non-Overlapping Subarrays"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先分别计算两个数组对应长度的连续子数组和，然后枚举所有符合条件的可能组合，找出最大和。Version 2使用前缀和，遍历前缀和，分别假设第一个子数组和在前和第二个子数组在前，求其最大值，即<code>first</code>和<code>second</code>，求第一个子数组的前缀和与当前的第二个子数组前缀和、第二个子数组的前缀和与当前的第一个子数组前缀和、之前最大和之间的最大值。为了便于计算以及索引校正，前缀和数组长度加<code>1</code>，初始值为<code>0</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxSumTwoNoOverlap</span><span class="params">(self, nums: List[int], firstLen: int, secondLen: int)</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        sum1 = <span class="number">0</span></div><div class="line">        sum2 = <span class="number">0</span></div><div class="line">        first = []</div><div class="line">        second = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            <span class="keyword">if</span> i &lt; firstLen:</div><div class="line">                sum1 += nums[i]</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                first.append(sum1)</div><div class="line">                sum1 = sum1 + nums[i] - nums[i - firstLen]</div><div class="line">            <span class="keyword">if</span> i &lt; secondLen:</div><div class="line">                sum2 += nums[i]</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                second.append(sum2)</div><div class="line">                sum2 = sum2 + nums[i] - nums[i - secondLen]</div><div class="line">        first.append(sum1)</div><div class="line">        second.append(sum2)</div><div class="line">        maximum = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(first)):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i + firstLen, len(second)):</div><div class="line">                maximum = max(maximum, first[i] + second[j])</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(second)):</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(j + secondLen, len(first)):</div><div class="line">                maximum = max(maximum, first[i] + second[j])</div><div class="line">        <span class="keyword">return</span> maximum</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxSumTwoNoOverlap</span><span class="params">(self, nums: List[int], firstLen: int, secondLen: int)</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        maximum = <span class="number">0</span></div><div class="line">        prefix = [<span class="number">0</span>]</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            prefix.append(prefix[<span class="number">-1</span>] + nums[i])</div><div class="line">        first = <span class="number">0</span></div><div class="line">        second = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(firstLen + secondLen, len(prefix)):</div><div class="line">            first = max(first, prefix[i - secondLen] - prefix[i - firstLen - secondLen])</div><div class="line">            second = max(second, prefix[i - firstLen] - prefix[i - firstLen - secondLen])</div><div class="line">            maximum = max(maximum, prefix[i] - prefix[i - secondLen] + first, prefix[i] - prefix[i - firstLen] + second)</div><div class="line">        <span class="keyword">return</span> maximum</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays/" target="_blank" rel="external">https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1031. Maximum Sum of Two Non-Overlapping Subarrays
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1512. Number of Good Pairs</title>
    <link href="http://noahsnail.com/2021/08/31/2021-08-31-Leetcode-1512-Number-of-Good-Pairs/"/>
    <id>http://noahsnail.com/2021/08/31/2021-08-31-Leetcode-1512-Number-of-Good-Pairs/</id>
    <published>2021-08-31T03:01:57.066Z</published>
    <updated>2021-09-02T00:52:13.191Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Number_of_Good_Pairs.png" alt="Number of Good Pairs"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，最容易想到的就是统计重复元素的个数，然后在此基础上进行数值对的统计，注意一个数只能构成<code>0</code>对，两个数只能构成<code>1</code>对，累加时应从<code>0</code>累加到<code>n-1</code>，<code>n</code>是重复元素的个数。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numIdenticalPairs</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        stat = collections.defaultdict(int)</div><div class="line">        count = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</div><div class="line">            count += stat[num]</div><div class="line">            stat[num] += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/number-of-good-pairs/" target="_blank" rel="external">https://leetcode.com/problems/number-of-good-pairs/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1512. Number of Good Pairs
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 459. Repeated Substring Pattern</title>
    <link href="http://noahsnail.com/2021/08/30/2021-08-30-Leetcode-459-Repeated-Substring-Pattern/"/>
    <id>http://noahsnail.com/2021/08/30/2021-08-30-Leetcode-459-Repeated-Substring-Pattern/</id>
    <published>2021-08-30T08:49:45.689Z</published>
    <updated>2021-08-31T03:08:02.645Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Repeated_Substring_Pattern.png" alt="Repeated Substring Pattern"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，字符串是子串的重复，则字符串的结尾字符为子串的结尾字符，且至少存在两个重复的子串，因此寻找子串时，阈值应为<code>n // 2</code>，找到与结尾字符相等的字符，设开始到结尾字符的子串为候选子串，遍历<code>s</code>，其如果满足条件，返回<code>True</code>，如果始终没找到，返回<code>False</code>。Version 2进行了进一步优化，利用了重复子串的性质，即拆下第一部分放到末尾仍等于字符串<code>s</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">repeatedSubstringPattern</span><span class="params">(self, s: str)</span> -&gt; bool:</span></div><div class="line">        n = len(s)</div><div class="line">        end = s[<span class="number">-1</span>]</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n // <span class="number">2</span>):</div><div class="line">            <span class="keyword">if</span> s[i] == end:</div><div class="line">                pattern = s[:i+<span class="number">1</span>]</div><div class="line">                flag = <span class="keyword">True</span></div><div class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(s), len(pattern)):</div><div class="line">                    <span class="keyword">if</span> s[i:i+len(pattern)] != pattern:</div><div class="line">                        flag = <span class="keyword">False</span></div><div class="line">                        <span class="keyword">break</span></div><div class="line">                <span class="keyword">if</span> flag:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">repeatedSubstringPattern</span><span class="params">(self, s: str)</span> -&gt; bool:</span></div><div class="line">        n = len(s)</div><div class="line">        end = s[<span class="number">-1</span>]</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n // <span class="number">2</span>):</div><div class="line">            <span class="keyword">if</span> s[i] == end <span class="keyword">and</span> s == s[i+<span class="number">1</span>:] + s[:i+<span class="number">1</span>]:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/repeated-substring-pattern/" target="_blank" rel="external">https://leetcode.com/problems/repeated-substring-pattern/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 459. Repeated Substring Pattern
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 392. Is Subsequence</title>
    <link href="http://noahsnail.com/2021/08/30/2021-08-30-Leetcode-392-Is-Subsequence/"/>
    <id>http://noahsnail.com/2021/08/30/2021-08-30-Leetcode-392-Is-Subsequence/</id>
    <published>2021-08-30T05:17:27.507Z</published>
    <updated>2021-08-30T05:35:03.698Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Is_Subsequence.png" alt="Is Subsequence"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，依次比较字符串<code>s</code>和<code>t</code>中的字符。Version 2，为Leetcode 792做铺垫，先将<code>t</code>中的字符以及对应的索引保存到字典中，相同字符对应的索引构成一个有序序列，然后依次<code>s</code>中的每个字符，在<code>t</code>中查找其对应的字符索引位置，如果字符在<code>t</code>中不存在，直接返回<code>False</code>，<code>pre</code>表示单词中前一个字符在<code>t</code>中的索引位置，每次查找使用二分查找，如果返回的序列索引位置等于序列的长度，即<code>pre</code>位置之后的<code>t</code>中没找到对应的当前字符，则返回<code>False</code>，否则，更新<code>pre</code>为当前字符在<code>t</code>中的索引位置。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isSubsequence</span><span class="params">(self, s: str, t: str)</span> -&gt; bool:</span></div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> i &lt; len(s) <span class="keyword">and</span> j &lt; len(t):</div><div class="line">            <span class="keyword">if</span> s[i] == t[j]:</div><div class="line">                i += <span class="number">1</span></div><div class="line">                j += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                j += <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> i == len(s):</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isSubsequence</span><span class="params">(self, s: str, t: str)</span> -&gt; bool:</span></div><div class="line">        stat = collections.defaultdict(list)</div><div class="line">        <span class="keyword">for</span> i, ch <span class="keyword">in</span> enumerate(t):</div><div class="line">            stat[ch].append(i)</div><div class="line">        pre = <span class="number">-1</span></div><div class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</div><div class="line">            <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> stat:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            index = bisect.bisect(stat[ch], pre)</div><div class="line">            <span class="keyword">if</span> index == len(stat[ch]):</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                pre = stat[ch][index]</div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/is-subsequence/" target="_blank" rel="external">https://leetcode.com/problems/is-subsequence/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 392. Is Subsequence
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 792. Number of Matching Subsequences</title>
    <link href="http://noahsnail.com/2021/08/30/2021-08-30-Leetcode-792-Number-of-Matching-Subsequences/"/>
    <id>http://noahsnail.com/2021/08/30/2021-08-30-Leetcode-792-Number-of-Matching-Subsequences/</id>
    <published>2021-08-30T01:43:28.916Z</published>
    <updated>2021-08-30T05:23:05.506Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Number_of_Matching_Subsequences.png" alt="Number of Matching Subsequences"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，每个单词都与<code>s</code>进行遍历比较，超时。Version 2，先将<code>s</code>中的字符以及对应的索引保存到字典中，相同字符对应的索引构成一个有序序列，然后依次遍历每个单词的每个字符，在<code>s</code>中查找其对应的字符索引位置，如果字符在<code>s</code>中不存在，直接跳出循环，<code>pre</code>表示单词中前一个字符在<code>s</code>中的索引位置，每次查找使用二分查找，如果返回的序列索引位置等于序列的长度，即<code>pre</code>位置之后的<code>s</code>中没找到对应的当前字符，否则，更新<code>pre</code>为当前字符在<code>s</code>中的索引位置，<code>flag</code>表示是否满足条件，初始设为<code>True</code>，当不满足条件跳出循环时，设为<code>False</code>，每个单词根据<code>flag</code>的值来统计满足条件的单词个数。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numMatchingSubseq</span><span class="params">(self, s: str, words: List[str])</span> -&gt; int:</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        n = len(s)</div><div class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</div><div class="line">            m = len(word)</div><div class="line">            <span class="keyword">if</span> m &gt; n:</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            i = <span class="number">0</span></div><div class="line">            j = <span class="number">0</span></div><div class="line">            <span class="keyword">while</span> i &lt; n <span class="keyword">and</span> j &lt; m:</div><div class="line">                <span class="keyword">if</span> s[i] == word[j]:</div><div class="line">                    i += <span class="number">1</span></div><div class="line">                    j += <span class="number">1</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    i += <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> m - j - <span class="number">1</span> &gt; n - i - <span class="number">1</span>:</div><div class="line">                    <span class="keyword">break</span></div><div class="line">            <span class="keyword">if</span> j == m:</div><div class="line">                count += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numMatchingSubseq</span><span class="params">(self, s: str, words: List[str])</span> -&gt; int:</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        stat = collections.defaultdict(list)</div><div class="line">        <span class="keyword">for</span> i, ch <span class="keyword">in</span> enumerate(s):</div><div class="line">            stat[ch].append(i)</div><div class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</div><div class="line">            flag = <span class="keyword">True</span></div><div class="line">            pre = <span class="number">-1</span></div><div class="line">            <span class="keyword">for</span> ch <span class="keyword">in</span> word:</div><div class="line">                <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> stat:</div><div class="line">                    flag = <span class="keyword">False</span></div><div class="line">                    <span class="keyword">break</span></div><div class="line">                index = bisect.bisect(stat[ch], pre)</div><div class="line">                <span class="keyword">if</span> index == len(stat[ch]):</div><div class="line">                    flag = <span class="keyword">False</span></div><div class="line">                    <span class="keyword">break</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    pre = stat[ch][index]</div><div class="line">            <span class="keyword">if</span> flag:</div><div class="line">                count += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/number-of-matching-subsequences/" target="_blank" rel="external">https://leetcode.com/problems/number-of-matching-subsequences/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 792. Number of Matching Subsequences
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 567. Permutation in String</title>
    <link href="http://noahsnail.com/2021/08/27/2021-08-27-Leetcode-567-Permutation-in-String/"/>
    <id>http://noahsnail.com/2021/08/27/2021-08-27-Leetcode-567-Permutation-in-String/</id>
    <published>2021-08-27T06:56:30.160Z</published>
    <updated>2021-08-27T06:58:03.067Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Permutation_in_String.png" alt="Permutation in String"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，此题与leetcode 438非常类似，思路是一样的。判断<code>s2</code>是否包含<code>s1</code>的变换，可以采用字典的方法，即每个字母的个数及类型相等。先统计字符串<code>s1</code>的字母个数并记录其长度在<code>stat</code>中，遍历字符串<code>s2</code>，如果字母在<code>stat</code>中，则将其记录到字典<code>subs</code>中，否则重置<code>subs</code>，当<code>subs[&#39;length&#39;] = stat[&#39;length&#39;]</code>时，比较二者是否相等，如果相等，直接返回<code>True</code>，否则，字符串继续遍历，为保证<code>subs</code>长度与<code>stat</code>长度一致，此时，<code>subs</code>中移除<code>s2[index - n + 1]</code>字符，同时长度减<code>1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkInclusion</span><span class="params">(self, s1: str, s2: str)</span> -&gt; bool:</span></div><div class="line">        n = len(s1)</div><div class="line">        stat = collections.Counter(s1)</div><div class="line">        stat[<span class="string">'length'</span>] = n</div><div class="line">        subs = collections.defaultdict(int)</div><div class="line">        <span class="keyword">for</span> index, ch <span class="keyword">in</span> enumerate(s2):</div><div class="line">            <span class="keyword">if</span> ch <span class="keyword">in</span> stat:</div><div class="line">                subs[ch] += <span class="number">1</span></div><div class="line">                subs[<span class="string">'length'</span>] += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                subs = collections.defaultdict(int)</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            <span class="keyword">if</span> subs[<span class="string">'length'</span>] == stat[<span class="string">'length'</span>]:</div><div class="line">                <span class="keyword">if</span> stat == subs:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">                subs[s2[index - n + <span class="number">1</span>]] -= <span class="number">1</span></div><div class="line">                subs[<span class="string">'length'</span>] -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/permutation-in-string/" target="_blank" rel="external">https://leetcode.com/problems/permutation-in-string/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 567. Permutation in String
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 438. Find All Anagrams in a String</title>
    <link href="http://noahsnail.com/2021/08/27/2021-08-27-Leetcode-438-Find-All-Anagrams-in-a-String/"/>
    <id>http://noahsnail.com/2021/08/27/2021-08-27-Leetcode-438-Find-All-Anagrams-in-a-String/</id>
    <published>2021-08-27T06:37:22.477Z</published>
    <updated>2021-08-27T06:45:28.077Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Find_All_Anagrams_in_a_String.png" alt="Find All Anagrams in a String"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，判断两个字符串是否是Anagrams，可以采用字典的方法，即每个字母的个数及类型相等。先统计字符串<code>p</code>的字母个数并记录其长度在<code>stat</code>中，遍历字符串<code>s</code>，如果字母在<code>stat</code>中，则将其记录到字典<code>subs</code>中，否则重置<code>subs</code>，当<code>subs[&#39;length&#39;] = stat[&#39;length&#39;]</code>时，比较二者是否相等，如果相等，则记录索引<code>index - n + 1</code>到结果列表中，此时字符串继续遍历，为保证<code>subs</code>长度与<code>stat</code>长度一致，此时，<code>subs</code>中移除<code>s[index - n + 1]</code>字符，同时长度减<code>1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findAnagrams</span><span class="params">(self, s: str, p: str)</span> -&gt; List[int]:</span></div><div class="line">        stat = collections.Counter(p)</div><div class="line">        n = len(p)</div><div class="line">        stat[<span class="string">'length'</span>] = n</div><div class="line">        result = []</div><div class="line">        subs = collections.defaultdict(int)</div><div class="line">        <span class="keyword">for</span> index, ch <span class="keyword">in</span> enumerate(s):</div><div class="line">            <span class="keyword">if</span> ch <span class="keyword">in</span> stat:</div><div class="line">                subs[ch] += <span class="number">1</span></div><div class="line">                subs[<span class="string">'length'</span>] += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                subs = collections.defaultdict(int)</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            <span class="keyword">if</span> subs[<span class="string">'length'</span>] == stat[<span class="string">'length'</span>]:</div><div class="line">                <span class="keyword">if</span> stat == subs:</div><div class="line">                    result.append(index - n + <span class="number">1</span>)</div><div class="line">                subs[s[index - n + <span class="number">1</span>]] -= <span class="number">1</span></div><div class="line">                subs[<span class="string">'length'</span>] -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-all-anagrams-in-a-string/" target="_blank" rel="external">https://leetcode.com/problems/find-all-anagrams-in-a-string/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 438. Find All Anagrams in a String
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 540. Single Element in a Sorted Array</title>
    <link href="http://noahsnail.com/2021/08/25/2021-08-25-Leetcode-540-Single-Element-in-a-Sorted-Array/"/>
    <id>http://noahsnail.com/2021/08/25/2021-08-25-Leetcode-540-Single-Element-in-a-Sorted-Array/</id>
    <published>2021-08-25T01:39:31.234Z</published>
    <updated>2021-08-25T01:58:18.339Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Single_Element_in_a_Sorted_Array.png" alt="Single Element in a Sorted Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用类似于二分查找的方式寻找单个元素，首先计算中间位置的索引<code>mid</code>，如果<code>mid</code>为奇数，说明数组左半部分有偶数个元素(索引从<code>0</code>开始)，比较<code>nums[mid]</code>与其左边的元素<code>nums[mid-1]</code>，如果二者相等，则表明左半部分一定不存在单个元素，因此<code>left=mid+1</code>，如果二者不相等，则其一定等于右边的元素，此时<code>right=mid-1</code>；如果<code>mid</code>为偶数，明数组左半部分有寄数个元素，比较<code>nums[mid]</code>与其左边的元素<code>nums[mid-1]</code>，如果二者相等，则表明左半部分一定存在单个元素，此时<code>right=mid-2</code>，即移除两个相等元素，如果不相等，则比较<code>nums[mid]</code>与右边的元素nums[mid+1]，如果二者相等，则表明右半部分一定存在单个元素，此时<code>left = mid + 2</code>，如果两者都不满足，说明<code>nums[mid]</code>就是要找的单个元素。注意<code>left &lt; right</code>的边界条件，这样不会出现数组越界的情况，要充分利用索引的奇偶性以及数组存在单个元素时的奇偶性，始终保持下一部分要查找的子数组含有奇数个元素。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">singleNonDuplicate</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        left = <span class="number">0</span></div><div class="line">        right = n - <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> left &lt; right:</div><div class="line">            mid = (left + right) // <span class="number">2</span></div><div class="line">            <span class="keyword">if</span> mid % <span class="number">2</span> == <span class="number">1</span>:</div><div class="line">                <span class="keyword">if</span> nums[mid] == nums[mid - <span class="number">1</span>]:</div><div class="line">                    left = mid + <span class="number">1</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    right = mid - <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">if</span> nums[mid] == nums[mid - <span class="number">1</span>]:</div><div class="line">                    right = mid - <span class="number">2</span></div><div class="line">                <span class="keyword">elif</span> nums[mid] == nums[mid + <span class="number">1</span>]:</div><div class="line">                    left = mid + <span class="number">2</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    <span class="keyword">return</span> nums[mid]</div><div class="line">        <span class="keyword">return</span> nums[left]</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/single-element-in-a-sorted-array/" target="_blank" rel="external">https://leetcode.com/problems/single-element-in-a-sorted-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 540. Single Element in a Sorted Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 941. Valid Mountain Array</title>
    <link href="http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-941-Valid-Mountain-Array/"/>
    <id>http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-941-Valid-Mountain-Array/</id>
    <published>2021-08-24T09:10:17.549Z</published>
    <updated>2021-08-24T09:33:23.434Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Valid_Mountain_Array.png" alt="Valid Mountain Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，通过<code>up</code>和<code>down</code>分别表示山脉的上下过程，比较数组前后两个数，如果相等，直接返回<code>False</code>，如果前者大于后者，没出现过下山<code>down=False</code>，则将上山设为<code>up=True</code>，如果前者小于后者，出现了上山<code>up=False</code>，则将下山设为<code>down=True</code>，不符合上述条件的都直接返回<code>False</code>，最后如果上山下山都出现了，则返回<code>True</code>，否则返回<code>False</code>。Version 2使用双指针分别从左右两侧移动，最后判断两个指针是否满足山脉条件，不满足返回<code>False</code>，满足返回<code>True</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validMountainArray</span><span class="params">(self, arr: List[int])</span> -&gt; bool:</span></div><div class="line">        n = len(arr)</div><div class="line">        up = <span class="keyword">False</span></div><div class="line">        down = <span class="keyword">False</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n - <span class="number">1</span>):</div><div class="line">            <span class="keyword">if</span> arr[i+<span class="number">1</span>] == arr[i]:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            <span class="keyword">elif</span> arr[i+<span class="number">1</span>] &gt; arr[i]:</div><div class="line">                up = <span class="keyword">True</span></div><div class="line">                <span class="keyword">if</span> down:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> up:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">                down = <span class="keyword">True</span></div><div class="line">        <span class="keyword">if</span> up <span class="keyword">and</span> down:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validMountainArray</span><span class="params">(self, arr: List[int])</span> -&gt; bool:</span></div><div class="line">        n = len(arr)</div><div class="line">        <span class="keyword">if</span> n &lt; <span class="number">3</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        i = <span class="number">1</span></div><div class="line">        j = n - <span class="number">2</span></div><div class="line">        <span class="keyword">while</span> i &lt; n <span class="keyword">and</span> arr[i] &gt; arr[i<span class="number">-1</span>]:</div><div class="line">            i += <span class="number">1</span></div><div class="line">        i -= <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> j &gt; <span class="number">-1</span> <span class="keyword">and</span> arr[j] &gt; arr[j+<span class="number">1</span>]:</div><div class="line">            j -= <span class="number">1</span></div><div class="line">        j += <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> i == <span class="number">0</span> <span class="keyword">or</span> j == n - <span class="number">1</span> <span class="keyword">or</span> i != j:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/valid-mountain-array/" target="_blank" rel="external">https://leetcode.com/problems/valid-mountain-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 941. Valid Mountain Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1671. Minimum Number of Removals to Make Mountain Array</title>
    <link href="http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-1671-Minimum-Number-of-Removals-to-Make-Mountain-Array/"/>
    <id>http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-1671-Minimum-Number-of-Removals-to-Make-Mountain-Array/</id>
    <published>2021-08-24T08:35:29.313Z</published>
    <updated>2021-08-24T09:09:05.943Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Minimum_Number_of_Removals_to_Make_Mountain_Array.png" alt="Minimum Number of Removals to Make Mountain Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，分别以数组中的元素作为中心点，在左右两侧分别求最长递增子序列，根据左右两侧的最长递增子序列的长度求出山脉的长度，则要删除的元素个数为数组长度减去最长的山脉长度，速度太慢。Version 2在Version 1的基础上进行了优化，分别求出数组正序和逆序各个位置的最长递增子序列，然后跟Version 1类似，累加左右对应位置的最长递增子序列的长度，即为山脉的长度，则要删除的元素个数为数组长度减去最长的山脉长度，速度明显有了大幅提升。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minimumMountainRemovals</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        maximum = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">1</span>, n - <span class="number">1</span>):</div><div class="line">            left = [nums[index]]</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(index - <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</div><div class="line">                <span class="keyword">if</span> nums[i] &gt;= nums[index] <span class="keyword">or</span> nums[i] == left[<span class="number">0</span>]:</div><div class="line">                    <span class="keyword">continue</span></div><div class="line">                <span class="keyword">elif</span> nums[i] &lt; left[<span class="number">0</span>]:</div><div class="line">                    bisect.insort(left, nums[i])</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    pos = bisect.bisect(left, nums[i])</div><div class="line">                    left[pos<span class="number">-1</span>] = nums[i]</div><div class="line">            <span class="keyword">if</span> len(left) &lt; <span class="number">2</span>:</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            right = [nums[index]]</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(index+<span class="number">1</span>, n):</div><div class="line">                <span class="keyword">if</span> nums[i] &gt;= nums[index] <span class="keyword">or</span> nums[i] == right[<span class="number">0</span>]:</div><div class="line">                    <span class="keyword">continue</span></div><div class="line">                <span class="keyword">if</span> nums[i] &lt; right[<span class="number">0</span>]:</div><div class="line">                    bisect.insort(right, nums[i])</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    pos = bisect.bisect(right, nums[i])</div><div class="line">                    right[pos<span class="number">-1</span>] = nums[i]</div><div class="line">            <span class="keyword">if</span> len(right) &gt; <span class="number">1</span>:</div><div class="line">                maximum = max(maximum, len(left) + len(right) - <span class="number">1</span>)</div><div class="line">        <span class="keyword">return</span> n - maximum</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minimumMountainRemovals</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        maximum = <span class="number">0</span></div><div class="line">        left = self.LIS(nums)</div><div class="line">        right = self.LIS(nums[::<span class="number">-1</span>])</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            <span class="keyword">if</span> left[i] &gt; <span class="number">1</span> <span class="keyword">and</span> right[n-i<span class="number">-1</span>] &gt; <span class="number">1</span>:</div><div class="line">                maximum = max(maximum, left[i] + right[n-i<span class="number">-1</span>] - <span class="number">1</span>)</div><div class="line">        <span class="keyword">return</span> n - maximum</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">LIS</span><span class="params">(self, nums)</span>:</span></div><div class="line">        n = len(nums)</div><div class="line">        dp = [<span class="number">1</span>] * n</div><div class="line">        arr = [nums[<span class="number">0</span>]]</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</div><div class="line">            <span class="keyword">if</span> nums[i] &gt; arr[<span class="number">-1</span>]:</div><div class="line">                arr.append(nums[i])</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                pos = bisect.bisect_left(arr, nums[i])</div><div class="line">                arr[pos] = nums[i]</div><div class="line">            dp[i] = len(arr)</div><div class="line">        <span class="keyword">return</span> dp</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array/" target="_blank" rel="external">https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1671. Minimum Number of Removals to Make Mountain Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 845. Longest Mountain in Array</title>
    <link href="http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-845-Longest-Mountain-in-Array/"/>
    <id>http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-845-Longest-Mountain-in-Array/</id>
    <published>2021-08-24T06:31:31.813Z</published>
    <updated>2021-08-24T09:21:23.306Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Longest_Mountain_in_Array.png" alt="Longest Mountain in Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，统计山脉元素个数，首先山脉是先上后下，<code>up</code>和<code>down</code>的状态分别表示山脉的上下状态，初始状态都为<code>False</code>，只有<code>down=True</code>时，才记录山脉的最大长度，即最大子数组的长度，当后一个元素大于前一元素时，如果<code>up=True</code>，说明已经记录了上坡长度，此时判断下坡是否也记录了，如果<code>down=True</code>，则说明此次上坡是下一山脉的开始，则<code>down=False, count=2</code>，如果<code>down=False</code>，说明还处于当前山脉的上坡阶段，此时<code>count+=1</code>，如果<code>up=False</code>，则说明是山脉的刚开始，此时<code>up=True, count=2</code>；当后一个元素小于前一元素时，如果<code>up=True</code>，说明此时是当前山脉的下坡阶段，<code>count+=1, down=True</code>；如果<code>up=False</code>，说明此时不处于任何山脉的记录阶段，如果两个元素相等，重置<code>up=False, down=False</code>，时间复杂度<code>O(n)</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestMountain</span><span class="params">(self, arr: List[int])</span> -&gt; int:</span></div><div class="line">        n = len(arr)</div><div class="line">        maximum = <span class="number">0</span></div><div class="line">        up = <span class="keyword">False</span></div><div class="line">        down = <span class="keyword">False</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n - <span class="number">1</span>):</div><div class="line">            <span class="keyword">if</span> arr[i+<span class="number">1</span>] &gt; arr[i]:</div><div class="line">                <span class="keyword">if</span> up:</div><div class="line">                    <span class="keyword">if</span> down:</div><div class="line">                        down = <span class="keyword">False</span></div><div class="line">                        count = <span class="number">2</span></div><div class="line">                    <span class="keyword">else</span>:</div><div class="line">                        count += <span class="number">1</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    up = <span class="keyword">True</span></div><div class="line">                    count = <span class="number">2</span></div><div class="line">            <span class="keyword">elif</span> arr[i+<span class="number">1</span>] &lt; arr[i]:</div><div class="line">                <span class="keyword">if</span> up:</div><div class="line">                    count += <span class="number">1</span></div><div class="line">                    down = <span class="keyword">True</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                up = <span class="keyword">False</span></div><div class="line">                down = <span class="keyword">False</span></div><div class="line">            <span class="keyword">if</span> down:</div><div class="line">                maximum = max(maximum, count)</div><div class="line">        <span class="keyword">if</span> maximum &lt; <span class="number">3</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span></div><div class="line">        <span class="keyword">return</span> maximum</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/longest-mountain-in-array/" target="_blank" rel="external">https://leetcode.com/problems/longest-mountain-in-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 845. Longest Mountain in Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 914. X of a Kind in a Deck of Cards</title>
    <link href="http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-914-X-of-a-Kind-in-a-Deck-of-Cards/"/>
    <id>http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-914-X-of-a-Kind-in-a-Deck-of-Cards/</id>
    <published>2021-08-24T05:40:42.135Z</published>
    <updated>2021-08-24T05:43:49.327Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/X_of_a_Kind_in_a_Deck_of_Cards.png" alt="X of a Kind in a Deck of Cards"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，统计元素个数，遍历所有可能的分割数量，下限为<code>2</code>，上限为最少的元素个数，如果满足条件，返回<code>True</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hasGroupsSizeX</span><span class="params">(self, deck: List[int])</span> -&gt; bool:</span></div><div class="line">        stat = collections.Counter(deck)</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">2</span>, min(stat.values()) + <span class="number">1</span>):</div><div class="line">            flag = <span class="keyword">True</span></div><div class="line">            <span class="keyword">for</span> val <span class="keyword">in</span> stat.values():</div><div class="line">                <span class="keyword">if</span> val % j != <span class="number">0</span>:</div><div class="line">                    flag = <span class="keyword">False</span></div><div class="line">                    <span class="keyword">break</span></div><div class="line">            <span class="keyword">if</span> flag:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/" target="_blank" rel="external">https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 914. X of a Kind in a Deck of Cards
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 957. Prison Cells After N Days</title>
    <link href="http://noahsnail.com/2021/08/23/2021-08-23-Leetcode-957-Prison-Cells-After-N-Days/"/>
    <id>http://noahsnail.com/2021/08/23/2021-08-23-Leetcode-957-Prison-Cells-After-N-Days/</id>
    <published>2021-08-23T09:43:11.242Z</published>
    <updated>2021-08-23T09:53:37.698Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Prison_Cells_After_N_Days.png" alt="Prison Cells After N Days"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，根据变换规则可知，第一位和最后一位总是<code>0</code>，因此只有中间<code>6</code>位数在变，最大可能的变换周期为<code>2^6</code>。因此只要记录变换周期，因此周期中的所有状态就可得出变换结果，使用字典<code>stat</code>来判断每次变换是否与之前的重复，列表<code>state</code>记录状态变化，当出现重复状态时，计算变换的周期<code>peroid</code>，以及一个周期的状态变化，如果没出现周期，则直接返回变换后的结果，如果出现了，则返回计算后的状态。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prisonAfterNDays</span><span class="params">(self, cells: List[int], n: int)</span> -&gt; List[int]:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        state = []</div><div class="line">        temp = <span class="string">''</span>.join(list(map(str, cells)))</div><div class="line">        stat[temp] = <span class="number">0</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        pre = cells[:]</div><div class="line">        state.append(pre)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            count += <span class="number">1</span></div><div class="line">            cells[<span class="number">0</span>] = <span class="number">0</span></div><div class="line">            cells[<span class="number">7</span>] = <span class="number">0</span></div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">7</span>):</div><div class="line">                <span class="keyword">if</span> (pre[j<span class="number">-1</span>] == <span class="number">1</span> <span class="keyword">and</span> pre[j+<span class="number">1</span>] == <span class="number">1</span>) <span class="keyword">or</span> (pre[j<span class="number">-1</span>] == <span class="number">0</span> <span class="keyword">and</span> pre[j+<span class="number">1</span>] == <span class="number">0</span>):</div><div class="line">                    cells[j] = <span class="number">1</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    cells[j] = <span class="number">0</span></div><div class="line">            temp = <span class="string">''</span>.join(list(map(str, cells)))</div><div class="line">            <span class="keyword">if</span> temp <span class="keyword">not</span> <span class="keyword">in</span> stat:</div><div class="line">                stat[temp] = count</div><div class="line">                pre = cells[:]</div><div class="line">                state.append(pre)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                peroid = count - stat[temp]</div><div class="line">                state = state[stat[temp]:]</div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">if</span> count == n:</div><div class="line">            <span class="keyword">return</span> cells</div><div class="line">        <span class="keyword">return</span> state[(n - count) % peroid]</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/prison-cells-after-n-days/" target="_blank" rel="external">https://leetcode.com/problems/prison-cells-after-n-days/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 957. Prison Cells After N Days
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1030. Matrix Cells in Distance Order</title>
    <link href="http://noahsnail.com/2021/08/23/2021-08-23-Leetcode-1030-Matrix-Cells-in-Distance-Order/"/>
    <id>http://noahsnail.com/2021/08/23/2021-08-23-Leetcode-1030-Matrix-Cells-in-Distance-Order/</id>
    <published>2021-08-23T08:14:49.653Z</published>
    <updated>2021-08-23T08:29:31.133Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Matrix_Cells_in_Distance_Order.png" alt="Matrix Cells in Distance Order"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，直接根据距离进行排序。Version 使用广度优先搜索。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">allCellsDistOrder</span><span class="params">(self, rows: int, cols: int, rCenter: int, cCenter: int)</span> -&gt; List[List[int]]:</span></div><div class="line">        coordinates = [[i, j] <span class="keyword">for</span> i <span class="keyword">in</span> range(rows) <span class="keyword">for</span> j <span class="keyword">in</span> range(cols)]</div><div class="line">        coordinates.sort(key=<span class="keyword">lambda</span> x: abs(x[<span class="number">0</span>] - rCenter) + abs(x[<span class="number">1</span>] - cCenter))</div><div class="line">        <span class="keyword">return</span> coordinates</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">allCellsDistOrder</span><span class="params">(self, rows: int, cols: int, rCenter: int, cCenter: int)</span> -&gt; List[List[int]]:</span></div><div class="line">        matrix = [[<span class="number">0</span>] * cols <span class="keyword">for</span> i <span class="keyword">in</span> range(rows)]</div><div class="line">        queue = collections.deque()</div><div class="line">        queue.append((rCenter, cCenter))</div><div class="line">        matrix[rCenter][cCenter] = <span class="number">1</span></div><div class="line">        coordinates = []</div><div class="line">        <span class="keyword">while</span> queue:</div><div class="line">            x, y = queue.popleft()</div><div class="line">            coordinates.append([x, y])</div><div class="line">            matrix[x][y] = <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> x &gt; <span class="number">0</span> <span class="keyword">and</span> matrix[x<span class="number">-1</span>][y] == <span class="number">0</span>:</div><div class="line">                matrix[x<span class="number">-1</span>][y] = <span class="number">1</span></div><div class="line">                queue.append((x<span class="number">-1</span>, y))             </div><div class="line">            <span class="keyword">if</span> x &lt; rows - <span class="number">1</span> <span class="keyword">and</span> matrix[x+<span class="number">1</span>][y] == <span class="number">0</span>:</div><div class="line">                matrix[x+<span class="number">1</span>][y] = <span class="number">1</span></div><div class="line">                queue.append((x+<span class="number">1</span>, y))   </div><div class="line">            <span class="keyword">if</span> y &gt; <span class="number">0</span> <span class="keyword">and</span> matrix[x][y<span class="number">-1</span>] == <span class="number">0</span>:</div><div class="line">                matrix[x][y<span class="number">-1</span>] = <span class="number">1</span></div><div class="line">                queue.append((x, y<span class="number">-1</span>))             </div><div class="line">            <span class="keyword">if</span> y &lt; cols - <span class="number">1</span> <span class="keyword">and</span> matrix[x][y+<span class="number">1</span>] == <span class="number">0</span>:</div><div class="line">                matrix[x][y+<span class="number">1</span>] = <span class="number">1</span></div><div class="line">                queue.append((x, y+<span class="number">1</span>))   </div><div class="line">        <span class="keyword">return</span> coordinates</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/matrix-cells-in-distance-order/" target="_blank" rel="external">https://leetcode.com/problems/matrix-cells-in-distance-order/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1030. Matrix Cells in Distance Order
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1304. Find N Unique Integers Sum up to Zero</title>
    <link href="http://noahsnail.com/2021/08/20/2021-08-20-Leetcode-1304-Find-N-Unique-Integers-Sum-up-to-Zero/"/>
    <id>http://noahsnail.com/2021/08/20/2021-08-20-Leetcode-1304-Find-N-Unique-Integers-Sum-up-to-Zero/</id>
    <published>2021-08-20T09:45:34.190Z</published>
    <updated>2021-08-20T09:46:11.956Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Find_N_Unique_Integers_Sum_up_to_Zero.png" alt="Find N Unique Integers Sum up to Zero"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，为了实现和为<code>0</code>，因此添加元素时成对添加<code>+i, -i</code>，如果<code>n</code>为奇数，再加上<code>0</code>即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sumZero</span><span class="params">(self, n: int)</span> -&gt; List[int]:</span></div><div class="line">        result = []</div><div class="line">        <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">1</span>:</div><div class="line">            result.append(<span class="number">0</span>)</div><div class="line">        x = n // <span class="number">2</span> + <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, x):</div><div class="line">            result.append(i)</div><div class="line">            result.append(-i)</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero/" target="_blank" rel="external">https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1304. Find N Unique Integers Sum up to Zero
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
