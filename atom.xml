<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SnailTyan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://noahsnail.com/"/>
  <updated>2023-01-10T02:39:44.597Z</updated>
  <id>http://noahsnail.com/</id>
  
  <author>
    <name>Tyan</name>
    <email>Tyan.Liu.Git@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Leetcode 2211. Count Collisions on a Road</title>
    <link href="http://noahsnail.com/2023/01/10/2023-01-10-Leetcode-2211-Count-Collisions-on-a-Road/"/>
    <id>http://noahsnail.com/2023/01/10/2023-01-10-Leetcode-2211-Count-Collisions-on-a-Road/</id>
    <published>2023-01-10T02:10:46.052Z</published>
    <updated>2023-01-10T02:39:44.597Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/2211_Count_Collisions_on_a_Road.png" alt="Count Collisions on a Road"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，从左向右依次遍历，记录车辆左边可能发生碰撞的车辆状态及数量，当发生碰撞时，累加碰撞数量，并更新左边车辆状态。只有左边车辆状态为<code>R</code>时，才有可能出现多个连续<code>R</code>车辆与当前车辆发生碰撞，因此通过count来统计多个连续<code>R</code>车辆的数量，并在发生碰撞时重新计数。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countCollisions</span><span class="params">(self, directions: str)</span> -&gt; int:</span></span><br><span class="line">        collisions = <span class="number">0</span></span><br><span class="line">        left = <span class="string">''</span></span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> directions:</span><br><span class="line">            <span class="keyword">if</span> left == <span class="string">''</span>:</span><br><span class="line">                left = ch</span><br><span class="line">                <span class="keyword">if</span> ch == <span class="string">'R'</span>:</span><br><span class="line">                    count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> ch == <span class="string">'L'</span>:</span><br><span class="line">                    <span class="keyword">if</span> left == <span class="string">'R'</span>:</span><br><span class="line">                        collisions = collisions + count + <span class="number">1</span></span><br><span class="line">                        left = <span class="string">'S'</span></span><br><span class="line">                        count = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">elif</span> left == <span class="string">'S'</span>:</span><br><span class="line">                        left = <span class="string">'S'</span></span><br><span class="line">                        collisions += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> ch == <span class="string">'R'</span>:</span><br><span class="line">                    left = <span class="string">'R'</span></span><br><span class="line">                    count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> left == <span class="string">'R'</span>:</span><br><span class="line">                        collisions = collisions + count</span><br><span class="line">                        count = <span class="number">0</span></span><br><span class="line">                    left = <span class="string">'S'</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> collisions</span><br></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<p><strong>解析：</strong>Version 2，只有最左边的连续<code>L</code>和最右边的连续<code>R</code>才不会发生碰撞，其它情况下<code>L</code>和<code>R</code>都会发生碰撞，找到碰撞的起点和终点，统计发生碰撞的数量即可。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countCollisions</span><span class="params">(self, directions: str)</span> -&gt; int:</span></span><br><span class="line">        collisions = <span class="number">0</span></span><br><span class="line">        left = <span class="number">0</span></span><br><span class="line">        right = len(directions) - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> left &lt; len(directions) <span class="keyword">and</span> directions[left] == <span class="string">'L'</span>:</span><br><span class="line">            left += <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> right &gt;= <span class="number">0</span> <span class="keyword">and</span> directions[right] == <span class="string">'R'</span>:</span><br><span class="line">            right -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(left, right+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> directions[i] != <span class="string">'S'</span>:</span><br><span class="line">                collisions += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> collisions</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/count-collisions-on-a-road/description/" target="_blank" rel="noopener">https://leetcode.com/problems/count-collisions-on-a-road/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 2211. Count Collisions on a Road
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1447. Simplified Fractions</title>
    <link href="http://noahsnail.com/2022/12/02/2022-12-02-Leetcode-1447-Simplified-Fractions/"/>
    <id>http://noahsnail.com/2022/12/02/2022-12-02-Leetcode-1447-Simplified-Fractions/</id>
    <published>2022-12-02T00:55:56.888Z</published>
    <updated>2022-12-02T06:22:04.932Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/1447_Simplified_Fractions.png" alt="Simplified Fractions"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，枚举所有的可能的数字组合，如果分子为<code>1</code>，一定是符合条件的，其它情况，需要判断二者是否有大于1最大公约数，使用辗转相除法，求余数，如果存在最大公约数，则返回的余数一定为<code>0</code>，否则返回的余数为1，当约束为<code>1</code>时，符合条件，加入到结果集中。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">simplifiedFractions</span><span class="params">(self, n: int)</span> -&gt; List[str]:</span></span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, n):</span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> range(x+<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> x == <span class="number">1</span>:</span><br><span class="line">                    res.append(f<span class="string">'&#123;x&#125;/&#123;y&#125;'</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> self.gcd(x, y):</span><br><span class="line">                        res.append(f<span class="string">'&#123;x&#125;/&#123;y&#125;'</span>)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(self, a, b)</span>:</span></span><br><span class="line">        remainder = a % b</span><br><span class="line">        <span class="keyword">while</span> remainder &gt; <span class="number">1</span>:</span><br><span class="line">            a = b</span><br><span class="line">            b = remainder</span><br><span class="line">            remainder = a % b</span><br><span class="line">        <span class="keyword">return</span> remainder</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/simplified-fractions/" target="_blank" rel="noopener">https://leetcode.com/problems/simplified-fractions/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1447. Simplified Fractions
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 2423. Remove Letter To Equalize Frequency</title>
    <link href="http://noahsnail.com/2022/11/25/2022-11-25-Leetcode-2423-Remove-Letter-To-Equalize-Frequency/"/>
    <id>http://noahsnail.com/2022/11/25/2022-11-25-Leetcode-2423-Remove-Letter-To-Equalize-Frequency/</id>
    <published>2022-11-25T02:06:37.860Z</published>
    <updated>2022-11-28T01:03:35.981Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/2423_Remove_Letter_To_Equalize_Frequency.png" alt="Remove Letter To Equalize Frequency"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，首先统计各字符数量，被移除的字符只有两种情况，移除一个字符数量为1的字符，移除一个数量最大的字符，然后分别判断剩下的字符频率是否相等。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">equalFrequency</span><span class="params">(self, word: str)</span> -&gt; bool:</span></span><br><span class="line">        stat = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> word:</span><br><span class="line">            stat[ch] = stat.get(ch, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        count = list(stat.values())</span><br><span class="line">        count.sort()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> count[<span class="number">0</span>] - <span class="number">1</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> len(set(count[<span class="number">1</span>:])) == <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        count[<span class="number">-1</span>] -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> len(set(count)) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/remove-letter-to-equalize-frequency/" target="_blank" rel="noopener">https://leetcode.com/problems/remove-letter-to-equalize-frequency/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 2423. Remove Letter To Equalize Frequency
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1108. Defanging an IP Address</title>
    <link href="http://noahsnail.com/2022/11/24/2022-11-24-Leetcode-1108-Defanging-an-IP-Address/"/>
    <id>http://noahsnail.com/2022/11/24/2022-11-24-Leetcode-1108-Defanging-an-IP-Address/</id>
    <published>2022-11-24T08:19:52.189Z</published>
    <updated>2022-11-24T08:21:09.309Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/1108_Defanging_an_IP_Address.png" alt="Defanging an IP Address"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，遍历替换字符即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">defangIPaddr</span><span class="params">(self, address: str)</span> -&gt; str:</span></span><br><span class="line">        res = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> address:</span><br><span class="line">            <span class="keyword">if</span> ch == <span class="string">'.'</span>:</span><br><span class="line">                res += <span class="string">'[.]'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res += ch</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/defanging-an-ip-address/" target="_blank" rel="noopener">https://leetcode.com/problems/defanging-an-ip-address/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1108. Defanging an IP Address
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 2278. Percentage of Letter in String</title>
    <link href="http://noahsnail.com/2022/11/24/2022-11-24-Leetcode-2278-Percentage-of-Letter-in-String/"/>
    <id>http://noahsnail.com/2022/11/24/2022-11-24-Leetcode-2278-Percentage-of-Letter-in-String/</id>
    <published>2022-11-24T08:13:13.845Z</published>
    <updated>2022-11-24T08:14:40.849Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/2278_Percentage_of_Letter_in_String.png" alt="Percentage of Letter in String"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先统计出字符个数，然后求百分比即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">percentageLetter</span><span class="params">(self, s: str, letter: str)</span> -&gt; int:</span></span><br><span class="line">        n = len(s)</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> ch == letter:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">        percent = count * <span class="number">100</span> // n</span><br><span class="line">        <span class="keyword">return</span> percent</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/percentage-of-letter-in-string/" target="_blank" rel="noopener">https://leetcode.com/problems/percentage-of-letter-in-string/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 2278. Percentage of Letter in String
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1991. Find the Middle Index in Array</title>
    <link href="http://noahsnail.com/2022/11/07/2022-11-07-Leetcode-1991-Find-the-Middle-Index-in-Array/"/>
    <id>http://noahsnail.com/2022/11/07/2022-11-07-Leetcode-1991-Find-the-Middle-Index-in-Array/</id>
    <published>2022-11-07T00:49:17.798Z</published>
    <updated>2022-11-07T00:53:14.741Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/1991_Find_the_Middle_Index_in_Array.png" alt="Partition Array Into Three Parts With Equal Sum"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先统计出数组的总和，遍历数组，分别统计<code>index</code>左右两部分，如果相等，返回<code>index</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMiddleIndex</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></span><br><span class="line">        total = sum(nums)</span><br><span class="line">        left = <span class="number">0</span></span><br><span class="line">        right = total</span><br><span class="line">        <span class="keyword">for</span> index, num <span class="keyword">in</span> enumerate(nums):</span><br><span class="line">            right -= num</span><br><span class="line">            <span class="keyword">if</span> left == right:</span><br><span class="line">                <span class="keyword">return</span> index</span><br><span class="line">            left += num</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-the-middle-index-in-array/" target="_blank" rel="noopener">https://leetcode.com/problems/find-the-middle-index-in-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1991. Find the Middle Index in Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1013. Partition Array Into Three Parts With Equal Sum</title>
    <link href="http://noahsnail.com/2022/11/04/2022-11-04-Leetcode%201013-Partition-Array-Into-Three-Parts-With-Equal-Sum/"/>
    <id>http://noahsnail.com/2022/11/04/2022-11-04-Leetcode 1013-Partition-Array-Into-Three-Parts-With-Equal-Sum/</id>
    <published>2022-11-04T00:37:37.373Z</published>
    <updated>2022-11-07T00:47:26.894Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/1013_Partition_Array_Into_Three_Parts_With_Equal_Sum.png" alt="Partition Array Into Three Parts With Equal Sum"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，统计数组的和，求出三分之一是多少，如果不能整除，直接返回<code>False</code>，如果可以整除，计算出三分之一目标，遍历数组，因此累加数值，如果累加和等于<code>target</code>，则和重置为0，重新累加，记录累加和等于<code>target</code>的次数，如果可以满足3个以上，则返回<code>True</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">canThreePartsEqualSum</span><span class="params">(self, arr: List[int])</span> -&gt; bool:</span></span><br><span class="line">        total = sum(arr)</span><br><span class="line">        <span class="keyword">if</span> total % <span class="number">3</span> != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        target = total // <span class="number">3</span></span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> arr:</span><br><span class="line">            res += num</span><br><span class="line">            <span class="keyword">if</span> res == target:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> count &gt;=<span class="number">3</span></span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum/" target="_blank" rel="noopener">https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1013. Partition Array Into Three Parts With Equal Sum
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1984. Minimum Difference Between Highest and Lowest of K Scores</title>
    <link href="http://noahsnail.com/2022/10/26/2022-10-26-Leetcode-1984-Minimum-Difference-Between-Highest-and-Lowest-of-K-Scores/"/>
    <id>http://noahsnail.com/2022/10/26/2022-10-26-Leetcode-1984-Minimum-Difference-Between-Highest-and-Lowest-of-K-Scores/</id>
    <published>2022-10-26T09:07:41.344Z</published>
    <updated>2022-10-28T06:39:18.492Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/1984_Minimum_Difference_Between_Highest_and_Lowest_of_K_Scores.png" alt="Minimum Difference Between Highest and Lowest of K Scores"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先对数组排序，K个数的最小差值一定出现在相邻的K个数中，每K个有序数，其最大的差值为两边的数字，依次遍历计算相邻K个数的差值，取最小值即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minimumDifference</span><span class="params">(self, nums: List[int], k: int)</span> -&gt; int:</span></span><br><span class="line">        nums.sort()</span><br><span class="line">        diff = nums[k<span class="number">-1</span>] - nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(nums)-k+<span class="number">1</span>):</span><br><span class="line">            diff = min(diff, nums[i+k<span class="number">-1</span>] - nums[i])</span><br><span class="line">        <span class="keyword">return</span> diff</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-difference-between-highest-and-lowest-of-k-scores/" target="_blank" rel="noopener">https://leetcode.com/problems/minimum-difference-between-highest-and-lowest-of-k-scores/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1984. Minimum Difference Between Highest and Lowest of K Scores
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 561. Array Partition</title>
    <link href="http://noahsnail.com/2022/10/17/2022-10-17-Leetcode-561-Array-Partition/"/>
    <id>http://noahsnail.com/2022/10/17/2022-10-17-Leetcode-561-Array-Partition/</id>
    <published>2022-10-17T01:20:10.952Z</published>
    <updated>2022-10-17T01:25:47.359Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/561_Array_Partition.png" alt="Array Partition"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先对数组排序，遍历数组，每两个数一组可以取得最大和，只统计第一个值。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">arrayPairSum</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></span><br><span class="line">        nums.sort()</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(nums), <span class="number">2</span>):</span><br><span class="line">            res += nums[i]</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/array-partition/" target="_blank" rel="noopener">https://leetcode.com/problems/array-partition/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 561. Array Partition
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 2144. Minimum Cost of Buying Candies With Discount</title>
    <link href="http://noahsnail.com/2022/10/17/2022-10-17-Leetcode-2144-Minimum-Cost-of-Buying-Candies-With-Discount/"/>
    <id>http://noahsnail.com/2022/10/17/2022-10-17-Leetcode-2144-Minimum-Cost-of-Buying-Candies-With-Discount/</id>
    <published>2022-10-17T00:57:25.736Z</published>
    <updated>2022-10-17T01:26:09.928Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/2144_Minimum_Cost_of_Buying_Candies_With_Discount.png" alt="Minimum Cost of Buying Candies With Discount"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先对数组排序，从大到小遍历，每三个数，只统计前两个的cost，不足三个，正常计算。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minimumCost</span><span class="params">(self, cost: List[int])</span> -&gt; int:</span></span><br><span class="line">        cost.sort()</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> cost:</span><br><span class="line">            value = cost.pop()</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> count % <span class="number">3</span> != <span class="number">0</span>:</span><br><span class="line">                res += value</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
<p><strong>解析：</strong>Version 2，先对数组排序，从大到小遍历，每三个数，只统计前两个的cost，不足三个，正常计算。</p>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minimumCost</span><span class="params">(self, cost: List[int])</span> -&gt; int:</span></span><br><span class="line">        cost.sort(reverse=<span class="keyword">True</span>)</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        length = len(cost)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">            <span class="keyword">if</span> i % <span class="number">3</span> == <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res += cost[i]</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-cost-of-buying-candies-with-discount/" target="_blank" rel="noopener">https://leetcode.com/problems/minimum-cost-of-buying-candies-with-discount/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 2144. Minimum Cost of Buying Candies With Discount
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1200. Minimum Absolute Difference</title>
    <link href="http://noahsnail.com/2022/10/13/2022-10-13-Leetcode-1200-Minimum-Absolute-Difference/"/>
    <id>http://noahsnail.com/2022/10/13/2022-10-13-Leetcode-1200-Minimum-Absolute-Difference/</id>
    <published>2022-10-13T09:20:07.537Z</published>
    <updated>2022-10-13T09:26:19.102Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/1200_Minimum_Absolute_Difference.png" alt="Minimum Absolute Difference"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先对数组排序，数字对的差值最小值一定出现在两个相邻的数字之间，遍历数组，依次计算两个相邻数字之间的差值，如果差值小于最小值，则将当前数字放入一个新的结果数组中，更新最小值，如果差值等于最小值，则将当前数字对放入到结果数组中，如果大于，则不进行任何操作。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minimumAbsDifference</span><span class="params">(self, arr: List[int])</span> -&gt; List[List[int]]:</span></span><br><span class="line">        arr.sort()</span><br><span class="line">        res = []</span><br><span class="line">        min_value = float(<span class="string">'inf'</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(arr)<span class="number">-1</span>):</span><br><span class="line">            diff = arr[i+<span class="number">1</span>] - arr[i]</span><br><span class="line">            <span class="keyword">if</span> diff &lt; min_value:</span><br><span class="line">                min_value = arr[i+<span class="number">1</span>] - arr[i]</span><br><span class="line">                res = [[arr[i], arr[i+<span class="number">1</span>]]]</span><br><span class="line">            <span class="keyword">elif</span> diff == min_value:</span><br><span class="line">                res.append([arr[i], arr[i+<span class="number">1</span>]])</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-absolute-difference/" target="_blank" rel="noopener">https://leetcode.com/problems/minimum-absolute-difference/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1200. Minimum Absolute Difference
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 2399. Check Distances Between Same Letters</title>
    <link href="http://noahsnail.com/2022/10/10/2022-10-10-Leetcode-2399-Check-Distances-Between-Same-Letters/"/>
    <id>http://noahsnail.com/2022/10/10/2022-10-10-Leetcode-2399-Check-Distances-Between-Same-Letters/</id>
    <published>2022-10-10T02:55:55.149Z</published>
    <updated>2022-10-10T06:34:20.745Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/2399_Check_Distances_Between_Same_Letters.png" alt="Check Distances Between Same Letters"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，统计字符串中两个字符的距离，当统计到第二个字符计算出距离时，检查对应位置的<code>distance</code>是否与统计的一致。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkDistances</span><span class="params">(self, s: str, distance: List[int])</span> -&gt; bool:</span></span><br><span class="line">        stat = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i, ch <span class="keyword">in</span> enumerate(s):</span><br><span class="line">            <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> stat:</span><br><span class="line">                stat[ch] = i</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                stat[ch] =  i - stat[ch] - <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> stat[ch] != distance[ord(ch) - ord(<span class="string">'a'</span>)]:</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/check-distances-between-same-letters/" target="_blank" rel="noopener">https://leetcode.com/problems/check-distances-between-same-letters/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 2399. Check Distances Between Same Letters
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 821. Shortest Distance to a Character</title>
    <link href="http://noahsnail.com/2022/10/10/2022-10-10-Leetcode-821-Shortest-Distance-to-a-Character/"/>
    <id>http://noahsnail.com/2022/10/10/2022-10-10-Leetcode-821-Shortest-Distance-to-a-Character/</id>
    <published>2022-10-10T01:14:33.233Z</published>
    <updated>2022-10-10T02:56:21.628Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/821_Shortest_Distance_to_a_Character.png" alt="Shortest Distance to a Character"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用<code>left</code>，<code>right</code>分别记录当前字符的左右<code>c</code>的位置，左边没有为<code>-1</code>，右边没有为<code>length</code>。先初始化<code>left</code>，<code>right</code>，循环计算时，如果当前位置索引大于<code>right</code>，则对<code>left</code>，<code>right</code>进行更新，更新之后计算距离即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shortestToChar</span><span class="params">(self, s: str, c: str)</span> -&gt; List[int]:</span></span><br><span class="line">        length = len(s)</span><br><span class="line">        res = [<span class="number">0</span>] * length</span><br><span class="line">        left = <span class="number">-1</span></span><br><span class="line">        right = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> s[right] != c:</span><br><span class="line">            right += <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">            <span class="keyword">if</span> right &lt; i:</span><br><span class="line">                left = right</span><br><span class="line">                right += <span class="number">1</span></span><br><span class="line">                <span class="keyword">while</span> right &lt; length <span class="keyword">and</span> s[right] != c:</span><br><span class="line">                    right += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> left &lt; <span class="number">0</span>:</span><br><span class="line">                res[i] = right - i</span><br><span class="line">            <span class="keyword">elif</span> right &gt;= length:</span><br><span class="line">                res[i] = i - left</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res[i] = min(i - left, right - i)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
<p><strong>解析：</strong>Version 2，从左到右遍历数组，记录最左边字符<code>c</code>的位置，依次更新距离，从右往左遍历数组，记录最右边字符<code>c</code>的位置，依次更新。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shortestToChar</span><span class="params">(self, s: str, c: str)</span> -&gt; List[int]:</span></span><br><span class="line">        length = len(s)</span><br><span class="line">        res = [float(<span class="string">'inf'</span>)] * length</span><br><span class="line">        left = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</span><br><span class="line">            <span class="keyword">if</span> s[i] == c:</span><br><span class="line">                left = i</span><br><span class="line">            <span class="keyword">if</span> left &gt; <span class="number">-1</span>:</span><br><span class="line">                res[i] = min(res[i], i - left)</span><br><span class="line">        right = length</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">if</span> s[i] == c:</span><br><span class="line">                right = i</span><br><span class="line">            <span class="keyword">if</span> right &lt; length:</span><br><span class="line">                res[i] = min(res[i], right - i)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/shortest-distance-to-a-character/" target="_blank" rel="noopener">https://leetcode.com/problems/shortest-distance-to-a-character/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 821. Shortest Distance to a Character
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 794. Valid Tic-Tac-Toe State</title>
    <link href="http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-794-Valid-Tic-Tac-Toe-State/"/>
    <id>http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-794-Valid-Tic-Tac-Toe-State/</id>
    <published>2022-10-08T08:20:36.540Z</published>
    <updated>2022-10-09T01:13:36.641Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/794_Valid_Tic-Tac-Toe_State.png" alt="Valid Tic-Tac-Toe State"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，判断游戏合不合法，主要分为下面几个方面：</p>
<ol>
<li>由于<code>X</code>先放，轮流放置，因此<code>X</code>的数量永远大于等于<code>O</code>的数量。</li>
<li>由于是轮流放置，因此二者的数量差值最大为1。</li>
<li>当<code>X</code>先结束游戏时，此时<code>X</code>的数量等于<code>O</code>的数量加1。</li>
<li>当<code>O</code>先结束游戏时，此时<code>X</code>的数量等于<code>O</code>的数量。<br>根据上述条件依次判断即可。</li>
</ol>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validTicTacToe</span><span class="params">(self, board: List[str])</span> -&gt; bool:</span></span><br><span class="line">        x_count = <span class="number">0</span></span><br><span class="line">        o_count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> board:</span><br><span class="line">            <span class="keyword">for</span> ch <span class="keyword">in</span> line:</span><br><span class="line">                <span class="keyword">if</span> ch == <span class="string">'X'</span>:</span><br><span class="line">                    x_count += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> ch == <span class="string">'O'</span>:</span><br><span class="line">                    o_count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> o_count &gt; x_count <span class="keyword">or</span> x_count &gt; o_count + <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">if</span> x_count == o_count <span class="keyword">and</span> self.isGameOver(board, <span class="string">'X'</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">        <span class="keyword">if</span> x_count == o_count + <span class="number">1</span> <span class="keyword">and</span> self.isGameOver(board, <span class="string">'O'</span>):</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isGameOver</span><span class="params">(self, board: List[str], ch: str)</span> -&gt; bool:</span></span><br><span class="line">        <span class="comment"># Check rows</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">            <span class="keyword">if</span> board[i][<span class="number">0</span>] == ch <span class="keyword">and</span> board[i][<span class="number">0</span>] == board[i][<span class="number">1</span>] <span class="keyword">and</span> board[i][<span class="number">1</span>] == board[i][<span class="number">2</span>]:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Check columns</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">            <span class="keyword">if</span> board[<span class="number">0</span>][i] == ch <span class="keyword">and</span> board[<span class="number">0</span>][i] == board[<span class="number">1</span>][i] <span class="keyword">and</span> board[<span class="number">1</span>][i] == board[<span class="number">2</span>][i]:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Check diagonals</span></span><br><span class="line">        <span class="keyword">if</span> board[<span class="number">1</span>][<span class="number">1</span>] == ch <span class="keyword">and</span> ((board[<span class="number">0</span>][<span class="number">0</span>] == board[<span class="number">1</span>][<span class="number">1</span>] <span class="keyword">and</span> board[<span class="number">1</span>][<span class="number">1</span>] == board[<span class="number">2</span>][<span class="number">2</span>]) <span class="keyword">or</span></span><br><span class="line">            (board[<span class="number">0</span>][<span class="number">2</span>] == board[<span class="number">1</span>][<span class="number">1</span>] <span class="keyword">and</span> board[<span class="number">1</span>][<span class="number">1</span>] == board[<span class="number">2</span>][<span class="number">0</span>])):</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/valid-tic-tac-toe-state/" target="_blank" rel="noopener">https://leetcode.com/problems/valid-tic-tac-toe-state/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 794. Valid Tic-Tac-Toe State
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1598. Crawler Log Folder</title>
    <link href="http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-1598-Crawler-Log-Folder/"/>
    <id>http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-1598-Crawler-Log-Folder/</id>
    <published>2022-10-08T07:19:39.816Z</published>
    <updated>2022-10-09T01:12:59.597Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/1598_Crawler_Log_Folder.png" alt="Crawler Log Folder"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用数据结构栈，依次处理日志操作即可，最后栈中的元素数量即为当前在第几层子目录，因此返回根目录的次数为栈的长度。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minOperations</span><span class="params">(self, logs: List[str])</span> -&gt; int:</span></span><br><span class="line">        stack = []</span><br><span class="line">        <span class="keyword">for</span> log <span class="keyword">in</span> logs:</span><br><span class="line">            <span class="keyword">if</span> log == <span class="string">'./'</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> log == <span class="string">'../'</span>:</span><br><span class="line">                <span class="keyword">if</span> stack:</span><br><span class="line">                    stack.pop()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                stack.append(log)</span><br><span class="line">        <span class="keyword">return</span> len(stack)</span><br></pre></td></tr></table></figure>
<p><strong>解析：</strong>Version 2，思想与1一样，直接计数即可。</p>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minOperations</span><span class="params">(self, logs: List[str])</span> -&gt; int:</span></span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> log <span class="keyword">in</span> logs:</span><br><span class="line">            <span class="keyword">if</span> log == <span class="string">'./'</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> log == <span class="string">'../'</span>:</span><br><span class="line">                count = max(<span class="number">0</span>, count - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> count</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/crawler-log-folder/" target="_blank" rel="noopener">https://leetcode.com/problems/crawler-log-folder/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1598. Crawler Log Folder
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 844. Backspace String Compare</title>
    <link href="http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-844-Backspace-String-Compare/"/>
    <id>http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-844-Backspace-String-Compare/</id>
    <published>2022-10-08T07:00:02.391Z</published>
    <updated>2022-10-09T01:12:56.747Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/844_Backspace_String_Compare.png" alt="Backspace String Compare"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用数据结构栈，可以解决这个问题，时间复杂度O(N)。字符每次入栈之前判断是否是星号，如果是，则栈顶元素出栈，继续下一个字符，否则入栈。这里直接变换的字符串。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">backspaceCompare</span><span class="params">(self, s: str, t: str)</span> -&gt; bool:</span></span><br><span class="line">        <span class="keyword">return</span>  self.backspaceString(s) == self.backspaceString(t)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">backspaceString</span><span class="params">(self, s: str)</span>:</span></span><br><span class="line">        res = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> ch == <span class="string">'#'</span>:</span><br><span class="line">                res = res[:<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res += ch</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/backspace-string-compare/" target="_blank" rel="noopener">https://leetcode.com/problems/backspace-string-compare/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 844. Backspace String Compare
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 2390. Removing Stars From a String</title>
    <link href="http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-2390-Removing-Stars-From-a-String/"/>
    <id>http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-2390-Removing-Stars-From-a-String/</id>
    <published>2022-10-08T06:45:41.885Z</published>
    <updated>2022-10-08T07:02:01.080Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Removing_Stars_From_a_String.png" alt="Removing Stars From a String"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用数据结构栈，可以解决这个问题，时间复杂度O(N)。字符每次入栈之前判断是否是星号，如果是，则栈顶元素出栈，继续下一个字符，否则入栈。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeDuplicates</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> res <span class="keyword">and</span> ch == res[<span class="number">-1</span>]:</span><br><span class="line">                res.pop()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res.append(ch)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join(res)</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/removing-stars-from-a-string/" target="_blank" rel="noopener">https://leetcode.com/problems/removing-stars-from-a-string/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 2390. Removing Stars From a String
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1209. Remove All Adjacent Duplicates in String II</title>
    <link href="http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-1209-Remove-All-Adjacent-Duplicates-in-String-II/"/>
    <id>http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-1209-Remove-All-Adjacent-Duplicates-in-String-II/</id>
    <published>2022-10-08T06:22:58.741Z</published>
    <updated>2022-10-08T07:03:09.951Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Remove_All_Adjacent_Duplicates_in_String_II.png" alt="Remove All Adjacent Duplicates in String II"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用数据结构栈来解决这个问题，时间复杂度O(N)。字符每次入栈之前都与栈顶元素进行比较，如果不同，则入栈元组，元组元素为当前字符以及字符个数1，如果字符相同且栈顶相同字符个数不等于<code>k-1</code>，也入栈元组，元组元素为当前字符以及连续相同字符个数，值为栈顶字符的个数加1，否则，移除栈顶的<code>k-1</code>个字符。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeDuplicates</span><span class="params">(self, s: str, k: int)</span> -&gt; str:</span></span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> res <span class="keyword">or</span> res[<span class="number">-1</span>][<span class="number">0</span>] != ch:</span><br><span class="line">                res.append((ch, <span class="number">1</span>))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> res[<span class="number">-1</span>][<span class="number">1</span>] == k <span class="number">-1</span>:</span><br><span class="line">                    <span class="keyword">del</span> res[-k+<span class="number">1</span>:]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.append((ch, res[<span class="number">-1</span>][<span class="number">1</span>] + <span class="number">1</span>))</span><br><span class="line">        res = [x[<span class="number">0</span>] <span class="keyword">for</span> x <span class="keyword">in</span> res]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join(res)</span><br></pre></td></tr></table></figure>
<p><strong>解析：</strong>另一种使用栈的方式，当前字符与栈顶字符相同时，只更新栈顶字符的个数。</p>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeDuplicates</span><span class="params">(self, s: str, k: int)</span> -&gt; str:</span></span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> res <span class="keyword">or</span> res[<span class="number">-1</span>][<span class="number">0</span>] != ch:</span><br><span class="line">                res.append([ch, <span class="number">1</span>])</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> res[<span class="number">-1</span>][<span class="number">1</span>] == k <span class="number">-1</span>:</span><br><span class="line">                    res.pop()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res[<span class="number">-1</span>][<span class="number">1</span>] += <span class="number">1</span></span><br><span class="line">        res = [x[<span class="number">0</span>] * x[<span class="number">1</span>] <span class="keyword">for</span> x <span class="keyword">in</span> res]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join(res)</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/" target="_blank" rel="noopener">https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1209. Remove All Adjacent Duplicates in String II
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1047. Remove All Adjacent Duplicates In String</title>
    <link href="http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-1047-Remove-All-Adjacent-Duplicates-In-String/"/>
    <id>http://noahsnail.com/2022/10/08/2022-10-08-Leetcode-1047-Remove-All-Adjacent-Duplicates-In-String/</id>
    <published>2022-10-08T03:15:41.274Z</published>
    <updated>2022-10-08T06:45:56.506Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Remove_All_Adjacent_Duplicates_In_String.png" alt="Remove All Adjacent Duplicates In String"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，最先想到的方法，使用数据结构栈，可以解决这个问题，时间复杂度O(N)。字符每次入栈之前都与栈顶元素进行比较，如果相同，则栈顶元素出栈，继续下一个字符，不同则入栈。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeDuplicates</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> res <span class="keyword">and</span> ch == res[<span class="number">-1</span>]:</span><br><span class="line">                res.pop()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                res.append(ch)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join(res)</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/" target="_blank" rel="noopener">https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1047. Remove All Adjacent Duplicates In String
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1417. Reformat The String</title>
    <link href="http://noahsnail.com/2022/07/08/2022-07-08-Leetcode-1417-Reformat-The-String/"/>
    <id>http://noahsnail.com/2022/07/08/2022-07-08-Leetcode-1417-Reformat-The-String/</id>
    <published>2022-07-08T06:03:00.880Z</published>
    <updated>2022-07-11T01:23:58.664Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="noopener">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="noopener">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Reformat_The_String.png" alt="Reformat The String"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先分离数字和字母，如果二者数量差的绝对值大于<code>1</code>，则不可能形成字母数字字符串，否则，根据数量多少，按顺序依次连接字符数字数组即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reformat</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        letters = []</span><br><span class="line">        digits = []</span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> ch.isalpha():</span><br><span class="line">                letters.append(ch)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                digits.append(ch)</span><br><span class="line"></span><br><span class="line">        diff = len(letters) - len(digits)</span><br><span class="line">        <span class="keyword">if</span> abs(diff) &gt; <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">        <span class="keyword">elif</span> diff == <span class="number">0</span> <span class="keyword">or</span> diff == <span class="number">1</span>:</span><br><span class="line">            arr1 = letters</span><br><span class="line">            arr2 = digits</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            arr1 = digits</span><br><span class="line">            arr2 = letters</span><br><span class="line"></span><br><span class="line">        result = [<span class="number">0</span>] * len(s)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(arr1)):</span><br><span class="line">            result[i * <span class="number">2</span>] = arr1[i]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(arr2)):</span><br><span class="line">            result[i * <span class="number">2</span> + <span class="number">1</span>] = arr2[i]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join(result)</span><br></pre></td></tr></table></figure>
<p><strong>解析：</strong>Version 2，进一步优化。</p>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reformat</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        letters = <span class="number">0</span></span><br><span class="line">        digits = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> ch.isalpha():</span><br><span class="line">                letters += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                digits += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        diff = letters - digits</span><br><span class="line">        <span class="keyword">if</span> abs(diff) &gt; <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">        <span class="keyword">elif</span> diff == <span class="number">0</span> <span class="keyword">or</span> diff == <span class="number">1</span>:</span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">            j = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            i = <span class="number">1</span></span><br><span class="line">            j = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        result = [<span class="number">0</span>] * len(s)</span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> ch.isalpha():</span><br><span class="line">                result[i] = ch</span><br><span class="line">                i += <span class="number">2</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                result[j] = ch</span><br><span class="line">                j += <span class="number">2</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join(result)</span><br></pre></td></tr></table></figure>
<p><strong>解析：</strong>Version 2，使用双指针，分别从两端找起，如果碰到字母和数字不符合当前位置，则交换二者。</p>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reformat</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        letters = <span class="number">0</span></span><br><span class="line">        digits = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> ch.isalpha():</span><br><span class="line">                letters += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                digits += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        diff = letters - digits</span><br><span class="line">        <span class="keyword">if</span> abs(diff) &gt; <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">        <span class="keyword">elif</span> diff == <span class="number">0</span> <span class="keyword">or</span> diff == <span class="number">1</span>:</span><br><span class="line">            i = <span class="number">0</span></span><br><span class="line">            j = len(s) - <span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            i = <span class="number">1</span></span><br><span class="line">            j = len(s) - <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        result = list(s)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> i &lt; len(s) <span class="keyword">and</span> j &gt;=<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">while</span> i &lt; len(s) <span class="keyword">and</span> result[i].isalpha():</span><br><span class="line">                i += <span class="number">2</span></span><br><span class="line">            <span class="keyword">while</span> j &gt;=<span class="number">0</span> <span class="keyword">and</span> result[j].isdigit():</span><br><span class="line">                j -= <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> i &lt; len(s) <span class="keyword">and</span> j &gt;=<span class="number">0</span>:</span><br><span class="line">                result[i], result[j] = result[j], result[i]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join(result)</span><br></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/reformat-the-string/" target="_blank" rel="noopener">https://leetcode.com/problems/reformat-the-string/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1417. Reformat The String
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
