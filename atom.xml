<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SnailTyan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://noahsnail.com/"/>
  <updated>2021-08-09T00:46:38.829Z</updated>
  <id>http://noahsnail.com/</id>
  
  <author>
    <name>Tyan</name>
    <email>Tyan.Liu.Git@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Leetcode 934. Shortest Bridge</title>
    <link href="http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-934-Shortest-Bridge/"/>
    <id>http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-934-Shortest-Bridge/</id>
    <published>2021-08-06T09:36:31.410Z</published>
    <updated>2021-08-09T00:46:38.829Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Shortest_Bridge.png" alt="Shortest Bridge"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先找到矩阵中第一个<code>1</code>作为起点，然后使用广度优先搜索找到所有相邻的<code>1</code>，即第一个岛，并将所有岛的坐标及更改的<code>0</code>计数保存到队列中，初始计数为<code>0</code>，搜索第一个岛的同时，将各个点对应的值设为<code>2</code>，防止重复搜索。从第一个岛的所有点开始，重新使用广度优先搜索，如果搜索的点值为<code>0</code>，将值设为<code>2</code>，表示已经搜索过，同时将点的坐标及计数保存，计数要加<code>1</code>，如果搜索的点为<code>1</code>，说明找到了第二个岛，返回反转的<code>0</code>的计数。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shortestBridge</span><span class="params">(self, grid: List[List[int]])</span> -&gt; int:</span></div><div class="line">        n = len(grid)</div><div class="line">        queue = collections.deque()</div><div class="line">        queue2 = collections.deque()</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            flag = <span class="keyword">False</span></div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(n):</div><div class="line">                <span class="keyword">if</span> grid[i][j] == <span class="number">1</span>:</div><div class="line">                    grid[i][j] = <span class="number">2</span></div><div class="line">                    queue.append((i, j))</div><div class="line">                    flag = <span class="keyword">True</span></div><div class="line">                    <span class="keyword">break</span></div><div class="line">            <span class="keyword">if</span> flag:</div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">while</span> queue:</div><div class="line">            x, y = queue.popleft()</div><div class="line">            queue2.append((x, y, <span class="number">0</span>))</div><div class="line">            <span class="keyword">if</span> x &gt; <span class="number">0</span> <span class="keyword">and</span> grid[x<span class="number">-1</span>][y] == <span class="number">1</span>:</div><div class="line">                grid[x<span class="number">-1</span>][y] = <span class="number">2</span></div><div class="line">                queue.append((x<span class="number">-1</span>, y))</div><div class="line">            <span class="keyword">if</span> y &gt; <span class="number">0</span> <span class="keyword">and</span> grid[x][y<span class="number">-1</span>] == <span class="number">1</span>:</div><div class="line">                grid[x][y<span class="number">-1</span>] = <span class="number">2</span></div><div class="line">                queue.append((x, y<span class="number">-1</span>))</div><div class="line">            <span class="keyword">if</span> x &lt; n<span class="number">-1</span> <span class="keyword">and</span> grid[x+<span class="number">1</span>][y] == <span class="number">1</span>:</div><div class="line">                grid[x+<span class="number">1</span>][y] = <span class="number">2</span></div><div class="line">                queue.append((x+<span class="number">1</span>, y))</div><div class="line">            <span class="keyword">if</span> y &lt; n<span class="number">-1</span> <span class="keyword">and</span> grid[x][y+<span class="number">1</span>] == <span class="number">1</span>:</div><div class="line">                grid[x][y+<span class="number">1</span>] = <span class="number">2</span></div><div class="line">                queue.append((x, y+<span class="number">1</span>))</div><div class="line">        <span class="keyword">while</span> queue2:</div><div class="line">            x, y, count = queue2.popleft()</div><div class="line">            <span class="keyword">if</span> x &gt; <span class="number">0</span>:</div><div class="line">                <span class="keyword">if</span> grid[x<span class="number">-1</span>][y] == <span class="number">0</span>:</div><div class="line">                    grid[x<span class="number">-1</span>][y] = <span class="number">2</span></div><div class="line">                    queue2.append((x<span class="number">-1</span>, y, count + <span class="number">1</span>))</div><div class="line">                <span class="keyword">elif</span> grid[x<span class="number">-1</span>][y] == <span class="number">1</span>:</div><div class="line">                    <span class="keyword">return</span> count</div><div class="line">            <span class="keyword">if</span> y &gt; <span class="number">0</span>:</div><div class="line">                <span class="keyword">if</span> grid[x][y<span class="number">-1</span>] == <span class="number">0</span>:</div><div class="line">                    grid[x][y<span class="number">-1</span>] = <span class="number">2</span></div><div class="line">                    queue2.append((x, y<span class="number">-1</span>, count + <span class="number">1</span>))</div><div class="line">                <span class="keyword">elif</span> grid[x][y<span class="number">-1</span>] == <span class="number">1</span>:</div><div class="line">                    <span class="keyword">return</span> count</div><div class="line">            <span class="keyword">if</span> x &lt; n<span class="number">-1</span>:</div><div class="line">                <span class="keyword">if</span> grid[x+<span class="number">1</span>][y] == <span class="number">0</span>:</div><div class="line">                    grid[x+<span class="number">1</span>][y] = <span class="number">2</span></div><div class="line">                    queue2.append((x+<span class="number">1</span>, y, count + <span class="number">1</span>))</div><div class="line">                <span class="keyword">elif</span> grid[x+<span class="number">1</span>][y] == <span class="number">1</span>:</div><div class="line">                    <span class="keyword">return</span> count</div><div class="line">            <span class="keyword">if</span> y &lt; n<span class="number">-1</span>:</div><div class="line">                <span class="keyword">if</span> grid[x][y+<span class="number">1</span>] == <span class="number">0</span>:</div><div class="line">                    grid[x][y+<span class="number">1</span>] = <span class="number">2</span></div><div class="line">                    queue2.append((x, y+<span class="number">1</span>, count + <span class="number">1</span>))</div><div class="line">                <span class="keyword">elif</span> grid[x][y+<span class="number">1</span>] == <span class="number">1</span>:</div><div class="line">                    <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/shortest-bridge/" target="_blank" rel="external">https://leetcode.com/problems/shortest-bridge/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 934. Shortest Bridge
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 724. Find Pivot Index</title>
    <link href="http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-724-Find-Pivot-Index/"/>
    <id>http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-724-Find-Pivot-Index/</id>
    <published>2021-08-06T07:45:05.998Z</published>
    <updated>2021-08-06T07:48:51.748Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Find_Pivot_Index.png" alt="Find Pivot Index"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先将数组分为左右两边，左边为<code>0</code>，右边是数组总和，遍历数组，左边加上当前位置的前一个数，右边减去当前位置的数，如果左右相等，返回当前索引，这样优先找到的是满足条件的最左边的索引，最后没找到，返回<code>-1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pivotIndex</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        left = <span class="number">0</span></div><div class="line">        right = sum(nums)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</div><div class="line">            <span class="keyword">if</span> i &gt; <span class="number">0</span>:</div><div class="line">                left += nums[i<span class="number">-1</span>]</div><div class="line">            right -= nums[i]</div><div class="line">            <span class="keyword">if</span> left == right:</div><div class="line">                <span class="keyword">return</span> i</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-pivot-index/" target="_blank" rel="external">https://leetcode.com/problems/find-pivot-index/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 724. Find Pivot Index
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1590. Make Sum Divisible by P</title>
    <link href="http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-1590-Make-Sum-Divisible-by-P/"/>
    <id>http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-1590-Make-Sum-Divisible-by-P/</id>
    <published>2021-08-06T06:44:42.298Z</published>
    <updated>2021-08-06T07:00:48.770Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Make_Sum_Divisible_by_P.png" alt="Make Sum Divisible by P"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用前缀和来解决，先对整个数组求和，总和与<code>p</code>的余数设为<code>k</code>，如果<code>k==0</code>，则直接返回<code>0</code>即可。否则，将遍历数组，求前缀和，前缀和与<code>p</code>的余数设为<code>remainder</code>，题目需要移除的部分是两个前缀和相减后的部分，其与<code>p</code>的余数应为<code>k</code>，即<code>(remainder - temp) % p == k</code>，<code>temp</code>是需要寻找的余数，由于<code>remainder - temp</code>为负数时，公式变为<code>p + remainder - temp = k</code>，通过公式变换，可以得到<code>temp = p + remainder - k</code>，由于<code>remainder - temp</code>大于<code>0</code>时不需要加上<code>p</code>，因此公式变为<code>temp = (remainder + p - k) % p</code>。字典中保持的是余数及对应的位置索引，由于余数相同时索引位置更新，因此字典中保存的永远余数相同时是最大的位置索引，这样可以保证满足条件时要移除的元素数量最少。注意，假设第一个数的余数就等于<code>k</code>，此时数组中没有要寻找的余数<code>temp=0</code>的位置，因此<code>stat[0]=-1</code>，这样计算的长度才不会错。初始长度设为数组长度，如果没找到满足条件的子数组，则长度不更新，此时将长度设为<code>-1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minSubarray</span><span class="params">(self, nums: List[int], p: int)</span> -&gt; int:</span></div><div class="line">        k = sum(nums) % p</div><div class="line">        <span class="keyword">if</span> k == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span></div><div class="line">        total = <span class="number">0</span></div><div class="line">        stat = collections.defaultdict(int)</div><div class="line">        stat[<span class="number">0</span>] = <span class="number">-1</span></div><div class="line">        length = len(nums)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</div><div class="line">            total += nums[i]</div><div class="line">            remainder = total % p</div><div class="line">            temp = (remainder + p - k) % p</div><div class="line">            <span class="keyword">if</span> temp <span class="keyword">in</span> stat:</div><div class="line">                length = min(length, i - stat[temp])</div><div class="line">            stat[remainder] = i</div><div class="line">        <span class="keyword">if</span> length == len(nums):</div><div class="line">            length = <span class="number">-1</span></div><div class="line">        <span class="keyword">return</span> length</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/make-sum-divisible-by-p/" target="_blank" rel="external">https://leetcode.com/problems/make-sum-divisible-by-p/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1590. Make Sum Divisible by P
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 523. Continuous Subarray Sum</title>
    <link href="http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-523-Continuous-Subarray-Sum/"/>
    <id>http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-523-Continuous-Subarray-Sum/</id>
    <published>2021-08-06T06:20:08.241Z</published>
    <updated>2021-08-06T06:26:30.020Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Continuous_Subarray_Sum.png" alt="Continuous Subarray Sum"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用前缀和来解决，遍历数组，求前缀和，求前缀和与<code>k</code>的余数，余数在字典中存在时，则意味着当前前缀和减去之前的前缀和等于<code>k</code>的倍数，此时计算两个前缀和的长度差，如果大于等于<code>2</code>，则返回<code>True</code>，如果余数不存在，则将余数保存在字典中并记录其索引位置。由于余数相同时不会更新索引，因此，字典中前缀和余数相同时，保存的是最靠前的位置。注意，假设第一个数就等于<code>k</code>的倍数，此时数组中没有余数<code>0</code>的位置，因此<code>stat[0]=-1</code>，这样计算的长度才不会错。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSubarraySum</span><span class="params">(self, nums: List[int], k: int)</span> -&gt; bool:</span></div><div class="line">        n = len(nums)</div><div class="line">        total = <span class="number">0</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        stat[<span class="number">0</span>] = <span class="number">-1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            total += nums[i]</div><div class="line">            remainder = total % k</div><div class="line">            <span class="keyword">if</span> remainder <span class="keyword">in</span> stat:</div><div class="line">                length = i - stat[remainder]</div><div class="line">                <span class="keyword">if</span> length &gt; <span class="number">1</span>:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                stat[remainder] = i</div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/continuous-subarray-sum/" target="_blank" rel="external">https://leetcode.com/problems/continuous-subarray-sum/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 523. Continuous Subarray Sum
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 560. Subarray Sum Equals K</title>
    <link href="http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-560-Subarray-Sum-Equals-K/"/>
    <id>http://noahsnail.com/2021/08/06/2021-08-06-Leetcode-560-Subarray-Sum-Equals-K/</id>
    <published>2021-08-06T05:55:34.697Z</published>
    <updated>2021-08-06T07:43:58.222Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Subarray_Sum_Equals_K.png" alt="Subarray Sum Equals K"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用前缀和来解决，遍历数组，求前缀和，统计前缀和的次数并保存到字典中，当碰到差值在字典中存在时，则意味着当前数组减去之前的前缀和数组等于<code>k</code>，将次数加到<code>count</code>中，更新前缀和的次数。注意，假设第一个数就等于<code>k</code>，此时数组中没有差值<code>0</code>的次数，因此<code>stat[0]=1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subarraySum</span><span class="params">(self, nums: List[int], k: int)</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        total = <span class="number">0</span></div><div class="line">        count  = <span class="number">0</span></div><div class="line">        stat = collections.defaultdict(int)</div><div class="line">        stat[<span class="number">0</span>] = <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            total += nums[i]</div><div class="line">            count += stat[total - k]</div><div class="line">            stat[total] += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/subarray-sum-equals-k/" target="_blank" rel="external">https://leetcode.com/problems/subarray-sum-equals-k/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 560. Subarray Sum Equals K
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 974. Subarray Sums Divisible by K</title>
    <link href="http://noahsnail.com/2021/08/05/2021-08-05-Leetcode-974-Subarray-Sums-Divisible-by-K/"/>
    <id>http://noahsnail.com/2021/08/05/2021-08-05-Leetcode-974-Subarray-Sums-Divisible-by-K/</id>
    <published>2021-08-05T09:09:29.319Z</published>
    <updated>2021-08-06T05:59:03.128Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Subarray_Sums_Divisible_by_K.png" alt="Subarray Sums Divisible by K"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用前缀和来解决，遍历数组，求前缀和，然后求余数，统计余数次数并保存到字典中，当碰到余数相同时，则意味着当前数组减去之前的前缀和数组可以被<code>k</code>整除，将次数加到<code>count</code>中，更新余数次数。注意，假设第一个数就可以整除<code>k</code>，此时数组中没有余数<code>0</code>的次数，因此<code>stat[0]=1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subarraysDivByK</span><span class="params">(self, nums: List[int], k: int)</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        count = <span class="number">0</span></div><div class="line">        stat = collections.defaultdict(int)</div><div class="line">        stat[<span class="number">0</span>] = <span class="number">1</span></div><div class="line">        total = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            total += nums[i]</div><div class="line">            remainder = total % k</div><div class="line">            count += stat[remainder]</div><div class="line">            stat[remainder] += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/subarray-sums-divisible-by-k/" target="_blank" rel="external">https://leetcode.com/problems/subarray-sums-divisible-by-k/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 974. Subarray Sums Divisible by K
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers</title>
    <link href="http://noahsnail.com/2021/08/05/2021-08-05-Leetcode-1577-Number-of-Ways-Where-Square-of-Number-Is-Equal-to-Product-of-Two-Numbers/"/>
    <id>http://noahsnail.com/2021/08/05/2021-08-05-Leetcode-1577-Number-of-Ways-Where-Square-of-Number-Is-Equal-to-Product-of-Two-Numbers/</id>
    <published>2021-08-05T07:12:08.134Z</published>
    <updated>2021-08-05T08:05:25.212Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Number_of_Ways_Where_Square_of_Number_Is_Equal_to_Product_of_Two_Numbers.png" alt="Maximum Number of Coins You Can Get"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong> Version 1，分别计算两个数组的平方和以及所有组合乘积并统计对应值的个数，遍历每个数组平方和的个数，找到另一个数组对应的积的个数，二者相乘，加到三元组总个数中。Version 2进行进一步优化。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numTriplets</span><span class="params">(self, nums1: List[int], nums2: List[int])</span> -&gt; int:</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        square1 = collections.defaultdict(int)</div><div class="line">        square2 = collections.defaultdict(int)</div><div class="line">        product1 = collections.defaultdict(int)</div><div class="line">        product2 = collections.defaultdict(int)</div><div class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums1:</div><div class="line">            temp = x ** <span class="number">2</span></div><div class="line">            square1[temp] = square1[temp] + <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums2:</div><div class="line">            temp = x ** <span class="number">2</span></div><div class="line">            square2[temp] = square2[temp] + <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums1)):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, len(nums1)):</div><div class="line">                temp = nums1[i] * nums1[j]</div><div class="line">                product1[temp] = product1[temp] + <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums2)):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, len(nums2)):</div><div class="line">                temp = nums2[i] * nums2[j]</div><div class="line">                product2[temp] = product2[temp] + <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> square1.items():</div><div class="line">            count += v * product2[k]</div><div class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> square2.items():</div><div class="line">            count += v * product1[k]</div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numTriplets</span><span class="params">(self, nums1: List[int], nums2: List[int])</span> -&gt; int:</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        product1 = collections.defaultdict(int)</div><div class="line">        product2 = collections.defaultdict(int)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums1)):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, len(nums1)):</div><div class="line">                temp = nums1[i] * nums1[j]</div><div class="line">                product1[temp] = product1[temp] + <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums2)):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, len(nums2)):</div><div class="line">                temp = nums2[i] * nums2[j]</div><div class="line">                product2[temp] = product2[temp] + <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums1:</div><div class="line">            temp = x ** <span class="number">2</span></div><div class="line">            count += product2[temp]</div><div class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums2:</div><div class="line">            temp = x ** <span class="number">2</span></div><div class="line">            square2[temp] = square2[temp] + <span class="number">1</span></div><div class="line">            count += product1[temp]</div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers/" target="_blank" rel="external">https://leetcode.com/problems/number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1577. Number of Ways Where Square of Number Is Equal to Product of Two Numbers
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1561. Maximum Number of Coins You Can Get</title>
    <link href="http://noahsnail.com/2021/08/05/2021-08-05-Leetcode-1561-Maximum-Number-of-Coins-You-Can-Get/"/>
    <id>http://noahsnail.com/2021/08/05/2021-08-05-Leetcode-1561-Maximum-Number-of-Coins-You-Can-Get/</id>
    <published>2021-08-05T06:38:40.545Z</published>
    <updated>2021-08-05T06:58:17.983Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Maximum_Number_of_Coins_You_Can_Get.png" alt="Maximum Number of Coins You Can Get"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong> Version 1，先对数组排序，然后使用贪心算法，每次选两个最大的，选一个最小的，这样保证可以拿到第二大的，同时将最小值从候选数据中剔除。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxCoins</span><span class="params">(self, piles: List[int])</span> -&gt; int:</span></div><div class="line">        piles.sort()</div><div class="line">        maximum = <span class="number">0</span></div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = len(piles) <span class="number">-1</span></div><div class="line">        <span class="keyword">while</span> i &lt; j:</div><div class="line">            maximum += piles[j<span class="number">-1</span>]</div><div class="line">            i += <span class="number">1</span></div><div class="line">            j -= <span class="number">2</span></div><div class="line">        <span class="keyword">return</span> maximum</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/maximum-number-of-coins-you-can-get/" target="_blank" rel="external">https://leetcode.com/problems/maximum-number-of-coins-you-can-get/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1561. Maximum Number of Coins You Can Get
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 927. Three Equal Parts</title>
    <link href="http://noahsnail.com/2021/08/05/2021-08-05-Leetcode-927-Three-Equal-Parts/"/>
    <id>http://noahsnail.com/2021/08/05/2021-08-05-Leetcode-927-Three-Equal-Parts/</id>
    <published>2021-08-05T05:54:49.883Z</published>
    <updated>2021-08-06T07:02:26.080Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Three_Equal_Parts.png" alt="Three Equal Parts"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，由于数组分为三部分，因此各部分中<code>1</code>的个数相等是三部分相等的前提条件之一，因此先计算数组的总和，如果和为<code>0</code>，则<code>i,j</code>的位置是满足二者关系的任意位置，因此直接返回最简单的<code>[0,2]</code>即可，如果总和除<code>3</code>的余数不为<code>0</code>，则一定构不成三部分相等，直接返回<code>[-1,-1]</code>，否则，则根据三部分<code>1</code>的个数将数组先分为三部分，由于三部分第一个<code>1</code>之前的<code>0</code>都无效，因此，将<code>i,j,k</code>三部分分别定位到第一个<code>1</code>的位置，由于最后一部分最后一个<code>1</code>之后的<code>0</code>是有效位，因此遍历区间为第三部分的第一个<code>1</code>到最后一位，第一部分及第二部分的对应位置上的数字应该都与第三部分对应位置的数字相等，如果不相等，则不能分隔数组，最后根据对应的位置关系，返回<code>[i-1,j]</code>即可。Version 2直接通过<code>index</code>方法来获取三部分的第一个<code>1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">threeEqualParts</span><span class="params">(self, arr: List[int])</span> -&gt; List[int]:</span></div><div class="line">        total = sum(arr)</div><div class="line">        <span class="keyword">if</span> total == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> [<span class="number">0</span>, <span class="number">2</span>]</div><div class="line">        <span class="keyword">if</span> total % <span class="number">3</span> != <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> [<span class="number">-1</span>, <span class="number">-1</span>]</div><div class="line">        n = total // <span class="number">3</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> range(len(arr)):</div><div class="line">            <span class="keyword">if</span> arr[index] == <span class="number">1</span>:</div><div class="line">                count += <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> count == <span class="number">1</span>:</div><div class="line">                    i = index</div><div class="line">                <span class="keyword">elif</span> count == n + <span class="number">1</span>:</div><div class="line">                    j = index</div><div class="line">                <span class="keyword">elif</span> count == <span class="number">2</span> * n + <span class="number">1</span>:</div><div class="line">                    k = index</div><div class="line"></div><div class="line">        <span class="keyword">while</span> k &lt; len(arr):</div><div class="line">            <span class="keyword">if</span> arr[i] == arr[j] <span class="keyword">and</span> arr[j] == arr[k]:</div><div class="line">                i += <span class="number">1</span></div><div class="line">                j += <span class="number">1</span></div><div class="line">                k += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">return</span> [<span class="number">-1</span>, <span class="number">-1</span>]</div><div class="line">        <span class="keyword">return</span> [i<span class="number">-1</span>, j]</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/three-equal-parts/" target="_blank" rel="external">https://leetcode.com/problems/three-equal-parts/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 927. Three Equal Parts
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 953. Verifying an Alien Dictionary</title>
    <link href="http://noahsnail.com/2021/08/05/2021-08-05-Leetcode-953-Verifying-an-Alien-Dictionary/"/>
    <id>http://noahsnail.com/2021/08/05/2021-08-05-Leetcode-953-Verifying-an-Alien-Dictionary/</id>
    <published>2021-08-05T03:15:28.899Z</published>
    <updated>2021-08-06T07:17:55.382Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Verifying_an_Alien_Dictionary.png" alt="Verifying an Alien Dictionary"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，构造顺序字典，通过索引的大小来判断顺序，每个单词都跟后一个单词逐字母比较，如果字母不同，且字母顺序满足条件，直接进行下一轮比较，如果顺序不对，直接返回<code>False</code>，如果字母都相等，但当前单词长度更大，也直接返回<code>False</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isAlienSorted</span><span class="params">(self, words: List[str], order: str)</span> -&gt; bool:</span></div><div class="line">        dictionary = &#123;k: v <span class="keyword">for</span> v, k <span class="keyword">in</span> enumerate(order)&#125;</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(words) - <span class="number">1</span>):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(words[i])):</div><div class="line">                <span class="keyword">if</span> j == len(words[i+<span class="number">1</span>]):</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">                <span class="keyword">elif</span> dictionary[words[i][j]] &lt; dictionary[words[i+<span class="number">1</span>][j]]:</div><div class="line">                    <span class="keyword">break</span></div><div class="line">                <span class="keyword">elif</span> dictionary[words[i][j]] &gt; dictionary[words[i+<span class="number">1</span>][j]]:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/verifying-an-alien-dictionary/" target="_blank" rel="external">https://leetcode.com/problems/verifying-an-alien-dictionary/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 953. Verifying an Alien Dictionary
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1018. Binary Prefix Divisible By 5</title>
    <link href="http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-1018-Binary-Prefix-Divisible-By-5/"/>
    <id>http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-1018-Binary-Prefix-Divisible-By-5/</id>
    <published>2021-08-04T09:55:27.440Z</published>
    <updated>2021-08-05T03:14:54.715Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Binary_Prefix_Divisible_By_5.png" alt="Binary Prefix Divisible By 5"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，每次数组索引向右移动，相当于当前数字左移一位，因此当前数值应在上一数值的基础上乘以<code>2</code>，加上当前位。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prefixesDivBy5</span><span class="params">(self, nums: List[int])</span> -&gt; List[bool]:</span></div><div class="line">        n = len(nums)</div><div class="line">        pre = <span class="number">0</span></div><div class="line">        result = [<span class="number">0</span>] * n</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            current = pre * <span class="number">2</span> + nums[i]</div><div class="line">            <span class="comment">#current = (pre &lt;&lt; 1) + nums[i]</span></div><div class="line">            result.append(current % <span class="number">5</span> == <span class="number">0</span>)</div><div class="line">            pre = current</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/binary-prefix-divisible-by-5/" target="_blank" rel="external">https://leetcode.com/problems/binary-prefix-divisible-by-5/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1018. Binary Prefix Divisible By 5
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 985. Sum of Even Numbers After Queries</title>
    <link href="http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-985-Sum-of-Even-Numbers-After-Queries/"/>
    <id>http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-985-Sum-of-Even-Numbers-After-Queries/</id>
    <published>2021-08-04T08:19:03.331Z</published>
    <updated>2021-08-04T09:09:59.485Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Sum_of_Even_Numbers_After_Queries.png" alt="Sum of Even Numbers After Queries"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先对数组所有偶数求和，然后遍历查询，根据对应位置数字的奇偶性以及所加数字的奇偶性，来进行总和的加减操作并保存，最后需要更新对应位置的数值。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sumEvenAfterQueries</span><span class="params">(self, nums: List[int], queries: List[List[int]])</span> -&gt; List[int]:</span></div><div class="line">        total = <span class="number">0</span></div><div class="line">        result = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</div><div class="line">            <span class="keyword">if</span> nums[i] % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">                total += nums[i]</div><div class="line">        <span class="keyword">for</span> val, index <span class="keyword">in</span> queries:</div><div class="line">            <span class="keyword">if</span> nums[index] % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">                <span class="keyword">if</span> val % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">                    total += val</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    total -= nums[index]</div><div class="line">            <span class="keyword">elif</span> val % <span class="number">2</span> == <span class="number">1</span>:</div><div class="line">                    total += nums[index] + val</div><div class="line">            result.append(total)</div><div class="line">            nums[index] = nums[index] + val</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/sum-of-even-numbers-after-queries/" target="_blank" rel="external">https://leetcode.com/problems/sum-of-even-numbers-after-queries/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 985. Sum of Even Numbers After Queries
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1785. Minimum Elements to Add to Form a Given Sum</title>
    <link href="http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-1785-Minimum-Elements-to-Add-to-Form-a-Given-Sum/"/>
    <id>http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-1785-Minimum-Elements-to-Add-to-Form-a-Given-Sum/</id>
    <published>2021-08-04T07:18:04.712Z</published>
    <updated>2021-08-04T07:24:58.864Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Minimum_Elements_to_Add_to_Form_a_Given_Sum.png" alt="Minimum Elements to Add to Form a Given Sum"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，根据题意，需要先数组求和，然后再求跟目标的差值，为了添加最少数量的数字，因此每次都应添加极限数值，题目变成了算除法并对余数取整。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minElements</span><span class="params">(self, nums: List[int], limit: int, goal: int)</span> -&gt; int:</span></div><div class="line">        total = sum(nums)</div><div class="line">        diff = goal - total</div><div class="line">        count = ceil(abs(diff) / limit)</div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-elements-to-add-to-form-a-given-sum/" target="_blank" rel="external">https://leetcode.com/problems/minimum-elements-to-add-to-form-a-given-sum/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1785. Minimum Elements to Add to Form a Given Sum
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 506. Relative Ranks</title>
    <link href="http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-506-Relative-Ranks/"/>
    <id>http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-506-Relative-Ranks/</id>
    <published>2021-08-04T06:40:28.698Z</published>
    <updated>2021-08-04T07:02:31.748Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Relative_Ranks.png" alt="Relative Ranks"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，由于元素唯一，因此先对数组排序，然后构造有序数组与名次对应的字典，然后遍历数组得到对应的名词。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findRelativeRanks</span><span class="params">(self, score: List[int])</span> -&gt; List[str]:</span></div><div class="line">        n = len(score)</div><div class="line">        ranks = [<span class="string">"Gold Medal"</span>, <span class="string">"Silver Medal"</span>, <span class="string">"Bronze Medal"</span>]</div><div class="line">        ranks += [str(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>, n+<span class="number">1</span>)]</div><div class="line">        mapping = dict(zip(sorted(score, reverse=<span class="keyword">True</span>), ranks))</div><div class="line">        result = [mapping[score[i]] <span class="keyword">for</span> i <span class="keyword">in</span> range(n)]</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/relative-ranks/" target="_blank" rel="external">https://leetcode.com/problems/relative-ranks/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 506. Relative Ranks
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 809. Expressive Words</title>
    <link href="http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-809-Expressive-Words/"/>
    <id>http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-809-Expressive-Words/</id>
    <published>2021-08-04T05:17:30.471Z</published>
    <updated>2021-08-04T05:38:53.778Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Expressive_Words.png" alt="Expressive Words"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，依次按顺序统计<code>s</code>与各个单词的字母个数，如果相同顺序（连续相等字母算顺序中的一位）的字母不相等，则不符合条件，如果<code>s</code>的字母个数小于<code>3</code>且<code>s</code>与单词的字母个数不等，不符合条件，如果<code>s</code>的字母个数大于等于<code>3</code>且小于单词的字母个数，不符合条件，执行到某个字符串结束，如果没都达到最后，则不符合条件，否则满足条件。Version 2只统计<code>s</code>一次，然后再比对。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">expressiveWords</span><span class="params">(self, s: str, words: List[str])</span> -&gt; int:</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        n = len(s)</div><div class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</div><div class="line">            <span class="keyword">if</span> self.check(word, s):</div><div class="line">                count += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self, word, s)</span>:</span></div><div class="line">        n = len(s)</div><div class="line">        m = len(word)</div><div class="line">        <span class="keyword">if</span> m &gt; n:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> i &lt; n <span class="keyword">and</span> j &lt; m:</div><div class="line">            <span class="keyword">if</span> s[i] != word[j]:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            t1 = <span class="number">1</span></div><div class="line">            t2 = <span class="number">1</span></div><div class="line">            <span class="keyword">while</span> i &lt; n - <span class="number">1</span> <span class="keyword">and</span> s[i] == s[i+<span class="number">1</span>]:</div><div class="line">                t1 += <span class="number">1</span></div><div class="line">                i += <span class="number">1</span></div><div class="line">            <span class="keyword">while</span> j &lt; m - <span class="number">1</span> <span class="keyword">and</span> word[j] == word[j+<span class="number">1</span>]:</div><div class="line">                t2 += <span class="number">1</span></div><div class="line">                j += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> (t1 &lt; <span class="number">3</span> <span class="keyword">and</span> t1 != t2) <span class="keyword">or</span> t1 &lt; t2:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            i += <span class="number">1</span></div><div class="line">            j += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> i == n <span class="keyword">and</span> j == m</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">expressiveWords</span><span class="params">(self, s: str, words: List[str])</span> -&gt; int:</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        n = len(s)</div><div class="line">        stat = []</div><div class="line">        i = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> i &lt; n:</div><div class="line">            temp = <span class="number">1</span></div><div class="line">            <span class="keyword">while</span> i &lt; n - <span class="number">1</span> <span class="keyword">and</span> s[i] == s[i+<span class="number">1</span>]:</div><div class="line">                temp += <span class="number">1</span></div><div class="line">                i += <span class="number">1</span></div><div class="line">            stat.append((s[i], temp))</div><div class="line">            i += <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</div><div class="line">            m = len(word)</div><div class="line">            <span class="keyword">if</span> m &gt; n:</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            <span class="keyword">if</span> self.check(word, stat):</div><div class="line">                count += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self, word, stat)</span>:</span></div><div class="line">        m = len(word)</div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> j &lt; m <span class="keyword">and</span> i &lt; len(stat):</div><div class="line">            <span class="keyword">if</span> stat[i][<span class="number">0</span>] != word[j]:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            temp = <span class="number">1</span></div><div class="line">            <span class="keyword">while</span> j &lt; m - <span class="number">1</span> <span class="keyword">and</span> word[j] == word[j+<span class="number">1</span>]:</div><div class="line">                temp += <span class="number">1</span></div><div class="line">                j += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> (stat[i][<span class="number">1</span>] &lt; <span class="number">3</span> <span class="keyword">and</span> stat[i][<span class="number">1</span>] != temp) <span class="keyword">or</span> stat[i][<span class="number">1</span>] &lt; temp:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            i += <span class="number">1</span></div><div class="line">            j += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> i == len(stat)</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/expressive-words/" target="_blank" rel="external">https://leetcode.com/problems/expressive-words/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 809. Expressive Words
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 491. Increasing Subsequences</title>
    <link href="http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-491-Increasing-Subsequences/"/>
    <id>http://noahsnail.com/2021/08/04/2021-08-04-Leetcode-491-Increasing-Subsequences/</id>
    <published>2021-08-04T02:18:30.152Z</published>
    <updated>2021-08-04T02:29:05.039Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Increasing_Subsequences.png" alt="Increasing Subsequences"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，采用广度优先搜索，以列表中的每个元素为起点，寻找其后大于等于当前元素的数值，添加到当前列表中，并将当前列表添加到结果中，以当前列表以及下一个元素为起点，进行下一次广度优先搜索。最后，由于存在重复元素，因此需要对嵌套列表进行去重。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findSubsequences</span><span class="params">(self, nums: List[int])</span> -&gt; List[List[int]]:</span></div><div class="line">        result = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nums)):</div><div class="line">            self.bfs(nums, i+<span class="number">1</span>, [nums[i]], result)</div><div class="line">        <span class="keyword">return</span> [list(t) <span class="keyword">for</span> t <span class="keyword">in</span> set(tuple(_) <span class="keyword">for</span> _ <span class="keyword">in</span> result)]</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bfs</span><span class="params">(self, nums, start, pre, result)</span>:</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(start, len(nums)):</div><div class="line">            <span class="keyword">if</span> nums[i] &gt;= pre[<span class="number">-1</span>]:</div><div class="line">                temp = pre + [nums[i]]</div><div class="line">                result.append(temp)</div><div class="line">                self.bfs(nums, i+<span class="number">1</span>, temp, result)</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/increasing-subsequences/" target="_blank" rel="external">https://leetcode.com/problems/increasing-subsequences/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 491. Increasing Subsequences
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 646. Maximum Length of Pair Chain</title>
    <link href="http://noahsnail.com/2021/08/03/2021-08-03-Leetcode-646-Maximum-Length-of-Pair-Chain/"/>
    <id>http://noahsnail.com/2021/08/03/2021-08-03-Leetcode-646-Maximum-Length-of-Pair-Chain/</id>
    <published>2021-08-03T07:38:57.658Z</published>
    <updated>2021-08-03T07:50:46.361Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Maximum_Length_of_Pair_Chain.png" alt="Maximum Length of Pair Chain"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，采用贪心算法，即每次都添加符合条件的、右端值最小的数值对，首先对数值对按右端值进行排序，然后将右端值最小的数值对添加到数组中，然后寻找下一个满足左端值大于数组中最后一个右端值的数值对，最后数组的长度即为最长的数值对链。每次添加右端值最小的数值对，保证了可以拼接尽可能多的数值对，Version 2只统计数值对链的个数。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findLongestChain</span><span class="params">(self, pairs: List[List[int]])</span> -&gt; int:</span></div><div class="line">        pairs.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</div><div class="line">        result = []</div><div class="line">        n = len(pairs)</div><div class="line">        result.append(pairs[<span class="number">0</span>])</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</div><div class="line">            <span class="keyword">if</span> pairs[i][<span class="number">0</span>] &gt; result[<span class="number">-1</span>][<span class="number">1</span>]:</div><div class="line">                result.append(pairs[i])</div><div class="line">        <span class="keyword">return</span> len(result)</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findLongestChain</span><span class="params">(self, pairs: List[List[int]])</span> -&gt; int:</span></div><div class="line">        pairs.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</div><div class="line">        n = len(pairs)</div><div class="line">        pre = pairs[<span class="number">0</span>]</div><div class="line">        count = <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</div><div class="line">            <span class="keyword">if</span> pairs[i][<span class="number">0</span>] &gt; pre[<span class="number">1</span>]:</div><div class="line">                pre = pairs[i]</div><div class="line">                count += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/shortest-path-in-binary-matrix/" target="_blank" rel="external">https://leetcode.com/problems/shortest-path-in-binary-matrix/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 646. Maximum Length of Pair Chain
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1091. Shortest Path in Binary Matrix</title>
    <link href="http://noahsnail.com/2021/08/03/2021-08-03-Leetcode-1091-Shortest-Path-in-Binary-Matrix/"/>
    <id>http://noahsnail.com/2021/08/03/2021-08-03-Leetcode-1091-Shortest-Path-in-Binary-Matrix/</id>
    <published>2021-08-03T05:52:27.501Z</published>
    <updated>2021-08-03T06:02:02.154Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Shortest_Path_in_Binary_Matrix.png" alt="Shortest Path in Binary Matrix"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，如果起始点为<code>1</code>，直接返回<code>-1</code>，否则，使用广度优先搜索，使用<code>grid[i][j]=1</code>来表示访问过的点，从左上角开始，遍历满足条件的<code>8</code>个方向上的点，并将其坐标以及当前的长度保存到队列中，并将其值置为<code>1</code>，即已经访问过该点。第一次访问到右下角点时即为最短距离。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shortestPathBinaryMatrix</span><span class="params">(self, grid: List[List[int]])</span> -&gt; int:</span></div><div class="line">        <span class="keyword">if</span> grid[<span class="number">0</span>][<span class="number">0</span>] == <span class="number">1</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">-1</span></div><div class="line">        n = len(grid)</div><div class="line">        queue = collections.deque()</div><div class="line">        queue.append((<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>))</div><div class="line">        <span class="keyword">while</span> queue:</div><div class="line">            i, j, count = queue.popleft()</div><div class="line">            <span class="keyword">if</span> i == n - <span class="number">1</span> <span class="keyword">and</span> j == n - <span class="number">1</span>:</div><div class="line">                <span class="keyword">return</span> count</div><div class="line">            count += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> j &gt; <span class="number">0</span> <span class="keyword">and</span> grid[i<span class="number">-1</span>][j<span class="number">-1</span>] == <span class="number">0</span>:</div><div class="line">                grid[i<span class="number">-1</span>][j<span class="number">-1</span>] = <span class="number">1</span></div><div class="line">                queue.append((i<span class="number">-1</span>, j<span class="number">-1</span>, count))</div><div class="line"></div><div class="line">            <span class="keyword">if</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> grid[i<span class="number">-1</span>][j] == <span class="number">0</span>:</div><div class="line">                grid[i<span class="number">-1</span>][j] = <span class="number">1</span></div><div class="line">                queue.append((i<span class="number">-1</span>, j, count))</div><div class="line"></div><div class="line">            <span class="keyword">if</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> j &lt; n<span class="number">-1</span> <span class="keyword">and</span> grid[i<span class="number">-1</span>][j+<span class="number">1</span>] == <span class="number">0</span>:</div><div class="line">                grid[i<span class="number">-1</span>][j+<span class="number">1</span>] = <span class="number">1</span></div><div class="line">                queue.append((i<span class="number">-1</span>, j+<span class="number">1</span>, count))</div><div class="line"></div><div class="line">            <span class="keyword">if</span> j &gt; <span class="number">0</span> <span class="keyword">and</span> grid[i][j<span class="number">-1</span>] == <span class="number">0</span>:</div><div class="line">                grid[i][j<span class="number">-1</span>] = <span class="number">1</span></div><div class="line">                queue.append((i, j<span class="number">-1</span>, count))</div><div class="line"></div><div class="line">            <span class="keyword">if</span> j &lt; n<span class="number">-1</span> <span class="keyword">and</span> grid[i][j+<span class="number">1</span>] == <span class="number">0</span>:</div><div class="line">                grid[i][j+<span class="number">1</span>] = <span class="number">1</span></div><div class="line">                queue.append((i, j+<span class="number">1</span>, count))</div><div class="line"></div><div class="line">            <span class="keyword">if</span> i &lt; n<span class="number">-1</span> <span class="keyword">and</span> j &gt; <span class="number">0</span> <span class="keyword">and</span> grid[i+<span class="number">1</span>][j<span class="number">-1</span>] == <span class="number">0</span>:</div><div class="line">                grid[i+<span class="number">1</span>][j<span class="number">-1</span>] = <span class="number">1</span></div><div class="line">                queue.append((i+<span class="number">1</span>, j<span class="number">-1</span>, count))</div><div class="line"></div><div class="line">            <span class="keyword">if</span> i &lt; n<span class="number">-1</span> <span class="keyword">and</span> grid[i+<span class="number">1</span>][j] == <span class="number">0</span>:</div><div class="line">                grid[i+<span class="number">1</span>][j] = <span class="number">1</span></div><div class="line">                queue.append((i+<span class="number">1</span>, j, count))</div><div class="line"></div><div class="line">            <span class="keyword">if</span> i &lt; n<span class="number">-1</span> <span class="keyword">and</span> j &lt; n<span class="number">-1</span> <span class="keyword">and</span> grid[i+<span class="number">1</span>][j+<span class="number">1</span>] == <span class="number">0</span>:</div><div class="line">                grid[i+<span class="number">1</span>][j+<span class="number">1</span>] = <span class="number">1</span></div><div class="line">                queue.append((i+<span class="number">1</span>, j+<span class="number">1</span>, count))</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/shortest-path-in-binary-matrix/" target="_blank" rel="external">https://leetcode.com/problems/shortest-path-in-binary-matrix/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1091. Shortest Path in Binary Matrix
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1509. Minimum Difference Between Largest and Smallest Value in Three Moves</title>
    <link href="http://noahsnail.com/2021/08/02/2021-08-02-Leetcode-1509-Minimum-Difference-Between-Largest-and-Smallest-Value-in-Three-Moves/"/>
    <id>http://noahsnail.com/2021/08/02/2021-08-02-Leetcode-1509-Minimum-Difference-Between-Largest-and-Smallest-Value-in-Three-Moves/</id>
    <published>2021-08-02T09:25:11.267Z</published>
    <updated>2021-08-03T01:33:42.048Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Minimum_Difference_Between_Largest_and_Smallest_Value_in_Three_Moves.png" alt="Minimum Difference Between Largest and Smallest Value in Three Moves"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先对数组进行排序，如果数字个数小于5个，则最小差一定为0，否则，由于至多修改三个数字，因此最小值的情况为修改前三个数字、修改后三个数字、前面修改一个后面修改两个、前面修改两个后面修改一个，枚举四种情况的值取最小即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minDifference</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        <span class="keyword">if</span> len(nums) &lt; <span class="number">5</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span></div><div class="line">        nums.sort()</div><div class="line">        <span class="keyword">return</span> min(nums[<span class="number">-1</span>] - nums[<span class="number">3</span>], nums[<span class="number">-4</span>] - nums[<span class="number">0</span>], nums[<span class="number">-2</span>] - nums[<span class="number">2</span>], nums[<span class="number">-3</span>] - nums[<span class="number">1</span>])</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/" target="_blank" rel="external">https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1509. Minimum Difference Between Largest and Smallest Value in Three Moves
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1262. Greatest Sum Divisible by Three</title>
    <link href="http://noahsnail.com/2021/07/29/2021-07-29-Leetcode-1262-Greatest-Sum-Divisible-by-Three/"/>
    <id>http://noahsnail.com/2021/07/29/2021-07-29-Leetcode-1262-Greatest-Sum-Divisible-by-Three/</id>
    <published>2021-07-29T02:07:15.121Z</published>
    <updated>2021-08-04T09:14:06.062Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Greatest_Sum_Divisible_by_Three.png" alt="Greatest Sum Divisible by Three"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，是对Version 3的简化，具体参考Version 3。Version 2，先对数组求总和，然后根据每个数除<code>3</code>的余数进行有序分组，当总和除<code>3</code>余<code>1</code>时，此时总和应该减去最小的余数为<code>1</code>的数，或者减去最小的两个余数为<code>2</code>的数，如果二者同时有，则取二者的最小值，余数为<code>2</code>时同理。Version 3，<code>dp</code>用来维护最大和除<code>3</code>余数分别为<code>0,1,2</code>的状态，初始时，当余数为<code>0</code>时，不影响<code>dp[0]</code>的值，不需要更新<code>dp[1],dp[2]</code>，当余数为<code>1,2</code>时，此时才需要开始更新<code>dp[1],dp[2]</code>，然后根据余数的值不同，对各状态进行更新，<code>pre</code>用来保存上一轮结束时的状态。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxSumDivThree</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        stat = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> stat[:]:</div><div class="line">                remainder = (x + nums[i]) % <span class="number">3</span></div><div class="line">                stat[remainder] = max(stat[remainder], x + nums[i])</div><div class="line">        <span class="keyword">return</span> stat[<span class="number">0</span>]</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxSumDivThree</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        total = sum(nums)</div><div class="line">        n = len(nums)</div><div class="line">        one = []</div><div class="line">        two = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            <span class="keyword">if</span> nums[i] % <span class="number">3</span> == <span class="number">1</span>:</div><div class="line">                bisect.insort(one, nums[i])</div><div class="line">            <span class="keyword">elif</span> nums[i] % <span class="number">3</span> == <span class="number">2</span>:</div><div class="line">                bisect.insort(two, nums[i])</div><div class="line">        <span class="keyword">if</span> total % <span class="number">3</span> == <span class="number">1</span>:</div><div class="line">            <span class="keyword">if</span> len(one) == <span class="number">0</span>:</div><div class="line">                total -= (two[<span class="number">0</span>] + two[<span class="number">1</span>])</div><div class="line">            <span class="keyword">elif</span> len(two) &lt; <span class="number">2</span>:</div><div class="line">                total -= one[<span class="number">0</span>]</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                total -= min(one[<span class="number">0</span>], two[<span class="number">0</span>] + two[<span class="number">1</span>])</div><div class="line">        <span class="keyword">elif</span> total % <span class="number">3</span> == <span class="number">2</span>:</div><div class="line">            <span class="keyword">if</span> len(two) == <span class="number">0</span>:</div><div class="line">                total -= (one[<span class="number">0</span>] + one[<span class="number">1</span>])</div><div class="line">            <span class="keyword">elif</span> len(one) &lt; <span class="number">2</span>:</div><div class="line">                total -= two[<span class="number">0</span>]</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                total -= min(one[<span class="number">0</span>] + one[<span class="number">1</span>], two[<span class="number">0</span>])</div><div class="line">        <span class="keyword">return</span> total</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxSumDivThree</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        dp = [<span class="number">0</span>, -float(<span class="string">'inf'</span>), -float(<span class="string">'inf'</span>)]</div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</div><div class="line">            pre = dp[:]</div><div class="line">            <span class="keyword">if</span> num % <span class="number">3</span> == <span class="number">0</span>:</div><div class="line">                dp[<span class="number">0</span>] = max(pre[<span class="number">0</span>] + num, pre[<span class="number">0</span>])</div><div class="line">                dp[<span class="number">1</span>] = max(pre[<span class="number">1</span>] + num, pre[<span class="number">1</span>])</div><div class="line">                dp[<span class="number">2</span>] = max(pre[<span class="number">2</span>] + num, pre[<span class="number">2</span>])</div><div class="line">            <span class="keyword">elif</span> num % <span class="number">3</span> == <span class="number">1</span>:</div><div class="line">                dp[<span class="number">0</span>] = max(pre[<span class="number">2</span>] + num, pre[<span class="number">0</span>])</div><div class="line">                dp[<span class="number">1</span>] = max(pre[<span class="number">0</span>] + num, pre[<span class="number">1</span>])</div><div class="line">                dp[<span class="number">2</span>] = max(pre[<span class="number">1</span>] + num, pre[<span class="number">2</span>])</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                dp[<span class="number">0</span>] = max(pre[<span class="number">1</span>] + num, pre[<span class="number">0</span>])</div><div class="line">                dp[<span class="number">1</span>] = max(pre[<span class="number">2</span>] + num, pre[<span class="number">1</span>])</div><div class="line">                dp[<span class="number">2</span>] = max(pre[<span class="number">0</span>] + num, pre[<span class="number">2</span>])</div><div class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>]</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/greatest-sum-divisible-by-three/" target="_blank" rel="external">https://leetcode.com/problems/greatest-sum-divisible-by-three/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1262. Greatest Sum Divisible by Three
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
