<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SnailTyan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://noahsnail.com/"/>
  <updated>2021-08-27T06:44:24.962Z</updated>
  <id>http://noahsnail.com/</id>
  
  <author>
    <name>Tyan</name>
    <email>Tyan.Liu.Git@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Leetcode 438. Find All Anagrams in a String</title>
    <link href="http://noahsnail.com/2021/08/27/2021-08-27-Leetcode-438-Find-All-Anagrams-in-a-String/"/>
    <id>http://noahsnail.com/2021/08/27/2021-08-27-Leetcode-438-Find-All-Anagrams-in-a-String/</id>
    <published>2021-08-27T06:37:22.477Z</published>
    <updated>2021-08-27T06:44:24.962Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Find_All_Anagrams_in_a_String.png" alt="Find All Anagrams in a String"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，判断两个字符串是否是Anagrams，可以采用字典的方法，即每个字母的个数及类型相等。先统计字符串<code>p</code>的字母个数并记录其长度在<code>stat</code>中，遍历字符串<code>s</code>，如果字母在<code>stat</code>中，则将其记录到字典<code>subs</code>中，否则重置<code>subs</code>，当<code>subs[&#39;length&#39;] = stat[&#39;length&#39;]</code>时，比较二者是否相等，如果相等，则记录索引<code>index - n + 1</code>到结果列表中，此时字符串继续遍历，为保证<code>subs</code>长度与<code>stat</code>长度一致，此时，<code>subs</code>中移除<code>s[index - n + 1]</code>字符，同时长度减<code>1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findAnagrams</span><span class="params">(self, s: str, p: str)</span> -&gt; List[int]:</span></div><div class="line">        stat = collections.Counter(p)</div><div class="line">        n = len(p)</div><div class="line">        stat[<span class="string">'length'</span>] = n</div><div class="line">        result = []</div><div class="line">        subs = collections.defaultdict(int)</div><div class="line">        <span class="keyword">for</span> index, ch <span class="keyword">in</span> enumerate(s):</div><div class="line">            <span class="keyword">if</span> ch <span class="keyword">in</span> stat:</div><div class="line">                subs[ch] += <span class="number">1</span></div><div class="line">                subs[<span class="string">'length'</span>] += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                subs = collections.defaultdict(int)</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            <span class="keyword">if</span> subs[<span class="string">'length'</span>] == stat[<span class="string">'length'</span>]:</div><div class="line">                <span class="keyword">if</span> stat == subs:</div><div class="line">                    result.append(index - n + <span class="number">1</span>)</div><div class="line">                subs[s[index - n + <span class="number">1</span>]] -= <span class="number">1</span></div><div class="line">                subs[<span class="string">'length'</span>] -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-all-anagrams-in-a-string/" target="_blank" rel="external">https://leetcode.com/problems/find-all-anagrams-in-a-string/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 438. Find All Anagrams in a String
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 540. Single Element in a Sorted Array</title>
    <link href="http://noahsnail.com/2021/08/25/2021-08-25-Leetcode-540-Single-Element-in-a-Sorted-Array/"/>
    <id>http://noahsnail.com/2021/08/25/2021-08-25-Leetcode-540-Single-Element-in-a-Sorted-Array/</id>
    <published>2021-08-25T01:39:31.234Z</published>
    <updated>2021-08-25T01:58:18.339Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Single_Element_in_a_Sorted_Array.png" alt="Single Element in a Sorted Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用类似于二分查找的方式寻找单个元素，首先计算中间位置的索引<code>mid</code>，如果<code>mid</code>为奇数，说明数组左半部分有偶数个元素(索引从<code>0</code>开始)，比较<code>nums[mid]</code>与其左边的元素<code>nums[mid-1]</code>，如果二者相等，则表明左半部分一定不存在单个元素，因此<code>left=mid+1</code>，如果二者不相等，则其一定等于右边的元素，此时<code>right=mid-1</code>；如果<code>mid</code>为偶数，明数组左半部分有寄数个元素，比较<code>nums[mid]</code>与其左边的元素<code>nums[mid-1]</code>，如果二者相等，则表明左半部分一定存在单个元素，此时<code>right=mid-2</code>，即移除两个相等元素，如果不相等，则比较<code>nums[mid]</code>与右边的元素nums[mid+1]，如果二者相等，则表明右半部分一定存在单个元素，此时<code>left = mid + 2</code>，如果两者都不满足，说明<code>nums[mid]</code>就是要找的单个元素。注意<code>left &lt; right</code>的边界条件，这样不会出现数组越界的情况，要充分利用索引的奇偶性以及数组存在单个元素时的奇偶性，始终保持下一部分要查找的子数组含有奇数个元素。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">singleNonDuplicate</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        left = <span class="number">0</span></div><div class="line">        right = n - <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> left &lt; right:</div><div class="line">            mid = (left + right) // <span class="number">2</span></div><div class="line">            <span class="keyword">if</span> mid % <span class="number">2</span> == <span class="number">1</span>:</div><div class="line">                <span class="keyword">if</span> nums[mid] == nums[mid - <span class="number">1</span>]:</div><div class="line">                    left = mid + <span class="number">1</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    right = mid - <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">if</span> nums[mid] == nums[mid - <span class="number">1</span>]:</div><div class="line">                    right = mid - <span class="number">2</span></div><div class="line">                <span class="keyword">elif</span> nums[mid] == nums[mid + <span class="number">1</span>]:</div><div class="line">                    left = mid + <span class="number">2</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    <span class="keyword">return</span> nums[mid]</div><div class="line">        <span class="keyword">return</span> nums[left]</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/single-element-in-a-sorted-array/" target="_blank" rel="external">https://leetcode.com/problems/single-element-in-a-sorted-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 540. Single Element in a Sorted Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 941. Valid Mountain Array</title>
    <link href="http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-941-Valid-Mountain-Array/"/>
    <id>http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-941-Valid-Mountain-Array/</id>
    <published>2021-08-24T09:10:17.549Z</published>
    <updated>2021-08-24T09:33:23.434Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Valid_Mountain_Array.png" alt="Valid Mountain Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，通过<code>up</code>和<code>down</code>分别表示山脉的上下过程，比较数组前后两个数，如果相等，直接返回<code>False</code>，如果前者大于后者，没出现过下山<code>down=False</code>，则将上山设为<code>up=True</code>，如果前者小于后者，出现了上山<code>up=False</code>，则将下山设为<code>down=True</code>，不符合上述条件的都直接返回<code>False</code>，最后如果上山下山都出现了，则返回<code>True</code>，否则返回<code>False</code>。Version 2使用双指针分别从左右两侧移动，最后判断两个指针是否满足山脉条件，不满足返回<code>False</code>，满足返回<code>True</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validMountainArray</span><span class="params">(self, arr: List[int])</span> -&gt; bool:</span></div><div class="line">        n = len(arr)</div><div class="line">        up = <span class="keyword">False</span></div><div class="line">        down = <span class="keyword">False</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n - <span class="number">1</span>):</div><div class="line">            <span class="keyword">if</span> arr[i+<span class="number">1</span>] == arr[i]:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            <span class="keyword">elif</span> arr[i+<span class="number">1</span>] &gt; arr[i]:</div><div class="line">                up = <span class="keyword">True</span></div><div class="line">                <span class="keyword">if</span> down:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> up:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">                down = <span class="keyword">True</span></div><div class="line">        <span class="keyword">if</span> up <span class="keyword">and</span> down:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">validMountainArray</span><span class="params">(self, arr: List[int])</span> -&gt; bool:</span></div><div class="line">        n = len(arr)</div><div class="line">        <span class="keyword">if</span> n &lt; <span class="number">3</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        i = <span class="number">1</span></div><div class="line">        j = n - <span class="number">2</span></div><div class="line">        <span class="keyword">while</span> i &lt; n <span class="keyword">and</span> arr[i] &gt; arr[i<span class="number">-1</span>]:</div><div class="line">            i += <span class="number">1</span></div><div class="line">        i -= <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> j &gt; <span class="number">-1</span> <span class="keyword">and</span> arr[j] &gt; arr[j+<span class="number">1</span>]:</div><div class="line">            j -= <span class="number">1</span></div><div class="line">        j += <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> i == <span class="number">0</span> <span class="keyword">or</span> j == n - <span class="number">1</span> <span class="keyword">or</span> i != j:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/valid-mountain-array/" target="_blank" rel="external">https://leetcode.com/problems/valid-mountain-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 941. Valid Mountain Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1671. Minimum Number of Removals to Make Mountain Array</title>
    <link href="http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-1671-Minimum-Number-of-Removals-to-Make-Mountain-Array/"/>
    <id>http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-1671-Minimum-Number-of-Removals-to-Make-Mountain-Array/</id>
    <published>2021-08-24T08:35:29.313Z</published>
    <updated>2021-08-24T09:09:05.943Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Minimum_Number_of_Removals_to_Make_Mountain_Array.png" alt="Minimum Number of Removals to Make Mountain Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，分别以数组中的元素作为中心点，在左右两侧分别求最长递增子序列，根据左右两侧的最长递增子序列的长度求出山脉的长度，则要删除的元素个数为数组长度减去最长的山脉长度，速度太慢。Version 2在Version 1的基础上进行了优化，分别求出数组正序和逆序各个位置的最长递增子序列，然后跟Version 1类似，累加左右对应位置的最长递增子序列的长度，即为山脉的长度，则要删除的元素个数为数组长度减去最长的山脉长度，速度明显有了大幅提升。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minimumMountainRemovals</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        maximum = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">1</span>, n - <span class="number">1</span>):</div><div class="line">            left = [nums[index]]</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(index - <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</div><div class="line">                <span class="keyword">if</span> nums[i] &gt;= nums[index] <span class="keyword">or</span> nums[i] == left[<span class="number">0</span>]:</div><div class="line">                    <span class="keyword">continue</span></div><div class="line">                <span class="keyword">elif</span> nums[i] &lt; left[<span class="number">0</span>]:</div><div class="line">                    bisect.insort(left, nums[i])</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    pos = bisect.bisect(left, nums[i])</div><div class="line">                    left[pos<span class="number">-1</span>] = nums[i]</div><div class="line">            <span class="keyword">if</span> len(left) &lt; <span class="number">2</span>:</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            right = [nums[index]]</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(index+<span class="number">1</span>, n):</div><div class="line">                <span class="keyword">if</span> nums[i] &gt;= nums[index] <span class="keyword">or</span> nums[i] == right[<span class="number">0</span>]:</div><div class="line">                    <span class="keyword">continue</span></div><div class="line">                <span class="keyword">if</span> nums[i] &lt; right[<span class="number">0</span>]:</div><div class="line">                    bisect.insort(right, nums[i])</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    pos = bisect.bisect(right, nums[i])</div><div class="line">                    right[pos<span class="number">-1</span>] = nums[i]</div><div class="line">            <span class="keyword">if</span> len(right) &gt; <span class="number">1</span>:</div><div class="line">                maximum = max(maximum, len(left) + len(right) - <span class="number">1</span>)</div><div class="line">        <span class="keyword">return</span> n - maximum</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minimumMountainRemovals</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        maximum = <span class="number">0</span></div><div class="line">        left = self.LIS(nums)</div><div class="line">        right = self.LIS(nums[::<span class="number">-1</span>])</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            <span class="keyword">if</span> left[i] &gt; <span class="number">1</span> <span class="keyword">and</span> right[n-i<span class="number">-1</span>] &gt; <span class="number">1</span>:</div><div class="line">                maximum = max(maximum, left[i] + right[n-i<span class="number">-1</span>] - <span class="number">1</span>)</div><div class="line">        <span class="keyword">return</span> n - maximum</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">LIS</span><span class="params">(self, nums)</span>:</span></div><div class="line">        n = len(nums)</div><div class="line">        dp = [<span class="number">1</span>] * n</div><div class="line">        arr = [nums[<span class="number">0</span>]]</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</div><div class="line">            <span class="keyword">if</span> nums[i] &gt; arr[<span class="number">-1</span>]:</div><div class="line">                arr.append(nums[i])</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                pos = bisect.bisect_left(arr, nums[i])</div><div class="line">                arr[pos] = nums[i]</div><div class="line">            dp[i] = len(arr)</div><div class="line">        <span class="keyword">return</span> dp</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array/" target="_blank" rel="external">https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1671. Minimum Number of Removals to Make Mountain Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 845. Longest Mountain in Array</title>
    <link href="http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-845-Longest-Mountain-in-Array/"/>
    <id>http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-845-Longest-Mountain-in-Array/</id>
    <published>2021-08-24T06:31:31.813Z</published>
    <updated>2021-08-24T09:21:23.306Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Longest_Mountain_in_Array.png" alt="Longest Mountain in Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，统计山脉元素个数，首先山脉是先上后下，<code>up</code>和<code>down</code>的状态分别表示山脉的上下状态，初始状态都为<code>False</code>，只有<code>down=True</code>时，才记录山脉的最大长度，即最大子数组的长度，当后一个元素大于前一元素时，如果<code>up=True</code>，说明已经记录了上坡长度，此时判断下坡是否也记录了，如果<code>down=True</code>，则说明此次上坡是下一山脉的开始，则<code>down=False, count=2</code>，如果<code>down=False</code>，说明还处于当前山脉的上坡阶段，此时<code>count+=1</code>，如果<code>up=False</code>，则说明是山脉的刚开始，此时<code>up=True, count=2</code>；当后一个元素小于前一元素时，如果<code>up=True</code>，说明此时是当前山脉的下坡阶段，<code>count+=1, down=True</code>；如果<code>up=False</code>，说明此时不处于任何山脉的记录阶段，如果两个元素相等，重置<code>up=False, down=False</code>，时间复杂度<code>O(n)</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestMountain</span><span class="params">(self, arr: List[int])</span> -&gt; int:</span></div><div class="line">        n = len(arr)</div><div class="line">        maximum = <span class="number">0</span></div><div class="line">        up = <span class="keyword">False</span></div><div class="line">        down = <span class="keyword">False</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n - <span class="number">1</span>):</div><div class="line">            <span class="keyword">if</span> arr[i+<span class="number">1</span>] &gt; arr[i]:</div><div class="line">                <span class="keyword">if</span> up:</div><div class="line">                    <span class="keyword">if</span> down:</div><div class="line">                        down = <span class="keyword">False</span></div><div class="line">                        count = <span class="number">2</span></div><div class="line">                    <span class="keyword">else</span>:</div><div class="line">                        count += <span class="number">1</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    up = <span class="keyword">True</span></div><div class="line">                    count = <span class="number">2</span></div><div class="line">            <span class="keyword">elif</span> arr[i+<span class="number">1</span>] &lt; arr[i]:</div><div class="line">                <span class="keyword">if</span> up:</div><div class="line">                    count += <span class="number">1</span></div><div class="line">                    down = <span class="keyword">True</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                up = <span class="keyword">False</span></div><div class="line">                down = <span class="keyword">False</span></div><div class="line">            <span class="keyword">if</span> down:</div><div class="line">                maximum = max(maximum, count)</div><div class="line">        <span class="keyword">if</span> maximum &lt; <span class="number">3</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span></div><div class="line">        <span class="keyword">return</span> maximum</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/longest-mountain-in-array/" target="_blank" rel="external">https://leetcode.com/problems/longest-mountain-in-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 845. Longest Mountain in Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 914. X of a Kind in a Deck of Cards</title>
    <link href="http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-914-X-of-a-Kind-in-a-Deck-of-Cards/"/>
    <id>http://noahsnail.com/2021/08/24/2021-08-24-Leetcode-914-X-of-a-Kind-in-a-Deck-of-Cards/</id>
    <published>2021-08-24T05:40:42.135Z</published>
    <updated>2021-08-24T05:43:49.327Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/X_of_a_Kind_in_a_Deck_of_Cards.png" alt="X of a Kind in a Deck of Cards"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，统计元素个数，遍历所有可能的分割数量，下限为<code>2</code>，上限为最少的元素个数，如果满足条件，返回<code>True</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hasGroupsSizeX</span><span class="params">(self, deck: List[int])</span> -&gt; bool:</span></div><div class="line">        stat = collections.Counter(deck)</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">2</span>, min(stat.values()) + <span class="number">1</span>):</div><div class="line">            flag = <span class="keyword">True</span></div><div class="line">            <span class="keyword">for</span> val <span class="keyword">in</span> stat.values():</div><div class="line">                <span class="keyword">if</span> val % j != <span class="number">0</span>:</div><div class="line">                    flag = <span class="keyword">False</span></div><div class="line">                    <span class="keyword">break</span></div><div class="line">            <span class="keyword">if</span> flag:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/" target="_blank" rel="external">https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 914. X of a Kind in a Deck of Cards
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 957. Prison Cells After N Days</title>
    <link href="http://noahsnail.com/2021/08/23/2021-08-23-Leetcode-957-Prison-Cells-After-N-Days/"/>
    <id>http://noahsnail.com/2021/08/23/2021-08-23-Leetcode-957-Prison-Cells-After-N-Days/</id>
    <published>2021-08-23T09:43:11.242Z</published>
    <updated>2021-08-23T09:53:37.698Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Prison_Cells_After_N_Days.png" alt="Prison Cells After N Days"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，根据变换规则可知，第一位和最后一位总是<code>0</code>，因此只有中间<code>6</code>位数在变，最大可能的变换周期为<code>2^6</code>。因此只要记录变换周期，因此周期中的所有状态就可得出变换结果，使用字典<code>stat</code>来判断每次变换是否与之前的重复，列表<code>state</code>记录状态变化，当出现重复状态时，计算变换的周期<code>peroid</code>，以及一个周期的状态变化，如果没出现周期，则直接返回变换后的结果，如果出现了，则返回计算后的状态。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prisonAfterNDays</span><span class="params">(self, cells: List[int], n: int)</span> -&gt; List[int]:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        state = []</div><div class="line">        temp = <span class="string">''</span>.join(list(map(str, cells)))</div><div class="line">        stat[temp] = <span class="number">0</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        pre = cells[:]</div><div class="line">        state.append(pre)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            count += <span class="number">1</span></div><div class="line">            cells[<span class="number">0</span>] = <span class="number">0</span></div><div class="line">            cells[<span class="number">7</span>] = <span class="number">0</span></div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">7</span>):</div><div class="line">                <span class="keyword">if</span> (pre[j<span class="number">-1</span>] == <span class="number">1</span> <span class="keyword">and</span> pre[j+<span class="number">1</span>] == <span class="number">1</span>) <span class="keyword">or</span> (pre[j<span class="number">-1</span>] == <span class="number">0</span> <span class="keyword">and</span> pre[j+<span class="number">1</span>] == <span class="number">0</span>):</div><div class="line">                    cells[j] = <span class="number">1</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    cells[j] = <span class="number">0</span></div><div class="line">            temp = <span class="string">''</span>.join(list(map(str, cells)))</div><div class="line">            <span class="keyword">if</span> temp <span class="keyword">not</span> <span class="keyword">in</span> stat:</div><div class="line">                stat[temp] = count</div><div class="line">                pre = cells[:]</div><div class="line">                state.append(pre)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                peroid = count - stat[temp]</div><div class="line">                state = state[stat[temp]:]</div><div class="line">                <span class="keyword">break</span></div><div class="line">        <span class="keyword">if</span> count == n:</div><div class="line">            <span class="keyword">return</span> cells</div><div class="line">        <span class="keyword">return</span> state[(n - count) % peroid]</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/prison-cells-after-n-days/" target="_blank" rel="external">https://leetcode.com/problems/prison-cells-after-n-days/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 957. Prison Cells After N Days
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1030. Matrix Cells in Distance Order</title>
    <link href="http://noahsnail.com/2021/08/23/2021-08-23-Leetcode-1030-Matrix-Cells-in-Distance-Order/"/>
    <id>http://noahsnail.com/2021/08/23/2021-08-23-Leetcode-1030-Matrix-Cells-in-Distance-Order/</id>
    <published>2021-08-23T08:14:49.653Z</published>
    <updated>2021-08-23T08:29:31.133Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Matrix_Cells_in_Distance_Order.png" alt="Matrix Cells in Distance Order"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，直接根据距离进行排序。Version 使用广度优先搜索。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">allCellsDistOrder</span><span class="params">(self, rows: int, cols: int, rCenter: int, cCenter: int)</span> -&gt; List[List[int]]:</span></div><div class="line">        coordinates = [[i, j] <span class="keyword">for</span> i <span class="keyword">in</span> range(rows) <span class="keyword">for</span> j <span class="keyword">in</span> range(cols)]</div><div class="line">        coordinates.sort(key=<span class="keyword">lambda</span> x: abs(x[<span class="number">0</span>] - rCenter) + abs(x[<span class="number">1</span>] - cCenter))</div><div class="line">        <span class="keyword">return</span> coordinates</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">allCellsDistOrder</span><span class="params">(self, rows: int, cols: int, rCenter: int, cCenter: int)</span> -&gt; List[List[int]]:</span></div><div class="line">        matrix = [[<span class="number">0</span>] * cols <span class="keyword">for</span> i <span class="keyword">in</span> range(rows)]</div><div class="line">        queue = collections.deque()</div><div class="line">        queue.append((rCenter, cCenter))</div><div class="line">        matrix[rCenter][cCenter] = <span class="number">1</span></div><div class="line">        coordinates = []</div><div class="line">        <span class="keyword">while</span> queue:</div><div class="line">            x, y = queue.popleft()</div><div class="line">            coordinates.append([x, y])</div><div class="line">            matrix[x][y] = <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> x &gt; <span class="number">0</span> <span class="keyword">and</span> matrix[x<span class="number">-1</span>][y] == <span class="number">0</span>:</div><div class="line">                matrix[x<span class="number">-1</span>][y] = <span class="number">1</span></div><div class="line">                queue.append((x<span class="number">-1</span>, y))             </div><div class="line">            <span class="keyword">if</span> x &lt; rows - <span class="number">1</span> <span class="keyword">and</span> matrix[x+<span class="number">1</span>][y] == <span class="number">0</span>:</div><div class="line">                matrix[x+<span class="number">1</span>][y] = <span class="number">1</span></div><div class="line">                queue.append((x+<span class="number">1</span>, y))   </div><div class="line">            <span class="keyword">if</span> y &gt; <span class="number">0</span> <span class="keyword">and</span> matrix[x][y<span class="number">-1</span>] == <span class="number">0</span>:</div><div class="line">                matrix[x][y<span class="number">-1</span>] = <span class="number">1</span></div><div class="line">                queue.append((x, y<span class="number">-1</span>))             </div><div class="line">            <span class="keyword">if</span> y &lt; cols - <span class="number">1</span> <span class="keyword">and</span> matrix[x][y+<span class="number">1</span>] == <span class="number">0</span>:</div><div class="line">                matrix[x][y+<span class="number">1</span>] = <span class="number">1</span></div><div class="line">                queue.append((x, y+<span class="number">1</span>))   </div><div class="line">        <span class="keyword">return</span> coordinates</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/matrix-cells-in-distance-order/" target="_blank" rel="external">https://leetcode.com/problems/matrix-cells-in-distance-order/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1030. Matrix Cells in Distance Order
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1304. Find N Unique Integers Sum up to Zero</title>
    <link href="http://noahsnail.com/2021/08/20/2021-08-20-Leetcode-1304-Find-N-Unique-Integers-Sum-up-to-Zero/"/>
    <id>http://noahsnail.com/2021/08/20/2021-08-20-Leetcode-1304-Find-N-Unique-Integers-Sum-up-to-Zero/</id>
    <published>2021-08-20T09:45:34.190Z</published>
    <updated>2021-08-20T09:46:11.956Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Find_N_Unique_Integers_Sum_up_to_Zero.png" alt="Find N Unique Integers Sum up to Zero"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，为了实现和为<code>0</code>，因此添加元素时成对添加<code>+i, -i</code>，如果<code>n</code>为奇数，再加上<code>0</code>即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sumZero</span><span class="params">(self, n: int)</span> -&gt; List[int]:</span></div><div class="line">        result = []</div><div class="line">        <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">1</span>:</div><div class="line">            result.append(<span class="number">0</span>)</div><div class="line">        x = n // <span class="number">2</span> + <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, x):</div><div class="line">            result.append(i)</div><div class="line">            result.append(-i)</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero/" target="_blank" rel="external">https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1304. Find N Unique Integers Sum up to Zero
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1567. Maximum Length of Subarray With Positive Product</title>
    <link href="http://noahsnail.com/2021/08/20/2021-08-20-Leetcode-1567-Maximum-Length-of-Subarray-With-Positive-Product/"/>
    <id>http://noahsnail.com/2021/08/20/2021-08-20-Leetcode-1567-Maximum-Length-of-Subarray-With-Positive-Product/</id>
    <published>2021-08-20T08:52:11.465Z</published>
    <updated>2021-08-23T07:46:29.992Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Maximum_Length_of_Subarray_With_Positive_Product.png" alt="Maximum Length of Subarray With Positive Product"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，首先要将数组从所有零处断开，这样可以保证乘积一定不为<code>0</code>，采用<code>pre</code>来表示前一个<code>0</code>所在的位置，初始状态为<code>-1</code>，当碰到一个<code>0</code>时，计算不包括<code>0</code>在内的子数组长度<code>m</code>，如果<code>m &gt; 0</code>，说明子数组不为空。要计算子数组的乘积为正数的最长长度，需要统计数组中负数的个数<code>neg</code>，如果为偶数，则最长长度为子数组长度，如果为奇数，则长度应为子数组长度减去包含第一个负数在内的前一部分长度或者是从子数组开始到最后一个负数之前的长度中较大的一个。分别用<code>start</code>，<code>end</code>来表示第一个负数和最后一个负数的位置。遍历数组后，如果最后一个数不为0，要计算最后一个子数组。Version 2为了保证计算最后一个子数组，在<code>nums</code>数组后加了一个<code>0</code>。Version 3使用动态规划解决，<code>pos[i]和neg[i]</code>分别表示以<code>i</code>为结尾的乘积为正数的最长子数组长度和表示乘积为负数的最长子数组长度，碰到<code>0</code>时重新统计。根据<code>nums[i]</code>的值可以分为三种情况，<code>nums[i] = 0</code>，此时<code>pos[i]和neg[i]</code>都为<code>0</code>；<code>nums[i] &gt; 0</code>时，<code>pos[i] = pos[i-1] + 1</code>，如果<code>neg[i-1]</code>为<code>0</code>，则不更新<code>neg[i]</code>，否则，<code>neg[i] = neg[i-1] + 1</code>；<code>nums[i] &lt; 0</code>时，<code>neg[i] = pos[i-1] + 1</code>，如果<code>neg[i-1]</code>为<code>0</code>，则不更新<code>pos[i]</code>，否则，<code>pos[i] = neg[i-1] + 1</code>，每次更新两个数组之后，要更新最大长度<code>maximum = max(maximum, pos[i])</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getMaxLen</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        maximum = <span class="number">0</span></div><div class="line">        pre = <span class="number">-1</span></div><div class="line">        neg = <span class="number">0</span></div><div class="line">        start = <span class="number">-1</span></div><div class="line">        end = <span class="number">-1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            <span class="keyword">if</span> nums[i] == <span class="number">0</span>:</div><div class="line">                m = i - pre - <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> m &gt; <span class="number">0</span>:</div><div class="line">                    <span class="keyword">if</span> neg % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">                        maximum = max(maximum, m)</div><div class="line">                    <span class="keyword">else</span>:</div><div class="line">                        maximum = max(maximum, i - start - <span class="number">1</span>, end - pre - <span class="number">1</span>)</div><div class="line">                pre = i</div><div class="line">                start = <span class="number">-1</span></div><div class="line">                end = <span class="number">-1</span></div><div class="line">                neg = <span class="number">0</span></div><div class="line">            <span class="keyword">elif</span> nums[i] &lt; <span class="number">0</span>:</div><div class="line">                neg += <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> start == <span class="number">-1</span>:</div><div class="line">                    start = i</div><div class="line">                end = i</div><div class="line">        <span class="keyword">if</span> pre != n - <span class="number">1</span>:</div><div class="line">            m = n - pre - <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> m &gt; <span class="number">0</span>:</div><div class="line">                <span class="keyword">if</span> neg % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">                    maximum = max(maximum, m)</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    maximum = max(maximum, n - start - <span class="number">1</span>, end - pre <span class="number">-1</span>)</div><div class="line">        <span class="keyword">return</span> maximum</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getMaxLen</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        nums.append(<span class="number">0</span>)</div><div class="line">        n = len(nums)</div><div class="line">        maximum = <span class="number">0</span></div><div class="line">        pre = <span class="number">-1</span></div><div class="line">        neg = <span class="number">0</span></div><div class="line">        start = <span class="number">-1</span></div><div class="line">        end = <span class="number">-1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            <span class="keyword">if</span> nums[i] == <span class="number">0</span>:</div><div class="line">                m = i - pre - <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> m &gt; <span class="number">0</span>:</div><div class="line">                    <span class="keyword">if</span> neg % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">                        maximum = max(maximum, m)</div><div class="line">                    <span class="keyword">else</span>:</div><div class="line">                        maximum = max(maximum, i - start - <span class="number">1</span>, end - pre - <span class="number">1</span>)</div><div class="line">                pre = i</div><div class="line">                start = <span class="number">-1</span></div><div class="line">                end = <span class="number">-1</span></div><div class="line">                neg = <span class="number">0</span></div><div class="line">            <span class="keyword">elif</span> nums[i] &lt; <span class="number">0</span>:</div><div class="line">                neg += <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> start == <span class="number">-1</span>:</div><div class="line">                    start = i</div><div class="line">                end = i</div><div class="line">        <span class="keyword">return</span> maximum</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getMaxLen</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        pos = [<span class="number">0</span>] * n</div><div class="line">        neg = [<span class="number">0</span>] * n</div><div class="line">        <span class="keyword">if</span> nums[<span class="number">0</span>] &gt; <span class="number">0</span>:</div><div class="line">            pos[<span class="number">0</span>] = <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> nums[<span class="number">0</span>] &lt; <span class="number">0</span>:</div><div class="line">            neg[<span class="number">0</span>] = <span class="number">1</span></div><div class="line">        maximum = pos[<span class="number">0</span>]</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</div><div class="line">            <span class="keyword">if</span> nums[i] &gt; <span class="number">0</span>:</div><div class="line">                pos[i] = pos[i<span class="number">-1</span>] + <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> neg[i<span class="number">-1</span>] != <span class="number">0</span>:</div><div class="line">                    neg[i] = neg[i<span class="number">-1</span>] + <span class="number">1</span></div><div class="line">            <span class="keyword">elif</span> nums[i] &lt; <span class="number">0</span>:</div><div class="line">                <span class="keyword">if</span> neg[i<span class="number">-1</span>] != <span class="number">0</span>:</div><div class="line">                    pos[i] = neg[i<span class="number">-1</span>] + <span class="number">1</span></div><div class="line">                neg[i] = pos[i<span class="number">-1</span>] + <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                pos[i] = <span class="number">0</span></div><div class="line">                neg[i] = <span class="number">0</span></div><div class="line">            maximum = max(maximum, pos[i])</div><div class="line">        <span class="keyword">return</span> maximum</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product/" target="_blank" rel="external">https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1567. Maximum Length of Subarray With Positive Product
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1658. Minimum Operations to Reduce X to Zero</title>
    <link href="http://noahsnail.com/2021/08/19/2021-08-19-Leetcode-1658-Minimum-Operations-to-Reduce-X-to-Zero/"/>
    <id>http://noahsnail.com/2021/08/19/2021-08-19-Leetcode-1658-Minimum-Operations-to-Reduce-X-to-Zero/</id>
    <published>2021-08-19T09:08:07.831Z</published>
    <updated>2021-08-19T09:32:12.775Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Minimum_Operations_to_Reduce_X_to_Zero.png" alt="Minimum Operations to Reduce X to Zero"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，这道题跟Leetcode 560的解法很像，首先计算数组的总和<code>total</code>，如果<code>total &lt; x</code>，则无论如何也不会将<code>x</code>减到<code>0</code>，如果<code>total = x</code>，则需要移除所有元素才能将<code>x</code>变为<code>0</code>，由于<code>x</code>一直是从最左或最右移除，因此问题可以变为：找到一个最大连续子数组，使得其和为<code>total - x</code>，这样可以保证剩下的元素之和等于<code>x</code>，个数最少，剩下元素位于左右子数组的左右两侧。使用前缀和方法，依次求数组的前缀和，并将前缀和以及当前索引位置记录到字典<code>stat</code>中，要寻找的连续子数组和为<code>target</code>，如果当前前缀和减去<code>target</code>位于字典中，则计算子数组的长度并更新最大子数组长度<code>maximum</code>，注意如果当前前缀和刚好等于<code>target</code>，此时寻找的差为<code>0</code>，为了保证正确的子数组长度，<code>stat[0] = -1</code>，最后，如果<code>maximum</code>的值一直没更新，则说明没找满足条件的子数组，此时应返回<code>-1</code>，否则，返回<code>n - maximum</code>。Version 2移除了数组和与<code>x</code>的比较，效率要差一些。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minOperations</span><span class="params">(self, nums: List[int], x: int)</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        total = sum(nums)</div><div class="line">        <span class="keyword">if</span> total &lt; x:</div><div class="line">            <span class="keyword">return</span> <span class="number">-1</span></div><div class="line">        <span class="keyword">if</span> total == x:</div><div class="line">            <span class="keyword">return</span> n</div><div class="line">        target = total - x</div><div class="line">        prefix = <span class="number">0</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        stat[<span class="number">0</span>] = <span class="number">-1</span></div><div class="line">        maximum = <span class="number">-1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            prefix += nums[i]</div><div class="line">            stat[prefix] = i</div><div class="line">            <span class="keyword">if</span> prefix - target <span class="keyword">in</span> stat:</div><div class="line">                maximum = max(maximum, i - stat[prefix - target])</div><div class="line">        <span class="keyword">if</span> maximum == <span class="number">-1</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">-1</span></div><div class="line">        <span class="keyword">return</span> n - maximum</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minOperations</span><span class="params">(self, nums: List[int], x: int)</span> -&gt; int:</span></div><div class="line">        n = len(nums)</div><div class="line">        target = sum(nums) - x</div><div class="line">        prefix = <span class="number">0</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        stat[<span class="number">0</span>] = <span class="number">-1</span></div><div class="line">        maximum = <span class="number">-1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            prefix += nums[i]</div><div class="line">            stat[prefix] = i</div><div class="line">            <span class="keyword">if</span> prefix - target <span class="keyword">in</span> stat:</div><div class="line">                maximum = max(maximum, i - stat[prefix - target])</div><div class="line">        <span class="keyword">if</span> maximum == <span class="number">-1</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">-1</span></div><div class="line">        <span class="keyword">return</span> n - maximum</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-operations-to-reduce-x-to-zero/" target="_blank" rel="external">https://leetcode.com/problems/minimum-operations-to-reduce-x-to-zero/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1658. Minimum Operations to Reduce X to Zero
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1854. Maximum Population Year</title>
    <link href="http://noahsnail.com/2021/08/19/2021-08-19-Leetcode-1854-Maximum-Population-Year/"/>
    <id>http://noahsnail.com/2021/08/19/2021-08-19-Leetcode-1854-Maximum-Population-Year/</id>
    <published>2021-08-19T07:08:13.260Z</published>
    <updated>2021-08-19T09:31:28.031Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Maximum_Population_Year.png" alt="Maximum Population Year"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，创建一个统计年份人数数组，遍历所有日志，遍历出生、死亡之间的年份，累加对应年份的人口，最后找出人口最多最早的年份，注意边界值。Version 2是遍历所有年份，再遍历所有日志，统计每个年份的人口并比较，比Version 1要慢一些。Version 3根据出生年份和死亡年份来更新当年的人口变化，出省年份人口数量加<code>1</code>，死亡年份人口数量减<code>1</code>，最后遍历所有年份，累加每个年份的人口变化即为当前年份的总人口，注意，此时<code>2050年</code>死亡人口要减<code>1</code>，因此边界值要变为<code>end - start + 1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maximumPopulation</span><span class="params">(self, logs: List[List[int]])</span> -&gt; int:</span></div><div class="line">        start = <span class="number">1950</span></div><div class="line">        end = <span class="number">2050</span></div><div class="line">        stat = [<span class="number">0</span>] * (end - start)</div><div class="line">        <span class="keyword">for</span> birth, death <span class="keyword">in</span> logs:</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(birth, death):</div><div class="line">                stat[i - start] += <span class="number">1</span></div><div class="line">        temp = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> index, count <span class="keyword">in</span> enumerate(stat):</div><div class="line">            <span class="keyword">if</span> count &gt; temp:</div><div class="line">                result = index</div><div class="line">                temp = count</div><div class="line">        <span class="keyword">return</span> result + start</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maximumPopulation</span><span class="params">(self, logs: List[List[int]])</span> -&gt; int:</span></div><div class="line">        start = <span class="number">1950</span></div><div class="line">        end = <span class="number">2050</span></div><div class="line">        temp = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(start, end):</div><div class="line">            count = <span class="number">0</span></div><div class="line">            <span class="keyword">for</span> birth, death <span class="keyword">in</span> logs: </div><div class="line">                <span class="keyword">if</span> birth &lt;= i <span class="keyword">and</span> i &lt; death:</div><div class="line">                    count += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> count &gt; temp:</div><div class="line">                temp = count</div><div class="line">                result = i</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maximumPopulation</span><span class="params">(self, logs: List[List[int]])</span> -&gt; int:</span></div><div class="line">        start = <span class="number">1950</span></div><div class="line">        end = <span class="number">2050</span></div><div class="line">        stat = [<span class="number">0</span>] * (end - start + <span class="number">1</span>)</div><div class="line">        <span class="keyword">for</span> birth, death <span class="keyword">in</span> logs:</div><div class="line">            stat[birth - start] += <span class="number">1</span></div><div class="line">            stat[death - start] -= <span class="number">1</span></div><div class="line">        temp = <span class="number">0</span></div><div class="line">        current = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> index, count <span class="keyword">in</span> enumerate(stat):</div><div class="line">            current += count</div><div class="line">            <span class="keyword">if</span> current &gt; temp:</div><div class="line">                result = index</div><div class="line">                temp = current</div><div class="line">        <span class="keyword">return</span> result + start</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/maximum-population-year/" target="_blank" rel="external">https://leetcode.com/problems/maximum-population-year/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1854. Maximum Population Year
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1964. Find the Longest Valid Obstacle Course at Each Position</title>
    <link href="http://noahsnail.com/2021/08/18/2021-08-18-Leetcode-1964-Find-the-Longest-Valid-Obstacle-Course-at-Each-Position/"/>
    <id>http://noahsnail.com/2021/08/18/2021-08-18-Leetcode-1964-Find-the-Longest-Valid-Obstacle-Course-at-Each-Position/</id>
    <published>2021-08-18T08:06:07.284Z</published>
    <updated>2021-08-18T08:19:37.715Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Find_the_Longest_Valid_Obstacle_Course_at_Each_Position.png" alt="Find the Longest Valid Obstacle Course at Each Position"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，这道题跟Leetcode 300很像，可以构造一个最长非递减子序列，使用<code>order</code>作为有序序列保持最长非递减子序列长度，当新元素大于或等于有序序列的最后一个元素时，此时增加新元素到有序序列中，否则，则将新元素插入到当前序列中，替换比其大的元素，保证左侧元素都比它小，此时长度不变，<code>order</code>中相同序列位置上始终保留较小的元素，这样利于插入新元素。插入新元素时，结果就是序列长度，更新元素时，长度为索引位值加<code>1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestObstacleCourseAtEachPosition</span><span class="params">(self, obstacles: List[int])</span> -&gt; List[int]:</span></div><div class="line">        n = len(obstacles)</div><div class="line">        order = []</div><div class="line">        result = []</div><div class="line">        <span class="keyword">for</span> i, obstacle <span class="keyword">in</span> enumerate(obstacles):</div><div class="line">            <span class="keyword">if</span> len(order) == <span class="number">0</span> <span class="keyword">or</span> order[<span class="number">-1</span>] &lt;= obstacle:</div><div class="line">                order.append(obstacle)</div><div class="line">                result.append(len(order))</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                index = bisect.bisect_right(order, obstacle)</div><div class="line">                order[index] = obstacle</div><div class="line">                result.append(index+<span class="number">1</span>)</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-the-longest-valid-obstacle-course-at-each-position/" target="_blank" rel="external">https://leetcode.com/problems/find-the-longest-valid-obstacle-course-at-each-position/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1964. Find the Longest Valid Obstacle Course at Each Position
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 289. Game of Life</title>
    <link href="http://noahsnail.com/2021/08/18/2021-08-18-Leetcode-289-Game-of-Life/"/>
    <id>http://noahsnail.com/2021/08/18/2021-08-18-Leetcode-289-Game-of-Life/</id>
    <published>2021-08-18T06:32:15.527Z</published>
    <updated>2021-08-18T08:05:17.969Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Game_of_Life.png" alt="Game of Life"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，遍历所有细胞，统计其周围八个细胞的存活个数，根据规则判断当前细胞状态是否需要改变，如果需要，将其位置及要更新的状态保存到数组中，遍历数组，更新<code>board</code>即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gameOfLife</span><span class="params">(self, board: List[List[int]])</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line">        Do not return anything, modify board in-place instead.</div><div class="line">        """</div><div class="line">        m = len(board)</div><div class="line">        n = len(board[<span class="number">0</span>])</div><div class="line">        cells = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(n):</div><div class="line">                count = <span class="number">0</span></div><div class="line">                <span class="keyword">if</span> i &gt; <span class="number">0</span>:</div><div class="line">                    count += board[i<span class="number">-1</span>][j]</div><div class="line">                    <span class="keyword">if</span> j &gt; <span class="number">0</span>:</div><div class="line">                        count += board[i<span class="number">-1</span>][j<span class="number">-1</span>]</div><div class="line">                    <span class="keyword">if</span> j &lt; n - <span class="number">1</span>:</div><div class="line">                        count += board[i<span class="number">-1</span>][j+<span class="number">1</span>]</div><div class="line">                <span class="keyword">if</span> i &lt; m - <span class="number">1</span>:</div><div class="line">                    count += board[i+<span class="number">1</span>][j]</div><div class="line">                    <span class="keyword">if</span> j &gt; <span class="number">0</span>:</div><div class="line">                        count += board[i+<span class="number">1</span>][j<span class="number">-1</span>]</div><div class="line">                    <span class="keyword">if</span> j &lt; n - <span class="number">1</span>:</div><div class="line">                        count += board[i+<span class="number">1</span>][j+<span class="number">1</span>]</div><div class="line">                <span class="keyword">if</span> j &gt; <span class="number">0</span>:</div><div class="line">                    count += board[i][j<span class="number">-1</span>]</div><div class="line">                <span class="keyword">if</span> j &lt; n - <span class="number">1</span>:</div><div class="line">                    count += board[i][j+<span class="number">1</span>]</div><div class="line">                <span class="keyword">if</span> board[i][j] == <span class="number">1</span> <span class="keyword">and</span> (count &lt; <span class="number">2</span> <span class="keyword">or</span> count &gt; <span class="number">3</span>):</div><div class="line">                    cells.append((i, j, <span class="number">0</span>))</div><div class="line">                <span class="keyword">if</span> count == <span class="number">3</span> <span class="keyword">and</span> board[i][j] == <span class="number">0</span>:</div><div class="line">                    cells.append((i, j, <span class="number">1</span>))</div><div class="line">        <span class="keyword">for</span> x, y, state <span class="keyword">in</span> cells:</div><div class="line">            board[x][y] = state</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/game-of-life/" target="_blank" rel="external">https://leetcode.com/problems/game-of-life/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 289. Game of Life
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1861. Rotating the Box</title>
    <link href="http://noahsnail.com/2021/08/17/2021-08-17-Leetcode-1861-Rotating-the-Box/"/>
    <id>http://noahsnail.com/2021/08/17/2021-08-17-Leetcode-1861-Rotating-the-Box/</id>
    <published>2021-08-17T09:10:43.718Z</published>
    <updated>2021-08-17T09:26:48.332Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Rotating_the_Box.png" alt="Rotating the Box"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先遍历每一行，将对应的石头移到空白位置，然后再进行行列的90度翻转。遍历每一行时，应该从右向左，寻找每一个石头，即首先应该移动最右边的石头，<code>k</code>用来表示空白位置的索引，<code>k = -1</code>时表示不存在空白位置，当碰到空白位置时，如果此时空白位置<code>k = -1</code>，则将当前位置的索引赋给<code>k</code>，<code>k != -1</code>时，此时右边存在空白位置，因此不更新<code>k</code>，当碰到障碍物时，此时不存在空白位置，因此<code>k=-1</code>，当碰到石头时，如果<code>k = -1</code>，即不存在空白位置，则不移动石头，否则，应该将石头和空白位置进行互换，同时，空白位置向左移动一位，石头和空白位置可以互换，说明它们之间不存在障碍物，也不存在其它石头，因此<code>k -= 1</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rotateTheBox</span><span class="params">(self, box: List[List[str]])</span> -&gt; List[List[str]]:</span></div><div class="line">        m = len(box)</div><div class="line">        n = len(box[<span class="number">0</span>])</div><div class="line">        result = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</div><div class="line">            k = <span class="number">-1</span></div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(n<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</div><div class="line">                <span class="keyword">if</span> box[i][j] == <span class="string">'.'</span>:</div><div class="line">                    <span class="keyword">if</span> k == <span class="number">-1</span>:</div><div class="line">                        k = j</div><div class="line">                <span class="keyword">elif</span> box[i][j] == <span class="string">'*'</span>:</div><div class="line">                    k = <span class="number">-1</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    <span class="keyword">if</span> k &gt; <span class="number">-1</span>:</div><div class="line">                        box[i][j], box[i][k] = box[i][k], box[i][j]</div><div class="line">                        k -= <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            row = []</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(m<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</div><div class="line">                row.append(box[j][i])</div><div class="line">            result.append(row)</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/rotating-the-box/" target="_blank" rel="external">https://leetcode.com/problems/rotating-the-box/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1861. Rotating the Box
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 905. Sort Array By Parity</title>
    <link href="http://noahsnail.com/2021/08/17/2021-08-17-Leetcode-905-Sort-Array-By-Parity/"/>
    <id>http://noahsnail.com/2021/08/17/2021-08-17-Leetcode-905-Sort-Array-By-Parity/</id>
    <published>2021-08-17T03:14:31.896Z</published>
    <updated>2021-08-17T03:16:10.331Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Sort_Array_By_Parity.png" alt="Sort Array By Parity"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，使用前后双指针，每次左边的奇数都跟右边的偶数对换位置。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortArrayByParity</span><span class="params">(self, nums: List[int])</span> -&gt; List[int]:</span></div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = len(nums) - <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> i &lt; j:</div><div class="line">            <span class="keyword">while</span> i &lt; len(nums) <span class="keyword">and</span> nums[i] % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">                i += <span class="number">1</span></div><div class="line">            <span class="keyword">while</span> j &gt; <span class="number">-1</span> <span class="keyword">and</span> nums[j] % <span class="number">2</span> == <span class="number">1</span>:</div><div class="line">                j -= <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> i &lt; j:</div><div class="line">                nums[i], nums[j] = nums[j], nums[i]</div><div class="line">        <span class="keyword">return</span> nums</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/sort-array-by-parity/" target="_blank" rel="external">https://leetcode.com/problems/sort-array-by-parity/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 905. Sort Array By Parity
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1914. Cyclically Rotating a Grid</title>
    <link href="http://noahsnail.com/2021/08/17/2021-08-17-Leetcode-1914-Cyclically-Rotating-a-Grid/"/>
    <id>http://noahsnail.com/2021/08/17/2021-08-17-Leetcode-1914-Cyclically-Rotating-a-Grid/</id>
    <published>2021-08-17T02:59:14.108Z</published>
    <updated>2021-08-17T03:13:35.504Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Cyclically_Rotating_a_Grid.png" alt="Cyclically Rotating a Grid"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，先根据规律求出每一层的索引，然后按逆时针顺序保存到数组中，则<code>k</code>次循环后当前索引的位置<code>index</code>在列表中的位置为<code>(index+k) % len(circle)</code>，因此将当前索引位置的值赋给目标索引位置即可。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rotateGrid</span><span class="params">(self, grid: List[List[int]], k: int)</span> -&gt; List[List[int]]:</span></div><div class="line">        m = len(grid)</div><div class="line">        n = len(grid[<span class="number">0</span>])</div><div class="line">        result = [[<span class="number">0</span>] * n <span class="keyword">for</span> _ <span class="keyword">in</span> range(m)]</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(min(m // <span class="number">2</span>, n // <span class="number">2</span>)):</div><div class="line">            circle = []</div><div class="line">            <span class="comment"># Left column</span></div><div class="line">            circle += [(j, i) <span class="keyword">for</span> j <span class="keyword">in</span> range(i, m-i)]</div><div class="line">            <span class="comment"># Bottom row</span></div><div class="line">            circle += [(m<span class="number">-1</span>-i, j) <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, n-i)]</div><div class="line">            <span class="comment"># Right column</span></div><div class="line">            circle += [(j, n<span class="number">-1</span>-i) <span class="keyword">for</span> j <span class="keyword">in</span> range(m<span class="number">-2</span>-i, i<span class="number">-1</span>, <span class="number">-1</span>)]</div><div class="line">            <span class="comment"># Top row</span></div><div class="line">            circle += [(i, j) <span class="keyword">for</span> j <span class="keyword">in</span> range(n<span class="number">-2</span>-i, i, <span class="number">-1</span>)]</div><div class="line">            <span class="keyword">for</span> index, (x, y) <span class="keyword">in</span> enumerate(circle):</div><div class="line">                target_x, target_y = circle[(index+k) % len(circle)]</div><div class="line">                result[target_x][target_y] = grid[x][y]</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/cyclically-rotating-a-grid/" target="_blank" rel="external">https://leetcode.com/problems/cyclically-rotating-a-grid/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1914. Cyclically Rotating a Grid
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1881. Maximum Value after Insertion</title>
    <link href="http://noahsnail.com/2021/08/16/2021-08-16-Leetcode-1881-Maximum-Value-after-Insertion/"/>
    <id>http://noahsnail.com/2021/08/16/2021-08-16-Leetcode-1881-Maximum-Value-after-Insertion/</id>
    <published>2021-08-16T06:23:06.346Z</published>
    <updated>2021-08-16T06:31:19.983Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Maximum_Value_after_Insertion.png" alt="Maximum Value after Insertion"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，如果<code>n</code>是正数，则<code>x</code>应该位于从左向右找第一个比其小的数字所在的位置，如果是负数，<code>x</code>应该位于从左往右找第一个比其大的数字所在的位置。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxValue</span><span class="params">(self, n: str, x: int)</span> -&gt; str:</span></div><div class="line">        result = <span class="string">''</span></div><div class="line">        <span class="keyword">if</span> n[<span class="number">0</span>] == <span class="string">'-'</span>:</div><div class="line">            i = <span class="number">0</span></div><div class="line">            <span class="keyword">while</span> i &lt; len(n) <span class="keyword">and</span> n[i] &lt;= str(x):</div><div class="line">                i += <span class="number">1</span></div><div class="line">            result = n[:i] + str(x) + n[i:]</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            i = <span class="number">0</span></div><div class="line">            <span class="keyword">while</span> i &lt; len(n) <span class="keyword">and</span> n[i] &gt;= str(x):</div><div class="line">                i += <span class="number">1</span></div><div class="line">            result = n[:i] + str(x) + n[i:]</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/maximum-value-after-insertion/" target="_blank" rel="external">https://leetcode.com/problems/maximum-value-after-insertion/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1881. Maximum Value after Insertion
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 977. Squares of a Sorted Array</title>
    <link href="http://noahsnail.com/2021/08/13/2021-08-13-Leetcode-977-Squares-of-a-Sorted-Array/"/>
    <id>http://noahsnail.com/2021/08/13/2021-08-13-Leetcode-977-Squares-of-a-Sorted-Array/</id>
    <published>2021-08-13T05:43:31.300Z</published>
    <updated>2021-08-13T09:21:04.643Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Squares_of_a_Sorted_Array.png" alt="Squares of a Sorted Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，采用双指针，先计算平方和，再比较大小，较大的更新到结果数组中。Version 2先比较二者绝对值大小，再将平方更新到结果中。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortedSquares</span><span class="params">(self, nums: List[int])</span> -&gt; List[int]:</span></div><div class="line">        n = len(nums)</div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = n - <span class="number">1</span></div><div class="line">        result = [<span class="number">0</span>] * n</div><div class="line">        index = n - <span class="number">1</span></div><div class="line">        x = nums[i] ** <span class="number">2</span></div><div class="line">        y = nums[j] ** <span class="number">2</span></div><div class="line">        <span class="keyword">while</span> i &lt;= j:    </div><div class="line">            <span class="keyword">if</span> x &lt;= y:</div><div class="line">                result[index] = y</div><div class="line">                index -= <span class="number">1</span></div><div class="line">                j -= <span class="number">1</span></div><div class="line">                y = nums[j] ** <span class="number">2</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result[index] = x</div><div class="line">                index -= <span class="number">1</span></div><div class="line">                i += <span class="number">1</span></div><div class="line">                x = nums[i] ** <span class="number">2</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sortedSquares</span><span class="params">(self, nums: List[int])</span> -&gt; List[int]:</span></div><div class="line">        n = len(nums)</div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = n - <span class="number">1</span></div><div class="line">        result = [<span class="number">0</span>] * n</div><div class="line">        index = n - <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> i &lt;= j: </div><div class="line">            x = nums[i]</div><div class="line">            y = nums[j]</div><div class="line">            <span class="keyword">if</span> abs(x) &lt;= abs(y):</div><div class="line">                result[index] = y * y</div><div class="line">                index -= <span class="number">1</span></div><div class="line">                j -= <span class="number">1</span></div><div class="line">                y = nums[j]</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result[index] = x * x</div><div class="line">                index -= <span class="number">1</span></div><div class="line">                i += <span class="number">1</span></div><div class="line">                x = nums[i]</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/squares-of-a-sorted-array/" target="_blank" rel="external">https://leetcode.com/problems/squares-of-a-sorted-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 977. Squares of a Sorted Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1961. Check If String Is a Prefix of Array</title>
    <link href="http://noahsnail.com/2021/08/12/2021-08-12-Leetcode-1961-Check-If-String-Is-a-Prefix-of-Array/"/>
    <id>http://noahsnail.com/2021/08/12/2021-08-12-Leetcode-1961-Check-If-String-Is-a-Prefix-of-Array/</id>
    <published>2021-08-12T09:08:08.849Z</published>
    <updated>2021-08-13T02:03:19.991Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Check_If_String_Is_a_Prefix_of_Array.png" alt="Check If String Is a Prefix of Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p><strong>解析：</strong>Version 1，遍历数组中的字符串，同时遍历<code>s</code>，如果数组中的字符不等于对应位置的字符，直接返回<code>False</code>，当<code>s</code>遍历结束时，判断数组中当前位置的字符串是否遍历完成，如果数组遍历结束，判断字符串<code>s</code>是否遍历完成。Version 2直接按单词比较。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPrefixString</span><span class="params">(self, s: str, words: List[str])</span> -&gt; bool:</span></div><div class="line">        n = len(s)</div><div class="line">        i = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(word)):</div><div class="line">                <span class="keyword">if</span> s[i] == word[j]:</div><div class="line">                    i += <span class="number">1</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">                <span class="keyword">if</span> i == n:</div><div class="line">                    <span class="keyword">return</span> j == len(word) - <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> i == n</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isPrefixString</span><span class="params">(self, s: str, words: List[str])</span> -&gt; bool:</span></div><div class="line">        n = len(s)</div><div class="line">        i = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</div><div class="line">            m = len(word)</div><div class="line">            <span class="keyword">if</span> s[i:i+m] == word:</div><div class="line">                i += m</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            <span class="keyword">if</span> i == n:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">return</span> i == n</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/check-if-string-is-a-prefix-of-array/" target="_blank" rel="external">https://leetcode.com/problems/check-if-string-is-a-prefix-of-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1961. Check If String Is a Prefix of Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
