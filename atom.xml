<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SnailTyan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://noahsnail.com/"/>
  <updated>2021-05-08T02:43:38.221Z</updated>
  <id>http://noahsnail.com/</id>
  
  <author>
    <name>Tyan</name>
    <email>Tyan.Liu.Git@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Leetcode 804. Unique Morse Code Words</title>
    <link href="http://noahsnail.com/2021/05/08/2021-05-08-Leetcode-804-Unique-Morse-Code-Words/"/>
    <id>http://noahsnail.com/2021/05/08/2021-05-08-Leetcode-804-Unique-Morse-Code-Words/</id>
    <published>2021-05-08T02:40:58.731Z</published>
    <updated>2021-05-08T02:43:38.221Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Unique_Morse_Code_Words.png" alt="Unique Morse Code Words"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">uniqueMorseRepresentations</span><span class="params">(self, words: List[str])</span> -&gt; int:</span></div><div class="line">        az = [chr(x) <span class="keyword">for</span> x <span class="keyword">in</span> range(ord(<span class="string">'a'</span>), ord(<span class="string">'z'</span>) + <span class="number">1</span>)]</div><div class="line">        morse = [<span class="string">".-"</span>,<span class="string">"-..."</span>,<span class="string">"-.-."</span>,<span class="string">"-.."</span>,<span class="string">"."</span>,<span class="string">"..-."</span>,<span class="string">"--."</span>,<span class="string">"...."</span>,<span class="string">".."</span>,<span class="string">".---"</span>,<span class="string">"-.-"</span>,<span class="string">".-.."</span>,<span class="string">"--"</span>,<span class="string">"-."</span>,<span class="string">"---"</span>,<span class="string">".--."</span>,<span class="string">"--.-"</span>,<span class="string">".-."</span>,<span class="string">"..."</span>,<span class="string">"-"</span>,<span class="string">"..-"</span>,<span class="string">"...-"</span>,<span class="string">".--"</span>,<span class="string">"-..-"</span>,<span class="string">"-.--"</span>,<span class="string">"--.."</span>]</div><div class="line">        mapping = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(morse)):</div><div class="line">            mapping[az[i]] = morse[i]</div><div class="line"></div><div class="line">        result = set()</div><div class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</div><div class="line">            temp = <span class="string">''</span></div><div class="line">            <span class="keyword">for</span> ch <span class="keyword">in</span> word:</div><div class="line">                temp = temp + mapping[ch]</div><div class="line">            result.add(temp)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> len(result)</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/unique-morse-code-words/" target="_blank" rel="external">https://leetcode.com/problems/unique-morse-code-words/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 804. Unique Morse Code Words
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1023. Camelcase Matching</title>
    <link href="http://noahsnail.com/2021/05/07/2021-05-07-Leetcode-1023-Camelcase-Matching/"/>
    <id>http://noahsnail.com/2021/05/07/2021-05-07-Leetcode-1023-Camelcase-Matching/</id>
    <published>2021-05-07T07:16:30.710Z</published>
    <updated>2021-05-07T07:18:37.256Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Camelcase_Matching.png" alt="Camelcase Matching"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">camelMatch</span><span class="params">(self, queries: List[str], pattern: str)</span> -&gt; List[bool]:</span></div><div class="line">        result = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(queries)):</div><div class="line">            res = self.match(queries[i], pattern)</div><div class="line">            result.append(res)</div><div class="line">            </div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">match</span><span class="params">(self, query, pattern)</span>:</span></div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> i &lt; len(query) <span class="keyword">and</span> j &lt; len(pattern):</div><div class="line">            <span class="keyword">if</span> query[i] == pattern[j]:</div><div class="line">                i += <span class="number">1</span></div><div class="line">                j += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">if</span> query[i].isupper():</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    i += <span class="number">1</span></div><div class="line"></div><div class="line">        <span class="keyword">if</span> j == len(pattern) <span class="keyword">and</span> (i == len(query) <span class="keyword">or</span> query[i:].islower()):</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/camelcase-matching/" target="_blank" rel="external">https://leetcode.com/problems/camelcase-matching/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1023. Camelcase Matching
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 383. Ransom Note</title>
    <link href="http://noahsnail.com/2021/05/06/2021-05-06-Leetcode-383-Ransom-Note/"/>
    <id>http://noahsnail.com/2021/05/06/2021-05-06-Leetcode-383-Ransom-Note/</id>
    <published>2021-05-06T08:37:33.279Z</published>
    <updated>2021-05-06T08:38:09.332Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Ransom_Note.png" alt="Ransom Note"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">canConstruct</span><span class="params">(self, ransomNote: str, magazine: str)</span> -&gt; bool:</span></div><div class="line">        ransom = Counter(ransomNote)</div><div class="line">        mag = Counter(magazine)</div><div class="line">        <span class="keyword">for</span> k, _ <span class="keyword">in</span> ransom.items():</div><div class="line">            <span class="keyword">if</span> k <span class="keyword">in</span> mag:</div><div class="line">                <span class="keyword">if</span> ransom[k] &gt; mag[k]:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/ransom-note/" target="_blank" rel="external">https://leetcode.com/problems/ransom-note/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 383. Ransom Note
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 696. Count Binary Substrings</title>
    <link href="http://noahsnail.com/2021/05/06/2021-05-06-Leetcode-696-Count-Binary-Substrings/"/>
    <id>http://noahsnail.com/2021/05/06/2021-05-06-Leetcode-696-Count-Binary-Substrings/</id>
    <published>2021-05-06T08:12:02.294Z</published>
    <updated>2021-05-06T08:14:14.583Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Count_Binary_Substrings.png" alt="Count Binary Substrings"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countBinarySubstrings</span><span class="params">(self, s: str)</span> -&gt; int:</span></div><div class="line">        length = len(s)</div><div class="line">        count = <span class="number">0</span></div><div class="line">        pre = <span class="number">0</span></div><div class="line">        curr = <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, length):</div><div class="line">            <span class="keyword">if</span> s[i] == s[i - <span class="number">1</span>]:</div><div class="line">                curr += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                count += min(pre, curr)</div><div class="line">                pre = curr</div><div class="line">                curr = <span class="number">1</span></div><div class="line">        count += min(pre, curr)</div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/count-binary-substrings/" target="_blank" rel="external">https://leetcode.com/problems/count-binary-substrings/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 696. Count Binary Substrings
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 165. Compare Version Numbers</title>
    <link href="http://noahsnail.com/2021/04/30/2021-04-30-Leetcode-165-Compare-Version-Numbers/"/>
    <id>http://noahsnail.com/2021/04/30/2021-04-30-Leetcode-165-Compare-Version-Numbers/</id>
    <published>2021-04-30T09:46:46.338Z</published>
    <updated>2021-04-30T09:48:47.423Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Compare_Version_Numbers.png" alt="Compare Version Numbers"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">compareVersion</span><span class="params">(self, version1: str, version2: str)</span> -&gt; int:</span></div><div class="line">        v1 = version1.split(<span class="string">'.'</span>)</div><div class="line">        v2 = version2.split(<span class="string">'.'</span>)</div><div class="line">        </div><div class="line">        length1 = len(v1)</div><div class="line">        length2 = len(v2)</div><div class="line">            </div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(min(length1, length2)):</div><div class="line">            <span class="keyword">if</span> int(v1[i]) &lt; int(v2[i]):</div><div class="line">                <span class="keyword">return</span> <span class="number">-1</span></div><div class="line">            <span class="keyword">elif</span> int(v1[i]) &gt; int(v2[i]):</div><div class="line">                <span class="keyword">return</span> <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> length1 &gt; length2:</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(length2, length1):</div><div class="line">                <span class="keyword">if</span> int(v1[i]) &gt; <span class="number">0</span>:</div><div class="line">                    <span class="keyword">return</span> <span class="number">1</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(length1, length2):</div><div class="line">                <span class="keyword">if</span> int(v2[i]) &gt; <span class="number">0</span>:</div><div class="line">                    <span class="keyword">return</span> <span class="number">-1</span></div><div class="line">        <span class="keyword">return</span> <span class="number">0</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/compare-version-numbers/" target="_blank" rel="external">https://leetcode.com/problems/compare-version-numbers/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 165. Compare Version Numbers
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 415. Add Strings</title>
    <link href="http://noahsnail.com/2021/03/31/2021-03-31-Leetcode-415-Add-Strings/"/>
    <id>http://noahsnail.com/2021/03/31/2021-03-31-Leetcode-415-Add-Strings/</id>
    <published>2021-03-31T07:29:34.245Z</published>
    <updated>2021-03-31T07:30:19.690Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Add_Strings.png" alt="Add Strings"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addStrings</span><span class="params">(self, num1: str, num2: str)</span> -&gt; str:</span></div><div class="line">        result = <span class="string">''</span></div><div class="line">        length1 = len(num1)</div><div class="line">        length2 = len(num2)</div><div class="line"></div><div class="line">        <span class="keyword">if</span> length1 &lt; length2:</div><div class="line">            num1, num2 = num2, num1</div><div class="line">            length1, length2 = length2, length1</div><div class="line"></div><div class="line">        flag = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">-1</span>, -length2 - <span class="number">1</span>, <span class="number">-1</span>):</div><div class="line">            temp = int(num1[i]) + int(num2[i]) + flag</div><div class="line">            flag = <span class="number">1</span> <span class="keyword">if</span> temp &gt; <span class="number">9</span> <span class="keyword">else</span> <span class="number">0</span></div><div class="line">            result = str(temp % <span class="number">10</span>) + result</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(-length2 - <span class="number">1</span>, -length1 - <span class="number">1</span>, <span class="number">-1</span>):</div><div class="line">            temp = int(num1[i]) + flag </div><div class="line">            flag = <span class="number">1</span> <span class="keyword">if</span> temp &gt; <span class="number">9</span> <span class="keyword">else</span> <span class="number">0</span></div><div class="line">            result = str(temp % <span class="number">10</span>) + result</div><div class="line">        <span class="keyword">if</span> flag:</div><div class="line">            result = str(flag) + result</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/add-strings/" target="_blank" rel="external">https://leetcode.com/problems/add-strings/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 415. Add Strings
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 916. Word Subsets</title>
    <link href="http://noahsnail.com/2021/03/31/2021-03-31-Leetcode-916-Word-Subsets/"/>
    <id>http://noahsnail.com/2021/03/31/2021-03-31-Leetcode-916-Word-Subsets/</id>
    <published>2021-03-31T06:23:35.121Z</published>
    <updated>2021-04-30T09:48:41.841Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Word_Subsets.png" alt="Word Subsets"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wordSubsets</span><span class="params">(self, A, B)</span>:</span></div><div class="line">        result = []</div><div class="line">        stat = Counter()</div><div class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> B:</div><div class="line">            stat |= Counter(b)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> a <span class="keyword">in</span> A:</div><div class="line">            temp = Counter(a)</div><div class="line">            diff = stat - temp</div><div class="line">            <span class="keyword">if</span> len(diff) == <span class="number">0</span>:</div><div class="line">                result.append(a)</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/word-subsets/" target="_blank" rel="external">https://leetcode.com/problems/word-subsets/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 916. Word Subsets
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 71. Simplify Path</title>
    <link href="http://noahsnail.com/2021/03/29/2021-03-29-Leetcode-71-Simplify-Path/"/>
    <id>http://noahsnail.com/2021/03/29/2021-03-29-Leetcode-71-Simplify-Path/</id>
    <published>2021-03-29T05:28:53.254Z</published>
    <updated>2021-03-29T05:42:17.628Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Simplify_Path.png" alt="Simplify Path"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">simplifyPath</span><span class="params">(self, path: str)</span> -&gt; str:</span></div><div class="line">        result = []</div><div class="line">        data = path.split(<span class="string">'/'</span>)</div><div class="line">        <span class="keyword">for</span> temp <span class="keyword">in</span> data:</div><div class="line">            <span class="keyword">if</span> temp == <span class="string">''</span> <span class="keyword">or</span> temp == <span class="string">'.'</span>:</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            <span class="keyword">elif</span> temp == <span class="string">'..'</span>:</div><div class="line">                <span class="keyword">if</span> len(result) != <span class="number">0</span>:</div><div class="line">                    result.pop()</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result.append(temp)</div><div class="line"></div><div class="line">        result = <span class="string">'/'</span> + <span class="string">'/'</span>.join(result)</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/simplify-path/" target="_blank" rel="external">https://leetcode.com/problems/simplify-path/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 71. Simplify Path
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 236. Lowest Common Ancestor of a Binary Tree</title>
    <link href="http://noahsnail.com/2021/03/29/2021-03-29-Leetcode-236-Lowest-Common-Ancestor-of-a-Binary-Tree/"/>
    <id>http://noahsnail.com/2021/03/29/2021-03-29-Leetcode-236-Lowest-Common-Ancestor-of-a-Binary-Tree/</id>
    <published>2021-03-29T01:50:58.783Z</published>
    <updated>2021-03-29T02:10:43.264Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Lowest-Common-Ancestor-of-a-Binary-Tree.png" alt="Lowest Common Ancestor of a Binary Tree"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>思路：分别搜索<code>p, q</code>结点，保存搜索路径（逆序），比较路径中第一个相同的结点即为二者的最低共同祖先节点。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Definition for a binary tree node.</span></div><div class="line"><span class="comment"># class TreeNode:</span></div><div class="line"><span class="comment">#     def __init__(self, x):</span></div><div class="line"><span class="comment">#         self.val = x</span></div><div class="line"><span class="comment">#         self.left = None</span></div><div class="line"><span class="comment">#         self.right = None</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lowestCommonAncestor</span><span class="params">(self, root: <span class="string">'TreeNode'</span>, p: <span class="string">'TreeNode'</span>, q: <span class="string">'TreeNode'</span>)</span> -&gt; 'TreeNode':</span></div><div class="line">        <span class="keyword">if</span> root.val == p.val <span class="keyword">or</span> root.val == q.val:</div><div class="line">            <span class="keyword">return</span> root</div><div class="line"></div><div class="line">        p_path = []</div><div class="line">        q_path = []</div><div class="line">        self.dfs(root, p, p_path)</div><div class="line">        self.dfs(root, q, q_path)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> temp <span class="keyword">in</span> p_path:</div><div class="line">            <span class="keyword">if</span> temp <span class="keyword">in</span> q_path:</div><div class="line">                <span class="keyword">return</span> temp</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dfs</span><span class="params">(self, root, target, result)</span>:</span></div><div class="line">        <span class="keyword">if</span> root <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line">        <span class="keyword">if</span> root.val == target.val:</div><div class="line">            result.append(root)</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line"></div><div class="line">        <span class="keyword">if</span> self.dfs(root.left, target, result) <span class="keyword">or</span> self.dfs(root.right, target, result):</div><div class="line">            result.append(root)</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/" target="_blank" rel="external">https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 236. Lowest Common Ancestor of a Binary Tree
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 235. Lowest Common Ancestor of a Binary Search Tree</title>
    <link href="http://noahsnail.com/2021/03/26/2021-03-26-Leetcode-235-Lowest-Common-Ancestor-of-a-Binary-Search-Tree/"/>
    <id>http://noahsnail.com/2021/03/26/2021-03-26-Leetcode-235-Lowest-Common-Ancestor-of-a-Binary-Search-Tree/</id>
    <published>2021-03-26T08:41:58.677Z</published>
    <updated>2021-03-29T01:57:04.021Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Lowest-Common-Ancestor-of-a-Binary-Search-Tree.png" alt="Lowest Common Ancestor of a Binary Search Tree"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>思路：由于树是有序的，因此先对<code>p, q</code>排序，<code>p</code>小于<code>q</code>，因此在树中<code>p</code>一定在于最低祖先结点的左子树（包含当前结点），<code>q</code>位于右子树（包含当前结点），比较<code>p, q</code>结点与当前结点的值，找到这样的结点即为最低最先结点。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Definition for a binary tree node.</span></div><div class="line"><span class="comment"># class TreeNode:</span></div><div class="line"><span class="comment">#     def __init__(self, x):</span></div><div class="line"><span class="comment">#         self.val = x</span></div><div class="line"><span class="comment">#         self.left = None</span></div><div class="line"><span class="comment">#         self.right = None</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lowestCommonAncestor</span><span class="params">(self, root, p, q)</span>:</span></div><div class="line">        <span class="keyword">if</span> p.val &gt; q.val:</div><div class="line">            p, q = q, p</div><div class="line"></div><div class="line">        <span class="keyword">if</span> root.val &gt;= p.val <span class="keyword">and</span> root.val &lt;= q.val:</div><div class="line">            <span class="keyword">return</span> root</div><div class="line"></div><div class="line">        <span class="keyword">if</span> root.val &gt; q.val:</div><div class="line">            <span class="keyword">return</span> self.lowestCommonAncestor(root.left, p, q)</div><div class="line"></div><div class="line">        <span class="keyword">if</span> root.val &lt; p.val:</div><div class="line">            <span class="keyword">return</span> self.lowestCommonAncestor(root.right, p, q)</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/" target="_blank" rel="external">https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 235. Lowest Common Ancestor of a Binary Search Tree
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 172. Factorial Trailing Zeroes</title>
    <link href="http://noahsnail.com/2021/03/05/2021-03-05-Leetcode-172-Factorial-Trailing-Zeroes/"/>
    <id>http://noahsnail.com/2021/03/05/2021-03-05-Leetcode-172-Factorial-Trailing-Zeroes/</id>
    <published>2021-03-05T01:11:37.794Z</published>
    <updated>2021-03-26T08:37:48.210Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Palindrome_Pairs.png" alt="Factorial Trailing Zeroes"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>解析：Version 1简单，容易理解，但计算量大，耗时长。Version 2是只处理最后一位为0或5的情况，因为末尾所有的0都来自于这些数字。Version 3更进一步，变为统计数字中包含因子5的个数。Version 4则是统计数字中包含因子5，5^2，5^3，…，5^n的个数。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trailingZeroes</span><span class="params">(self, n)</span>:</span></div><div class="line">        result = <span class="number">1</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n + <span class="number">1</span>):</div><div class="line">            result *= i</div><div class="line">        s = str(result)</div><div class="line">        i = len(s) - <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> s[i] == <span class="string">'0'</span>:</div><div class="line">            i -= <span class="number">1</span></div><div class="line">            count += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trailingZeroes</span><span class="params">(self, n)</span>:</span></div><div class="line">        <span class="keyword">if</span> n &lt; <span class="number">5</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span></div><div class="line">        result = <span class="number">1</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        exp = <span class="number">16</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>, n + <span class="number">1</span>, <span class="number">5</span>):</div><div class="line">            result = result * i * exp</div><div class="line">            <span class="keyword">while</span> result % <span class="number">10</span> == <span class="number">0</span>:</div><div class="line">                count += <span class="number">1</span></div><div class="line">                result //= <span class="number">10</span></div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trailingZeroes</span><span class="params">(self, n)</span>:</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>, n + <span class="number">1</span>, <span class="number">5</span>):</div><div class="line">            temp = i</div><div class="line">            <span class="keyword">while</span> temp % <span class="number">5</span> == <span class="number">0</span>:</div><div class="line">                count += <span class="number">1</span></div><div class="line">                temp //= <span class="number">5</span></div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<ul>
<li>Version 4</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trailingZeroes</span><span class="params">(self, n)</span>:</span></div><div class="line">        count = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> n:</div><div class="line">            n //= <span class="number">5</span></div><div class="line">            count += n</div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/factorial-trailing-zeroes/" target="_blank" rel="external">https://leetcode.com/problems/factorial-trailing-zeroes/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 172. Factorial Trailing Zeroes
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 336. Palindrome Pairs</title>
    <link href="http://noahsnail.com/2021/03/01/2021-03-01-Leetcode-336-Palindrome-Pairs/"/>
    <id>http://noahsnail.com/2021/03/01/2021-03-01-Leetcode-336-Palindrome-Pairs/</id>
    <published>2021-03-01T02:50:02.027Z</published>
    <updated>2021-03-01T02:59:36.996Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Palindrome_Pairs.png" alt="Palindrome Pairs"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>解析：Version 1简单，容易理解，但超时。Version 2是将字符串分为两部分，前半部分和后半部分，如果两部分有一部分是回文子串，则寻找另一部分的对应的回文字符串。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">palindromePairs</span><span class="params">(self, words)</span>:</span></div><div class="line">        result = []</div><div class="line">        length = len(words)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, length):</div><div class="line">                positive = words[i] + words[j]</div><div class="line">                reverse = words[j] + words[i]</div><div class="line">                <span class="keyword">if</span> self.checkPalindrome(positive):</div><div class="line">                    result.append([i, j])</div><div class="line">                <span class="keyword">if</span> self.checkPalindrome(reverse):</div><div class="line">                    result.append([j, i])</div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkPalindrome</span><span class="params">(self, word)</span>:</span></div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = len(word) - <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> i &lt; j:</div><div class="line">            <span class="keyword">if</span> word[i] != word[j]:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            i += <span class="number">1</span></div><div class="line">            j -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">palindromePairs</span><span class="params">(self, words)</span>:</span></div><div class="line">        result = []</div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> index, word <span class="keyword">in</span> enumerate(words):</div><div class="line">            stat[word] = index</div><div class="line"></div><div class="line">        <span class="keyword">for</span> index, word <span class="keyword">in</span> enumerate(words):</div><div class="line">            length = len(word)</div><div class="line">            <span class="keyword">if</span> length == <span class="number">1</span> <span class="keyword">and</span> <span class="string">''</span> <span class="keyword">in</span> stat:</div><div class="line">                result.append([index, stat[<span class="string">''</span>]])</div><div class="line">                result.append([stat[<span class="string">''</span>], index])</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(length + <span class="number">1</span>):</div><div class="line">                prefix = word[:i]</div><div class="line">                rest = word[i:]</div><div class="line">                reverse = rest[::<span class="number">-1</span>]</div><div class="line">                <span class="keyword">if</span> self.checkPalindrome(prefix):</div><div class="line">                    <span class="keyword">if</span> reverse <span class="keyword">in</span> stat <span class="keyword">and</span> index != stat[reverse]:</div><div class="line">                        res = [stat[reverse], index]</div><div class="line">                        <span class="keyword">if</span> res <span class="keyword">not</span> <span class="keyword">in</span> result:</div><div class="line">                            result.append(res)</div><div class="line"></div><div class="line">                suffix = word[i:]</div><div class="line">                rest = word[:i]</div><div class="line">                reverse = rest[::<span class="number">-1</span>]</div><div class="line">                <span class="keyword">if</span> self.checkPalindrome(suffix):</div><div class="line">                    </div><div class="line">                    <span class="keyword">if</span> reverse <span class="keyword">in</span> stat <span class="keyword">and</span> index != stat[reverse]:</div><div class="line">                        res = [index, stat[reverse]]</div><div class="line">                        <span class="keyword">if</span> res <span class="keyword">not</span> <span class="keyword">in</span> result:</div><div class="line">                            result.append(res)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkPalindrome</span><span class="params">(self, word)</span>:</span></div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = len(word) - <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> i &lt; j:</div><div class="line">            <span class="keyword">if</span> word[i] != word[j]:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            i += <span class="number">1</span></div><div class="line">            j -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/palindrome-pairs/" target="_blank" rel="external">https://leetcode.com/problems/palindrome-pairs/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 336. Palindrome Pairs
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 706. Design HashMap</title>
    <link href="http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-706-Design-HashMap/"/>
    <id>http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-706-Design-HashMap/</id>
    <published>2021-02-23T06:56:27.367Z</published>
    <updated>2021-02-26T03:10:17.582Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Design_HashMap.png" alt="Design HashMap"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashMap</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.maps = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">1000</span>)]</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span><span class="params">(self, key: int, value: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        self.remove(key)</div><div class="line">        self.maps[index].append([key, value])</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, key: int)</span> -&gt; int:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> self.maps[index]:</div><div class="line">            <span class="keyword">if</span> k == key:</div><div class="line">                <span class="keyword">return</span> v</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span></div><div class="line">        </div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> self.maps[index]:</div><div class="line">            <span class="keyword">if</span> k == key:</div><div class="line">                self.maps[index].remove([k, v])</div><div class="line">                <span class="keyword">break</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hash</span><span class="params">(self, key)</span>:</span></div><div class="line">        <span class="keyword">return</span> key % <span class="number">1000</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, key, value)</span>:</span></div><div class="line">        self.key = key</div><div class="line">        self.value = value</div><div class="line">        self.next = <span class="keyword">None</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashMap</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.maps = [<span class="keyword">None</span>] * <span class="number">1000</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span><span class="params">(self, key: int, value: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line"></div><div class="line">        <span class="keyword">if</span> self.maps[index] <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            self.maps[index] = ListNode(key, value)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            current = self.maps[index]</div><div class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">                <span class="keyword">if</span> current.key == key:</div><div class="line">                    current.value = value</div><div class="line">                    <span class="keyword">break</span></div><div class="line">                <span class="keyword">elif</span> current.next <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">                    current.next = ListNode(key, value)</div><div class="line">                    <span class="keyword">break</span></div><div class="line">                current = current.next</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, key: int)</span> -&gt; int:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        current = self.maps[index]</div><div class="line">        <span class="keyword">while</span> current:</div><div class="line">            <span class="keyword">if</span> current.key == key:</div><div class="line">                <span class="keyword">return</span> current.value</div><div class="line">            current = current.next</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        current = self.maps[index]</div><div class="line">        <span class="keyword">if</span> current <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> current.key == key:</div><div class="line">            self.maps[index] = current.next</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">while</span> current:</div><div class="line">                <span class="keyword">if</span> current.key == key:</div><div class="line">                    pre.next = current.next</div><div class="line">                    <span class="keyword">break</span></div><div class="line">                pre = current</div><div class="line">                current = current.next</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hash</span><span class="params">(self, key)</span>:</span></div><div class="line">        <span class="keyword">return</span> key % <span class="number">1000</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/design-hashmap/" target="_blank" rel="external">https://leetcode.com/problems/design-hashmap/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 706. Design HashMap
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 705. Design HashSet</title>
    <link href="http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-705-Design-HashSet/"/>
    <id>http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-705-Design-HashSet/</id>
    <published>2021-02-23T05:55:35.517Z</published>
    <updated>2021-02-23T06:54:47.124Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Design_HashSet.png" alt="Design HashSet"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.hashset  = []</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> self.hashset:</div><div class="line">            self.hashset.append(key)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        <span class="keyword">if</span> key <span class="keyword">in</span> self.hashset:</div><div class="line">            self.hashset.remove(key)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">contains</span><span class="params">(self, key: int)</span> -&gt; bool:</span></div><div class="line">        <span class="keyword">if</span> key <span class="keyword">in</span> self.hashset:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.hashset  = [<span class="keyword">False</span>] * <span class="number">1000001</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        self.hashset[key] = <span class="keyword">True</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        self.hashset[key] = <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">contains</span><span class="params">(self, key: int)</span> -&gt; bool:</span></div><div class="line">        <span class="keyword">return</span> self.hashset[key]</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.hashset  = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">1000</span>)] </div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> self.hashset[index]:</div><div class="line">            self.hashset[index].append(key)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        <span class="keyword">if</span> key <span class="keyword">in</span> self.hashset[index]:</div><div class="line">            self.hashset[index].remove(key)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">contains</span><span class="params">(self, key: int)</span> -&gt; bool:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        <span class="keyword">return</span> key <span class="keyword">in</span> self.hashset[index]</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hash</span><span class="params">(self, key)</span>:</span></div><div class="line">        <span class="keyword">return</span> key % <span class="number">1000</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/design-hashset/" target="_blank" rel="external">https://leetcode.com/problems/design-hashset/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 705. Design HashSet
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 726. Number of Atoms</title>
    <link href="http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-726-Number-of-Atoms/"/>
    <id>http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-726-Number-of-Atoms/</id>
    <published>2021-02-23T03:41:52.039Z</published>
    <updated>2021-02-23T05:54:27.192Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Number_of_Atoms.png" alt="Number of Atoms"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>解析：这道题还有优化的空间，这样写主要是逻辑清晰。1. 把元素(多个字母)、数字(多个数字字符)、左右括号拆分开；2. 计算元素的个数，如果元素后没有数字，则添加数字1作为元素个数；当碰到右括号时，查找其对应的左括号，并将其中的元素个数乘以括号后的数字，其后没数字，则默认乘以1；3. 统计元素个数，相同元素个数相加；4. 排序字典，按元素字母排序；5. 构造返回结果字符串。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countOfAtoms</span><span class="params">(self, formula)</span>:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        stack = []</div><div class="line">        parts = []</div><div class="line"></div><div class="line">        <span class="comment"># Split string by alpha, number, '(', ')'</span></div><div class="line">        <span class="keyword">for</span> index, ch <span class="keyword">in</span> enumerate(formula):</div><div class="line">            <span class="keyword">if</span> ch.isupper():</div><div class="line">                parts.append(ch)</div><div class="line">            <span class="keyword">elif</span> ch.islower():</div><div class="line">                parts[<span class="number">-1</span>] += ch</div><div class="line">            <span class="keyword">elif</span> ch.isdigit():</div><div class="line">                <span class="keyword">if</span> formula[index - <span class="number">1</span>].isdigit():</div><div class="line">                    parts[<span class="number">-1</span>] += ch</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    parts.append(ch)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                parts.append(ch)</div><div class="line"></div><div class="line">        <span class="comment"># Calculate the number of atom and remove '(', ')'</span></div><div class="line">        stack = []</div><div class="line">        <span class="keyword">for</span> index, part <span class="keyword">in</span> enumerate(parts):</div><div class="line">            <span class="keyword">if</span> part.isalpha():</div><div class="line">                <span class="keyword">if</span> index + <span class="number">1</span> == len(parts) <span class="keyword">or</span> <span class="keyword">not</span> parts[index + <span class="number">1</span>].isdigit():</div><div class="line">                    stack.append(part)</div><div class="line">                    stack.append(<span class="number">1</span>)</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    stack.append(part)</div><div class="line">            <span class="keyword">elif</span> part.isdigit() <span class="keyword">and</span> parts[index - <span class="number">1</span>] != <span class="string">')'</span>:</div><div class="line">                    stack.append(int(part))</div><div class="line">            <span class="keyword">elif</span> part == <span class="string">'('</span>:</div><div class="line">                stack.append(part)</div><div class="line">            <span class="keyword">elif</span> part == <span class="string">')'</span>:</div><div class="line">                <span class="keyword">if</span> index + <span class="number">1</span> &lt; len(parts) <span class="keyword">and</span> parts[index + <span class="number">1</span>].isdigit():</div><div class="line">                    multiplier = int(parts[index + <span class="number">1</span>])</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    multiplier = <span class="number">1</span></div><div class="line"></div><div class="line">                i = len(stack) - <span class="number">1</span></div><div class="line">                <span class="keyword">while</span> stack[i] != <span class="string">'('</span>:</div><div class="line">                    <span class="keyword">if</span> isinstance(stack[i], int):</div><div class="line">                        stack[i] = stack[i] * multiplier</div><div class="line">                    i -= <span class="number">1</span></div><div class="line">                stack.pop(i)</div><div class="line"></div><div class="line">        <span class="comment"># Stat the number of atoms</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(stack), <span class="number">2</span>):</div><div class="line">            <span class="keyword">if</span> stack[i] <span class="keyword">in</span> stat:</div><div class="line">                stat[stack[i]] += stack[i + <span class="number">1</span>]</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                stat[stack[i]] = stack[i + <span class="number">1</span>]</div><div class="line">        stat = sorted(stat.items(), key=<span class="keyword">lambda</span> item: item[<span class="number">0</span>])</div><div class="line">        result = <span class="string">''</span></div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat:</div><div class="line">            <span class="keyword">if</span> value &gt; <span class="number">1</span>:</div><div class="line">                result = result + key + str(value)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result = result + key</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/number-of-atoms/" target="_blank" rel="external">https://leetcode.com/problems/number-of-atoms/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 726. Number of Atoms
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 939. Minimum Area Rectangle</title>
    <link href="http://noahsnail.com/2021/02/20/2021-02-20-Leetcode-939-Minimum-Area-Rectangle/"/>
    <id>http://noahsnail.com/2021/02/20/2021-02-20-Leetcode-939-Minimum-Area-Rectangle/</id>
    <published>2021-02-20T08:24:36.640Z</published>
    <updated>2021-02-22T02:43:46.434Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Minimum_Area_Rectangle.png" alt="Minimum Area Rectangle"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minAreaRect</span><span class="params">(self, points)</span>:</span></div><div class="line">        result = <span class="number">0</span></div><div class="line">        stat = set(map(tuple, points))</div><div class="line"></div><div class="line">        <span class="keyword">for</span> x1, y1 <span class="keyword">in</span> points:</div><div class="line">            <span class="keyword">for</span> x2, y2 <span class="keyword">in</span> points:</div><div class="line">                <span class="keyword">if</span> x1 == x2 <span class="keyword">or</span> y1 == y2:</div><div class="line">                    <span class="keyword">continue</span></div><div class="line">                <span class="keyword">if</span> (x1, y2) <span class="keyword">in</span> stat <span class="keyword">and</span> (x2, y1) <span class="keyword">in</span> stat:</div><div class="line">                    area = abs(x2 - x1) * abs(y2 - y1)</div><div class="line">                    <span class="keyword">if</span> area &lt; result <span class="keyword">or</span> result == <span class="number">0</span>:</div><div class="line">                        result = area</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-area-rectangle/" target="_blank" rel="external">https://leetcode.com/problems/minimum-area-rectangle/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 939. Minimum Area Rectangle
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 811. Subdomain Visit Count</title>
    <link href="http://noahsnail.com/2021/02/20/2021-02-20-Leetcode-811-Subdomain-Visit-Count/"/>
    <id>http://noahsnail.com/2021/02/20/2021-02-20-Leetcode-811-Subdomain-Visit-Count/</id>
    <published>2021-02-20T03:42:48.128Z</published>
    <updated>2021-02-20T08:23:24.724Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Subdomain_Visit_Count.png" alt="Subdomain Visit Count"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subdomainVisits</span><span class="params">(self, cpdomains)</span>:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> cpdomain <span class="keyword">in</span> cpdomains:</div><div class="line">            data = cpdomain.split(<span class="string">' '</span>)</div><div class="line">            count = int(data[<span class="number">0</span>])</div><div class="line">            domain = data[<span class="number">1</span>]</div><div class="line">            self.subdomainStat(stat, domain, count)</div><div class="line"></div><div class="line">        result = []</div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat.items():</div><div class="line">            string = str(value) + <span class="string">' '</span> + key</div><div class="line">            result.append(string)</div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subdomainStat</span><span class="params">(self, stat, domain, count)</span>:</span></div><div class="line">        <span class="keyword">if</span> domain <span class="keyword">in</span> stat:</div><div class="line">            stat[domain] += count</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            stat[domain] = count</div><div class="line"></div><div class="line">        subdomain = domain.split(<span class="string">'.'</span>, <span class="number">1</span>)</div><div class="line">        <span class="keyword">if</span> len(subdomain) &gt; <span class="number">1</span>:</div><div class="line">            self.subdomainStat(stat, subdomain[<span class="number">1</span>], count)</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subdomainVisits</span><span class="params">(self, cpdomains)</span>:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> cpdomain <span class="keyword">in</span> cpdomains:</div><div class="line">            data = cpdomain.split(<span class="string">' '</span>)</div><div class="line">            count = int(data[<span class="number">0</span>])</div><div class="line">            domain = data[<span class="number">1</span>]</div><div class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">                <span class="keyword">if</span> domain <span class="keyword">in</span> stat:</div><div class="line">                    stat[domain] += count</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    stat[domain] = count</div><div class="line">                subdomain = domain.split(<span class="string">'.'</span>, <span class="number">1</span>)</div><div class="line">                <span class="keyword">if</span> len(subdomain) == <span class="number">1</span>:</div><div class="line">                    <span class="keyword">break</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    domain = subdomain[<span class="number">1</span>] </div><div class="line"></div><div class="line">        result = []</div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat.items():</div><div class="line">            string = str(value) + <span class="string">' '</span> + key</div><div class="line">            result.append(string)</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/subdomain-visit-count/" target="_blank" rel="external">https://leetcode.com/problems/subdomain-visit-count/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 811. Subdomain Visit Count
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 697. Degree of an Array</title>
    <link href="http://noahsnail.com/2021/02/19/2021-02-19-Leetcode-697-Degree-of-an-Array/"/>
    <id>http://noahsnail.com/2021/02/19/2021-02-19-Leetcode-697-Degree-of-an-Array/</id>
    <published>2021-02-19T08:30:21.183Z</published>
    <updated>2021-02-19T09:25:38.988Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Degree_of_an_Array.png" alt="Degree of an Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findShortestSubArray</span><span class="params">(self, nums)</span>:</span></div><div class="line">        stat = Counter(nums)</div><div class="line">        degree = <span class="number">0</span></div><div class="line">        result = len(nums)</div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat.items():</div><div class="line">            <span class="keyword">if</span> value &gt; degree:</div><div class="line">                degree = value</div><div class="line"></div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat.items():</div><div class="line">            <span class="keyword">if</span> value == degree:</div><div class="line">                left = <span class="number">0</span></div><div class="line">                right = len(nums) - <span class="number">1</span></div><div class="line">                <span class="keyword">while</span> nums[left] != key <span class="keyword">or</span> nums[right] != key:</div><div class="line">                    <span class="keyword">if</span> nums[left] != key:</div><div class="line">                        left += <span class="number">1</span></div><div class="line">                    <span class="keyword">if</span> nums[right] != key:</div><div class="line">                        right -= <span class="number">1</span></div><div class="line">                sub_length = right - left + <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> result &gt; sub_length:</div><div class="line">                    result = sub_length</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findShortestSubArray</span><span class="params">(self, nums)</span>:</span></div><div class="line">        stat = Counter(nums)</div><div class="line">        degree = <span class="number">0</span></div><div class="line">        result = len(nums)</div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat.items():</div><div class="line">            <span class="keyword">if</span> value &gt; degree:</div><div class="line">                degree = value</div><div class="line"></div><div class="line">        <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(nums):</div><div class="line">            <span class="keyword">if</span> value <span class="keyword">in</span> stat <span class="keyword">and</span> stat[value] == degree:</div><div class="line">                end = len(nums) - <span class="number">1</span></div><div class="line">                <span class="keyword">while</span> nums[end] != value:</div><div class="line">                    end -= <span class="number">1</span></div><div class="line">                sub_length = end - index + <span class="number">1</span></div><div class="line">                <span class="keyword">del</span> stat[value]</div><div class="line">                <span class="keyword">if</span> result &gt; sub_length:</div><div class="line">                    result = sub_length</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findShortestSubArray</span><span class="params">(self, nums)</span>:</span></div><div class="line">        degree = <span class="number">0</span></div><div class="line">        result = len(nums)</div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(nums):</div><div class="line">            <span class="keyword">if</span> value <span class="keyword">in</span> stat:</div><div class="line">                stat[value][<span class="string">'degree'</span>] += <span class="number">1</span></div><div class="line">                stat[value][<span class="string">'end'</span>] = index</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                stat[value] = &#123;<span class="string">'degree'</span>: <span class="number">1</span>, <span class="string">'start'</span>: index, <span class="string">'end'</span>: index&#125;</div><div class="line"></div><div class="line">            sub_length = stat[value][<span class="string">'end'</span>] - stat[value][<span class="string">'start'</span>] + <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> stat[value][<span class="string">'degree'</span>] &gt; degree:</div><div class="line">                degree = stat[value][<span class="string">'degree'</span>]</div><div class="line">                result = sub_length</div><div class="line">            <span class="keyword">if</span> stat[value][<span class="string">'degree'</span>] == degree <span class="keyword">and</span> sub_length &lt; result:</div><div class="line">                result = sub_length</div><div class="line"></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 4</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findShortestSubArray</span><span class="params">(self, nums)</span>:</span></div><div class="line">        degree = <span class="number">0</span></div><div class="line">        result = len(nums)</div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(nums):</div><div class="line">            <span class="keyword">if</span> value <span class="keyword">in</span> stat:</div><div class="line">                stat[value][<span class="string">'degree'</span>] += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                stat[value] = &#123;<span class="string">'degree'</span>: <span class="number">1</span>, <span class="string">'start'</span>: index&#125;</div><div class="line"></div><div class="line">            sub_length = index - stat[value][<span class="string">'start'</span>] + <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> stat[value][<span class="string">'degree'</span>] &gt; degree:</div><div class="line">                degree = stat[value][<span class="string">'degree'</span>]</div><div class="line">                result = sub_length</div><div class="line">            <span class="keyword">elif</span> stat[value][<span class="string">'degree'</span>] == degree <span class="keyword">and</span> sub_length &lt; result:</div><div class="line">                result = sub_length</div><div class="line"></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/degree-of-an-array/" target="_blank" rel="external">https://leetcode.com/problems/degree-of-an-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 697. Degree of an Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1413. Minimum Value to Get Positive Step by Step Sum</title>
    <link href="http://noahsnail.com/2021/02/18/2021-02-18-Leetcode-1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum/"/>
    <id>http://noahsnail.com/2021/02/18/2021-02-18-Leetcode-1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum/</id>
    <published>2021-02-18T08:53:10.797Z</published>
    <updated>2021-02-18T09:08:52.594Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Minimum_Value_to_Get_Positive_Step_by_Step_Sum.png" alt="Minimum Value to Get Positive Step by Step Sum"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minStartValue</span><span class="params">(self, nums)</span>:</span></div><div class="line">        min_value = nums[<span class="number">0</span>]</div><div class="line">        total = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</div><div class="line">            total += num</div><div class="line">            <span class="keyword">if</span> total &lt; min_value:</div><div class="line">                min_value = total</div><div class="line">        <span class="keyword">if</span> min_value &gt;= <span class="number">1</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span> - min_value</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minStartValue</span><span class="params">(self, nums)</span>:</span></div><div class="line">        min_value = <span class="number">0</span></div><div class="line">        total = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</div><div class="line">            total += num</div><div class="line">            <span class="keyword">if</span> total &lt; min_value:</div><div class="line">                min_value = total</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span> - min_value</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-value-to-get-positive-step-by-step-sum/" target="_blank" rel="external">https://leetcode.com/problems/minimum-value-to-get-positive-step-by-step-sum/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1413. Minimum Value to Get Positive Step by Step Sum
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1051. Height Checker</title>
    <link href="http://noahsnail.com/2021/02/18/2021-02-18-Leetcode-1051-Height-Checker/"/>
    <id>http://noahsnail.com/2021/02/18/2021-02-18-Leetcode-1051-Height-Checker/</id>
    <published>2021-02-18T08:21:52.856Z</published>
    <updated>2021-02-18T08:44:09.284Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Height_Checker.png" alt="Height Checker"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">heightChecker</span><span class="params">(self, heights)</span>:</span></div><div class="line">       count = <span class="number">0</span></div><div class="line">       result = sorted(heights)</div><div class="line">       <span class="keyword">for</span> i <span class="keyword">in</span> range(len(heights)):</div><div class="line">           <span class="keyword">if</span> heights[i] != result[i]:</div><div class="line">               count += <span class="number">1</span></div><div class="line">       <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/height-checker/" target="_blank" rel="external">https://leetcode.com/problems/height-checker/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1051. Height Checker
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
