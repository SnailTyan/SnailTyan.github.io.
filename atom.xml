<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SnailTyan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://noahsnail.com/"/>
  <updated>2021-03-01T02:59:36.996Z</updated>
  <id>http://noahsnail.com/</id>
  
  <author>
    <name>Tyan</name>
    <email>Tyan.Liu.Git@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Leetcode 336. Palindrome Pairs</title>
    <link href="http://noahsnail.com/2021/03/01/2021-03-01-Leetcode-336-Palindrome-Pairs/"/>
    <id>http://noahsnail.com/2021/03/01/2021-03-01-Leetcode-336-Palindrome-Pairs/</id>
    <published>2021-03-01T02:50:02.027Z</published>
    <updated>2021-03-01T02:59:36.996Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Palindrome_Pairs.png" alt="Palindrome Pairs"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>解析：Version 1简单，容易理解，但超时。Version 2是将字符串分为两部分，前半部分和后半部分，如果两部分有一部分是回文子串，则寻找另一部分的对应的回文字符串。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">palindromePairs</span><span class="params">(self, words)</span>:</span></div><div class="line">        result = []</div><div class="line">        length = len(words)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, length):</div><div class="line">                positive = words[i] + words[j]</div><div class="line">                reverse = words[j] + words[i]</div><div class="line">                <span class="keyword">if</span> self.checkPalindrome(positive):</div><div class="line">                    result.append([i, j])</div><div class="line">                <span class="keyword">if</span> self.checkPalindrome(reverse):</div><div class="line">                    result.append([j, i])</div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkPalindrome</span><span class="params">(self, word)</span>:</span></div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = len(word) - <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> i &lt; j:</div><div class="line">            <span class="keyword">if</span> word[i] != word[j]:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            i += <span class="number">1</span></div><div class="line">            j -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">palindromePairs</span><span class="params">(self, words)</span>:</span></div><div class="line">        result = []</div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> index, word <span class="keyword">in</span> enumerate(words):</div><div class="line">            stat[word] = index</div><div class="line"></div><div class="line">        <span class="keyword">for</span> index, word <span class="keyword">in</span> enumerate(words):</div><div class="line">            length = len(word)</div><div class="line">            <span class="keyword">if</span> length == <span class="number">1</span> <span class="keyword">and</span> <span class="string">''</span> <span class="keyword">in</span> stat:</div><div class="line">                result.append([index, stat[<span class="string">''</span>]])</div><div class="line">                result.append([stat[<span class="string">''</span>], index])</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(length + <span class="number">1</span>):</div><div class="line">                prefix = word[:i]</div><div class="line">                rest = word[i:]</div><div class="line">                reverse = rest[::<span class="number">-1</span>]</div><div class="line">                <span class="keyword">if</span> self.checkPalindrome(prefix):</div><div class="line">                    <span class="keyword">if</span> reverse <span class="keyword">in</span> stat <span class="keyword">and</span> index != stat[reverse]:</div><div class="line">                        res = [stat[reverse], index]</div><div class="line">                        <span class="keyword">if</span> res <span class="keyword">not</span> <span class="keyword">in</span> result:</div><div class="line">                            result.append(res)</div><div class="line"></div><div class="line">                suffix = word[i:]</div><div class="line">                rest = word[:i]</div><div class="line">                reverse = rest[::<span class="number">-1</span>]</div><div class="line">                <span class="keyword">if</span> self.checkPalindrome(suffix):</div><div class="line">                    </div><div class="line">                    <span class="keyword">if</span> reverse <span class="keyword">in</span> stat <span class="keyword">and</span> index != stat[reverse]:</div><div class="line">                        res = [index, stat[reverse]]</div><div class="line">                        <span class="keyword">if</span> res <span class="keyword">not</span> <span class="keyword">in</span> result:</div><div class="line">                            result.append(res)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkPalindrome</span><span class="params">(self, word)</span>:</span></div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = len(word) - <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> i &lt; j:</div><div class="line">            <span class="keyword">if</span> word[i] != word[j]:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            i += <span class="number">1</span></div><div class="line">            j -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/palindrome-pairs/" target="_blank" rel="external">https://leetcode.com/problems/palindrome-pairs/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 336. Palindrome Pairs
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 706. Design HashMap</title>
    <link href="http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-706-Design-HashMap/"/>
    <id>http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-706-Design-HashMap/</id>
    <published>2021-02-23T06:56:27.367Z</published>
    <updated>2021-02-26T03:10:17.582Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Design_HashMap.png" alt="Design HashMap"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashMap</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.maps = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">1000</span>)]</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span><span class="params">(self, key: int, value: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        self.remove(key)</div><div class="line">        self.maps[index].append([key, value])</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, key: int)</span> -&gt; int:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> self.maps[index]:</div><div class="line">            <span class="keyword">if</span> k == key:</div><div class="line">                <span class="keyword">return</span> v</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span></div><div class="line">        </div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> self.maps[index]:</div><div class="line">            <span class="keyword">if</span> k == key:</div><div class="line">                self.maps[index].remove([k, v])</div><div class="line">                <span class="keyword">break</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hash</span><span class="params">(self, key)</span>:</span></div><div class="line">        <span class="keyword">return</span> key % <span class="number">1000</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListNode</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, key, value)</span>:</span></div><div class="line">        self.key = key</div><div class="line">        self.value = value</div><div class="line">        self.next = <span class="keyword">None</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashMap</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.maps = [<span class="keyword">None</span>] * <span class="number">1000</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span><span class="params">(self, key: int, value: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line"></div><div class="line">        <span class="keyword">if</span> self.maps[index] <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            self.maps[index] = ListNode(key, value)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            current = self.maps[index]</div><div class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">                <span class="keyword">if</span> current.key == key:</div><div class="line">                    current.value = value</div><div class="line">                    <span class="keyword">break</span></div><div class="line">                <span class="keyword">elif</span> current.next <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">                    current.next = ListNode(key, value)</div><div class="line">                    <span class="keyword">break</span></div><div class="line">                current = current.next</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, key: int)</span> -&gt; int:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        current = self.maps[index]</div><div class="line">        <span class="keyword">while</span> current:</div><div class="line">            <span class="keyword">if</span> current.key == key:</div><div class="line">                <span class="keyword">return</span> current.value</div><div class="line">            current = current.next</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        current = self.maps[index]</div><div class="line">        <span class="keyword">if</span> current <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span> <span class="keyword">and</span> current.key == key:</div><div class="line">            self.maps[index] = current.next</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">while</span> current:</div><div class="line">                <span class="keyword">if</span> current.key == key:</div><div class="line">                    pre.next = current.next</div><div class="line">                    <span class="keyword">break</span></div><div class="line">                pre = current</div><div class="line">                current = current.next</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hash</span><span class="params">(self, key)</span>:</span></div><div class="line">        <span class="keyword">return</span> key % <span class="number">1000</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/design-hashmap/" target="_blank" rel="external">https://leetcode.com/problems/design-hashmap/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 706. Design HashMap
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 705. Design HashSet</title>
    <link href="http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-705-Design-HashSet/"/>
    <id>http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-705-Design-HashSet/</id>
    <published>2021-02-23T05:55:35.517Z</published>
    <updated>2021-02-23T06:54:47.124Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Design_HashSet.png" alt="Design HashSet"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.hashset  = []</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> self.hashset:</div><div class="line">            self.hashset.append(key)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        <span class="keyword">if</span> key <span class="keyword">in</span> self.hashset:</div><div class="line">            self.hashset.remove(key)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">contains</span><span class="params">(self, key: int)</span> -&gt; bool:</span></div><div class="line">        <span class="keyword">if</span> key <span class="keyword">in</span> self.hashset:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.hashset  = [<span class="keyword">False</span>] * <span class="number">1000001</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        self.hashset[key] = <span class="keyword">True</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        self.hashset[key] = <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">contains</span><span class="params">(self, key: int)</span> -&gt; bool:</span></div><div class="line">        <span class="keyword">return</span> self.hashset[key]</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.hashset  = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">1000</span>)] </div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> self.hashset[index]:</div><div class="line">            self.hashset[index].append(key)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span><span class="params">(self, key: int)</span> -&gt; <span class="keyword">None</span>:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        <span class="keyword">if</span> key <span class="keyword">in</span> self.hashset[index]:</div><div class="line">            self.hashset[index].remove(key)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">contains</span><span class="params">(self, key: int)</span> -&gt; bool:</span></div><div class="line">        index = self.hash(key)</div><div class="line">        <span class="keyword">return</span> key <span class="keyword">in</span> self.hashset[index]</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hash</span><span class="params">(self, key)</span>:</span></div><div class="line">        <span class="keyword">return</span> key % <span class="number">1000</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/design-hashset/" target="_blank" rel="external">https://leetcode.com/problems/design-hashset/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 705. Design HashSet
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 726. Number of Atoms</title>
    <link href="http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-726-Number-of-Atoms/"/>
    <id>http://noahsnail.com/2021/02/23/2021-02-23-Leetcode-726-Number-of-Atoms/</id>
    <published>2021-02-23T03:41:52.039Z</published>
    <updated>2021-02-23T05:54:27.192Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Number_of_Atoms.png" alt="Number of Atoms"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>解析：这道题还有优化的空间，这样写主要是逻辑清晰。1. 把元素(多个字母)、数字(多个数字字符)、左右括号拆分开；2. 计算元素的个数，如果元素后没有数字，则添加数字1作为元素个数；当碰到右括号时，查找其对应的左括号，并将其中的元素个数乘以括号后的数字，其后没数字，则默认乘以1；3. 统计元素个数，相同元素个数相加；4. 排序字典，按元素字母排序；5. 构造返回结果字符串。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countOfAtoms</span><span class="params">(self, formula)</span>:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        stack = []</div><div class="line">        parts = []</div><div class="line"></div><div class="line">        <span class="comment"># Split string by alpha, number, '(', ')'</span></div><div class="line">        <span class="keyword">for</span> index, ch <span class="keyword">in</span> enumerate(formula):</div><div class="line">            <span class="keyword">if</span> ch.isupper():</div><div class="line">                parts.append(ch)</div><div class="line">            <span class="keyword">elif</span> ch.islower():</div><div class="line">                parts[<span class="number">-1</span>] += ch</div><div class="line">            <span class="keyword">elif</span> ch.isdigit():</div><div class="line">                <span class="keyword">if</span> formula[index - <span class="number">1</span>].isdigit():</div><div class="line">                    parts[<span class="number">-1</span>] += ch</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    parts.append(ch)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                parts.append(ch)</div><div class="line"></div><div class="line">        <span class="comment"># Calculate the number of atom and remove '(', ')'</span></div><div class="line">        stack = []</div><div class="line">        <span class="keyword">for</span> index, part <span class="keyword">in</span> enumerate(parts):</div><div class="line">            <span class="keyword">if</span> part.isalpha():</div><div class="line">                <span class="keyword">if</span> index + <span class="number">1</span> == len(parts) <span class="keyword">or</span> <span class="keyword">not</span> parts[index + <span class="number">1</span>].isdigit():</div><div class="line">                    stack.append(part)</div><div class="line">                    stack.append(<span class="number">1</span>)</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    stack.append(part)</div><div class="line">            <span class="keyword">elif</span> part.isdigit() <span class="keyword">and</span> parts[index - <span class="number">1</span>] != <span class="string">')'</span>:</div><div class="line">                    stack.append(int(part))</div><div class="line">            <span class="keyword">elif</span> part == <span class="string">'('</span>:</div><div class="line">                stack.append(part)</div><div class="line">            <span class="keyword">elif</span> part == <span class="string">')'</span>:</div><div class="line">                <span class="keyword">if</span> index + <span class="number">1</span> &lt; len(parts) <span class="keyword">and</span> parts[index + <span class="number">1</span>].isdigit():</div><div class="line">                    multiplier = int(parts[index + <span class="number">1</span>])</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    multiplier = <span class="number">1</span></div><div class="line"></div><div class="line">                i = len(stack) - <span class="number">1</span></div><div class="line">                <span class="keyword">while</span> stack[i] != <span class="string">'('</span>:</div><div class="line">                    <span class="keyword">if</span> isinstance(stack[i], int):</div><div class="line">                        stack[i] = stack[i] * multiplier</div><div class="line">                    i -= <span class="number">1</span></div><div class="line">                stack.pop(i)</div><div class="line"></div><div class="line">        <span class="comment"># Stat the number of atoms</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(stack), <span class="number">2</span>):</div><div class="line">            <span class="keyword">if</span> stack[i] <span class="keyword">in</span> stat:</div><div class="line">                stat[stack[i]] += stack[i + <span class="number">1</span>]</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                stat[stack[i]] = stack[i + <span class="number">1</span>]</div><div class="line">        stat = sorted(stat.items(), key=<span class="keyword">lambda</span> item: item[<span class="number">0</span>])</div><div class="line">        result = <span class="string">''</span></div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat:</div><div class="line">            <span class="keyword">if</span> value &gt; <span class="number">1</span>:</div><div class="line">                result = result + key + str(value)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result = result + key</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/number-of-atoms/" target="_blank" rel="external">https://leetcode.com/problems/number-of-atoms/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 726. Number of Atoms
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 939. Minimum Area Rectangle</title>
    <link href="http://noahsnail.com/2021/02/20/2021-02-20-Leetcode-939-Minimum-Area-Rectangle/"/>
    <id>http://noahsnail.com/2021/02/20/2021-02-20-Leetcode-939-Minimum-Area-Rectangle/</id>
    <published>2021-02-20T08:24:36.640Z</published>
    <updated>2021-02-22T02:43:46.434Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Minimum_Area_Rectangle.png" alt="Minimum Area Rectangle"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minAreaRect</span><span class="params">(self, points)</span>:</span></div><div class="line">        result = <span class="number">0</span></div><div class="line">        stat = set(map(tuple, points))</div><div class="line"></div><div class="line">        <span class="keyword">for</span> x1, y1 <span class="keyword">in</span> points:</div><div class="line">            <span class="keyword">for</span> x2, y2 <span class="keyword">in</span> points:</div><div class="line">                <span class="keyword">if</span> x1 == x2 <span class="keyword">or</span> y1 == y2:</div><div class="line">                    <span class="keyword">continue</span></div><div class="line">                <span class="keyword">if</span> (x1, y2) <span class="keyword">in</span> stat <span class="keyword">and</span> (x2, y1) <span class="keyword">in</span> stat:</div><div class="line">                    area = abs(x2 - x1) * abs(y2 - y1)</div><div class="line">                    <span class="keyword">if</span> area &lt; result <span class="keyword">or</span> result == <span class="number">0</span>:</div><div class="line">                        result = area</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-area-rectangle/" target="_blank" rel="external">https://leetcode.com/problems/minimum-area-rectangle/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 939. Minimum Area Rectangle
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 811. Subdomain Visit Count</title>
    <link href="http://noahsnail.com/2021/02/20/2021-02-20-Leetcode-811-Subdomain-Visit-Count/"/>
    <id>http://noahsnail.com/2021/02/20/2021-02-20-Leetcode-811-Subdomain-Visit-Count/</id>
    <published>2021-02-20T03:42:48.128Z</published>
    <updated>2021-02-20T08:23:24.724Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Subdomain_Visit_Count.png" alt="Subdomain Visit Count"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subdomainVisits</span><span class="params">(self, cpdomains)</span>:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> cpdomain <span class="keyword">in</span> cpdomains:</div><div class="line">            data = cpdomain.split(<span class="string">' '</span>)</div><div class="line">            count = int(data[<span class="number">0</span>])</div><div class="line">            domain = data[<span class="number">1</span>]</div><div class="line">            self.subdomainStat(stat, domain, count)</div><div class="line"></div><div class="line">        result = []</div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat.items():</div><div class="line">            string = str(value) + <span class="string">' '</span> + key</div><div class="line">            result.append(string)</div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subdomainStat</span><span class="params">(self, stat, domain, count)</span>:</span></div><div class="line">        <span class="keyword">if</span> domain <span class="keyword">in</span> stat:</div><div class="line">            stat[domain] += count</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            stat[domain] = count</div><div class="line"></div><div class="line">        subdomain = domain.split(<span class="string">'.'</span>, <span class="number">1</span>)</div><div class="line">        <span class="keyword">if</span> len(subdomain) &gt; <span class="number">1</span>:</div><div class="line">            self.subdomainStat(stat, subdomain[<span class="number">1</span>], count)</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subdomainVisits</span><span class="params">(self, cpdomains)</span>:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> cpdomain <span class="keyword">in</span> cpdomains:</div><div class="line">            data = cpdomain.split(<span class="string">' '</span>)</div><div class="line">            count = int(data[<span class="number">0</span>])</div><div class="line">            domain = data[<span class="number">1</span>]</div><div class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">                <span class="keyword">if</span> domain <span class="keyword">in</span> stat:</div><div class="line">                    stat[domain] += count</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    stat[domain] = count</div><div class="line">                subdomain = domain.split(<span class="string">'.'</span>, <span class="number">1</span>)</div><div class="line">                <span class="keyword">if</span> len(subdomain) == <span class="number">1</span>:</div><div class="line">                    <span class="keyword">break</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    domain = subdomain[<span class="number">1</span>] </div><div class="line"></div><div class="line">        result = []</div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat.items():</div><div class="line">            string = str(value) + <span class="string">' '</span> + key</div><div class="line">            result.append(string)</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/subdomain-visit-count/" target="_blank" rel="external">https://leetcode.com/problems/subdomain-visit-count/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 811. Subdomain Visit Count
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 697. Degree of an Array</title>
    <link href="http://noahsnail.com/2021/02/19/2021-02-19-Leetcode-697-Degree-of-an-Array/"/>
    <id>http://noahsnail.com/2021/02/19/2021-02-19-Leetcode-697-Degree-of-an-Array/</id>
    <published>2021-02-19T08:30:21.183Z</published>
    <updated>2021-02-19T09:25:38.988Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Degree_of_an_Array.png" alt="Degree of an Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findShortestSubArray</span><span class="params">(self, nums)</span>:</span></div><div class="line">        stat = Counter(nums)</div><div class="line">        degree = <span class="number">0</span></div><div class="line">        result = len(nums)</div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat.items():</div><div class="line">            <span class="keyword">if</span> value &gt; degree:</div><div class="line">                degree = value</div><div class="line"></div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat.items():</div><div class="line">            <span class="keyword">if</span> value == degree:</div><div class="line">                left = <span class="number">0</span></div><div class="line">                right = len(nums) - <span class="number">1</span></div><div class="line">                <span class="keyword">while</span> nums[left] != key <span class="keyword">or</span> nums[right] != key:</div><div class="line">                    <span class="keyword">if</span> nums[left] != key:</div><div class="line">                        left += <span class="number">1</span></div><div class="line">                    <span class="keyword">if</span> nums[right] != key:</div><div class="line">                        right -= <span class="number">1</span></div><div class="line">                sub_length = right - left + <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> result &gt; sub_length:</div><div class="line">                    result = sub_length</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findShortestSubArray</span><span class="params">(self, nums)</span>:</span></div><div class="line">        stat = Counter(nums)</div><div class="line">        degree = <span class="number">0</span></div><div class="line">        result = len(nums)</div><div class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> stat.items():</div><div class="line">            <span class="keyword">if</span> value &gt; degree:</div><div class="line">                degree = value</div><div class="line"></div><div class="line">        <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(nums):</div><div class="line">            <span class="keyword">if</span> value <span class="keyword">in</span> stat <span class="keyword">and</span> stat[value] == degree:</div><div class="line">                end = len(nums) - <span class="number">1</span></div><div class="line">                <span class="keyword">while</span> nums[end] != value:</div><div class="line">                    end -= <span class="number">1</span></div><div class="line">                sub_length = end - index + <span class="number">1</span></div><div class="line">                <span class="keyword">del</span> stat[value]</div><div class="line">                <span class="keyword">if</span> result &gt; sub_length:</div><div class="line">                    result = sub_length</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findShortestSubArray</span><span class="params">(self, nums)</span>:</span></div><div class="line">        degree = <span class="number">0</span></div><div class="line">        result = len(nums)</div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(nums):</div><div class="line">            <span class="keyword">if</span> value <span class="keyword">in</span> stat:</div><div class="line">                stat[value][<span class="string">'degree'</span>] += <span class="number">1</span></div><div class="line">                stat[value][<span class="string">'end'</span>] = index</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                stat[value] = &#123;<span class="string">'degree'</span>: <span class="number">1</span>, <span class="string">'start'</span>: index, <span class="string">'end'</span>: index&#125;</div><div class="line"></div><div class="line">            sub_length = stat[value][<span class="string">'end'</span>] - stat[value][<span class="string">'start'</span>] + <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> stat[value][<span class="string">'degree'</span>] &gt; degree:</div><div class="line">                degree = stat[value][<span class="string">'degree'</span>]</div><div class="line">                result = sub_length</div><div class="line">            <span class="keyword">if</span> stat[value][<span class="string">'degree'</span>] == degree <span class="keyword">and</span> sub_length &lt; result:</div><div class="line">                result = sub_length</div><div class="line"></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 4</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findShortestSubArray</span><span class="params">(self, nums)</span>:</span></div><div class="line">        degree = <span class="number">0</span></div><div class="line">        result = len(nums)</div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> index, value <span class="keyword">in</span> enumerate(nums):</div><div class="line">            <span class="keyword">if</span> value <span class="keyword">in</span> stat:</div><div class="line">                stat[value][<span class="string">'degree'</span>] += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                stat[value] = &#123;<span class="string">'degree'</span>: <span class="number">1</span>, <span class="string">'start'</span>: index&#125;</div><div class="line"></div><div class="line">            sub_length = index - stat[value][<span class="string">'start'</span>] + <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> stat[value][<span class="string">'degree'</span>] &gt; degree:</div><div class="line">                degree = stat[value][<span class="string">'degree'</span>]</div><div class="line">                result = sub_length</div><div class="line">            <span class="keyword">elif</span> stat[value][<span class="string">'degree'</span>] == degree <span class="keyword">and</span> sub_length &lt; result:</div><div class="line">                result = sub_length</div><div class="line"></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/degree-of-an-array/" target="_blank" rel="external">https://leetcode.com/problems/degree-of-an-array/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 697. Degree of an Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1413. Minimum Value to Get Positive Step by Step Sum</title>
    <link href="http://noahsnail.com/2021/02/18/2021-02-18-Leetcode-1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum/"/>
    <id>http://noahsnail.com/2021/02/18/2021-02-18-Leetcode-1413-Minimum-Value-to-Get-Positive-Step-by-Step-Sum/</id>
    <published>2021-02-18T08:53:10.797Z</published>
    <updated>2021-02-18T09:08:52.594Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Minimum_Value_to_Get_Positive_Step_by_Step_Sum.png" alt="Minimum Value to Get Positive Step by Step Sum"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minStartValue</span><span class="params">(self, nums)</span>:</span></div><div class="line">        min_value = nums[<span class="number">0</span>]</div><div class="line">        total = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</div><div class="line">            total += num</div><div class="line">            <span class="keyword">if</span> total &lt; min_value:</div><div class="line">                min_value = total</div><div class="line">        <span class="keyword">if</span> min_value &gt;= <span class="number">1</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">1</span> - min_value</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minStartValue</span><span class="params">(self, nums)</span>:</span></div><div class="line">        min_value = <span class="number">0</span></div><div class="line">        total = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums:</div><div class="line">            total += num</div><div class="line">            <span class="keyword">if</span> total &lt; min_value:</div><div class="line">                min_value = total</div><div class="line">        <span class="keyword">return</span> <span class="number">1</span> - min_value</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/minimum-value-to-get-positive-step-by-step-sum/" target="_blank" rel="external">https://leetcode.com/problems/minimum-value-to-get-positive-step-by-step-sum/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1413. Minimum Value to Get Positive Step by Step Sum
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1051. Height Checker</title>
    <link href="http://noahsnail.com/2021/02/18/2021-02-18-Leetcode-1051-Height-Checker/"/>
    <id>http://noahsnail.com/2021/02/18/2021-02-18-Leetcode-1051-Height-Checker/</id>
    <published>2021-02-18T08:21:52.856Z</published>
    <updated>2021-02-18T08:44:09.284Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Height_Checker.png" alt="Height Checker"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">heightChecker</span><span class="params">(self, heights)</span>:</span></div><div class="line">       count = <span class="number">0</span></div><div class="line">       result = sorted(heights)</div><div class="line">       <span class="keyword">for</span> i <span class="keyword">in</span> range(len(heights)):</div><div class="line">           <span class="keyword">if</span> heights[i] != result[i]:</div><div class="line">               count += <span class="number">1</span></div><div class="line">       <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/height-checker/" target="_blank" rel="external">https://leetcode.com/problems/height-checker/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1051. Height Checker
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 930. Binary Subarrays With Sum</title>
    <link href="http://noahsnail.com/2021/02/10/2021-02-10-Leetcode-930-Binary-Subarrays-With-Sum/"/>
    <id>http://noahsnail.com/2021/02/10/2021-02-10-Leetcode-930-Binary-Subarrays-With-Sum/</id>
    <published>2021-02-10T02:38:19.692Z</published>
    <updated>2021-02-18T08:23:10.053Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Binary_Subarrays_With_Sum.png" alt="Binary Subarrays With Sum"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>解析：Version 1暴力法，超时。Version 2，统计前<code>i</code>个元素和<code>total</code>出现的次数，<code>S</code>出现的次数等于每一个<code>total - S</code>出现的次数的和。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numSubarraysWithSum</span><span class="params">(self, A, S)</span>:</span></div><div class="line">        n = len(A)</div><div class="line">        count = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            total = A[i]</div><div class="line">            <span class="keyword">if</span> total == S:</div><div class="line">                count += <span class="number">1</span></div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, n):</div><div class="line">                total += A[j]</div><div class="line">                <span class="keyword">if</span> total &gt; S:</div><div class="line">                    <span class="keyword">break</span></div><div class="line">                <span class="keyword">if</span> total == S:</div><div class="line">                    count += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> count</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numSubarraysWithSum</span><span class="params">(self, A, S)</span>:</span></div><div class="line">        n = len(A)</div><div class="line">        result = <span class="number">0</span></div><div class="line">        total = <span class="number">0</span></div><div class="line">        count = collections.Counter(&#123;<span class="number">0</span> : <span class="number">1</span>&#125;)</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</div><div class="line">            total += A[i]</div><div class="line">            result += count[total - S]</div><div class="line">            count[total] += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/binary-subarrays-with-sum/" target="_blank" rel="external">https://leetcode.com/problems/binary-subarrays-with-sum/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 930. Binary Subarrays With Sum
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1002. Find Common Characters</title>
    <link href="http://noahsnail.com/2021/02/09/2021-02-09-Leetcode-1002-Find-Common-Characters/"/>
    <id>http://noahsnail.com/2021/02/09/2021-02-09-Leetcode-1002-Find-Common-Characters/</id>
    <published>2021-02-09T09:29:03.261Z</published>
    <updated>2021-02-09T10:20:16.722Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Find_Common_Characters.png" alt="Find Common Characters"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">commonChars</span><span class="params">(self, A)</span>:</span></div><div class="line">        n = len(A)</div><div class="line">        <span class="keyword">if</span> n == <span class="number">1</span>:</div><div class="line">            <span class="keyword">return</span> []</div><div class="line">        result = sorted(A[<span class="number">0</span>])</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</div><div class="line">            result = common(result, A[i])</div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">common</span><span class="params">(A, B)</span>:</span></div><div class="line">    result = []</div><div class="line">    B = sorted(B)</div><div class="line">    m = len(A)</div><div class="line">    n = len(B)</div><div class="line">    i = <span class="number">0</span></div><div class="line">    j = <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> i &lt; m <span class="keyword">and</span> j &lt; n:</div><div class="line">        <span class="keyword">if</span> A[i] &lt; B[j]:</div><div class="line">            i += <span class="number">1</span></div><div class="line">        <span class="keyword">elif</span> A[i] &gt; B[j]:</div><div class="line">            j += <span class="number">1</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            result.append(A[i])</div><div class="line">            i += <span class="number">1</span></div><div class="line">            j += <span class="number">1</span></div><div class="line">    <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">commonChars</span><span class="params">(self, A)</span>:</span></div><div class="line">        n = len(A)</div><div class="line">        <span class="keyword">if</span> n == <span class="number">1</span>:</div><div class="line">            <span class="keyword">return</span> []</div><div class="line">        result = list(A[<span class="number">0</span>])</div><div class="line">        B = [list(A[i]) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n)]</div><div class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> A[<span class="number">0</span>]:</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(n - <span class="number">1</span>):</div><div class="line">                <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> B[i]:</div><div class="line">                    result.remove(ch)</div><div class="line">                    <span class="keyword">break</span></div><div class="line">                B[i].remove(ch)</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-common-characters/" target="_blank" rel="external">https://leetcode.com/problems/find-common-characters/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1002. Find Common Characters
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 350. Intersection of Two Arrays II</title>
    <link href="http://noahsnail.com/2021/02/09/2021-02-09-Leetcode-350-Intersection-of-Two-Arrays-II/"/>
    <id>http://noahsnail.com/2021/02/09/2021-02-09-Leetcode-350-Intersection-of-Two-Arrays-II/</id>
    <published>2021-02-09T05:33:22.936Z</published>
    <updated>2021-02-09T09:18:50.341Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Intersection_of_Two_Arrays_II.png" alt="Intersection of Two Arrays II"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intersect</span><span class="params">(self, nums1, nums2)</span>:</span></div><div class="line">        nums1.sort()</div><div class="line">        nums2.sort()</div><div class="line">        m = len(nums1)</div><div class="line">        n = len(nums2)</div><div class="line">        i = <span class="number">0</span></div><div class="line">        j = <span class="number">0</span></div><div class="line">        result = []</div><div class="line">        <span class="keyword">while</span> i &lt; m <span class="keyword">and</span> j &lt; n:</div><div class="line">            <span class="keyword">if</span> nums1[i] &lt; nums2[j]:</div><div class="line">                i += <span class="number">1</span></div><div class="line">            <span class="keyword">elif</span> nums1[i] &gt; nums2[j]:</div><div class="line">                j += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result.append(nums1[i])</div><div class="line">                i += <span class="number">1</span></div><div class="line">                j += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intersect</span><span class="params">(self, nums1, nums2)</span>:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        result = []</div><div class="line"></div><div class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums1:</div><div class="line">            stat[x] = stat.get(x, <span class="number">0</span>) + <span class="number">1</span></div><div class="line"></div><div class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums2:</div><div class="line">            <span class="keyword">if</span> x <span class="keyword">in</span> stat <span class="keyword">and</span> stat[x] &gt; <span class="number">0</span>:</div><div class="line">                result.append(x)</div><div class="line">                stat[x] -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intersect</span><span class="params">(self, nums1, nums2)</span>:</span></div><div class="line">        result = []</div><div class="line">        nums2.sort()</div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums1:</div><div class="line">            index = binarySearch(nums2, num)</div><div class="line">            <span class="keyword">if</span> index <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</div><div class="line">                result.append(num)</div><div class="line">                nums2.pop(index)</div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">binarySearch</span><span class="params">(nums, target)</span>:</span></div><div class="line">    left = <span class="number">0</span></div><div class="line">    right = len(nums) - <span class="number">1</span></div><div class="line">    <span class="keyword">while</span> left &lt;= right:</div><div class="line">        middle = (left + right) // <span class="number">2</span></div><div class="line">        <span class="keyword">if</span> nums[middle] == target:</div><div class="line">            <span class="keyword">return</span> middle</div><div class="line">        <span class="keyword">elif</span> nums[middle] &gt; target:</div><div class="line">            right = middle - <span class="number">1</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            left = middle + <span class="number">1</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">None</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/intersection-of-two-arrays-ii/" target="_blank" rel="external">https://leetcode.com/problems/intersection-of-two-arrays-ii/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 350. Intersection of Two Arrays II
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 349. Intersection of Two Arrays</title>
    <link href="http://noahsnail.com/2021/02/09/2021-02-09-Leetcode-349-Intersection-of-Two-Arrays/"/>
    <id>http://noahsnail.com/2021/02/09/2021-02-09-Leetcode-349-Intersection-of-Two-Arrays/</id>
    <published>2021-02-09T03:40:38.451Z</published>
    <updated>2021-02-09T03:51:09.174Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Intersection_of_Two_Arrays.png" alt="Intersection of Two Arrays"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intersection</span><span class="params">(self, nums1, nums2)</span>:</span></div><div class="line">        result = set()</div><div class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums1:</div><div class="line">            <span class="keyword">if</span> x <span class="keyword">in</span> nums2:</div><div class="line">                result.add(x)</div><div class="line">        <span class="keyword">return</span> list(result)</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intersection</span><span class="params">(self, nums1, nums2)</span>:</span></div><div class="line">        result = set()</div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums1:</div><div class="line">            stat[x] = x</div><div class="line"></div><div class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums2:</div><div class="line">            <span class="keyword">if</span> x <span class="keyword">in</span> stat:</div><div class="line">                result.add(x)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> list(result)</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intersection</span><span class="params">(self, nums1, nums2)</span>:</span></div><div class="line">        <span class="keyword">return</span> list(set(nums1) &amp; set(nums2))</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/intersection-of-two-arrays/" target="_blank" rel="external">https://leetcode.com/problems/intersection-of-two-arrays/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 349. Intersection of Two Arrays
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1481. Least Number of Unique Integers after K Removals</title>
    <link href="http://noahsnail.com/2021/02/09/2021-02-09-Leetcode-1481-Least-Number-of-Unique-Integers-after-K-Removals/"/>
    <id>http://noahsnail.com/2021/02/09/2021-02-09-Leetcode-1481-Least-Number-of-Unique-Integers-after-K-Removals/</id>
    <published>2021-02-09T01:34:26.955Z</published>
    <updated>2021-02-09T03:40:42.759Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Least_Number_of_Unique_Integers_after_K_Removals.png" alt="Least Number of Unique Integers after K Removals"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findLeastNumOfUniqueInts</span><span class="params">(self, arr, k)</span>:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> arr:</div><div class="line">            stat[num] = stat.get(num, <span class="number">0</span>) + <span class="number">1</span></div><div class="line">        result = sorted(stat.items(), key=<span class="keyword">lambda</span> item: item[<span class="number">1</span>])</div><div class="line">        <span class="keyword">while</span> k &gt; <span class="number">0</span>:</div><div class="line">            k = k - result[<span class="number">0</span>][<span class="number">1</span>]</div><div class="line">            <span class="keyword">if</span> k &gt;= <span class="number">0</span>:</div><div class="line">                result.pop(<span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> len(result)</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findLeastNumOfUniqueInts</span><span class="params">(self, arr, k)</span>:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> arr:</div><div class="line">            stat[num] = stat.get(num, <span class="number">0</span>) + <span class="number">1</span></div><div class="line">        result = sorted(stat.items(), key=<span class="keyword">lambda</span> item: item[<span class="number">1</span>])</div><div class="line">        index = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> k &gt; <span class="number">0</span>:</div><div class="line">            k = k - result[index][<span class="number">1</span>]</div><div class="line">            <span class="keyword">if</span> k &gt;= <span class="number">0</span>:</div><div class="line">                index += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> len(result) - index</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findLeastNumOfUniqueInts</span><span class="params">(self, arr, k)</span>:</span></div><div class="line">        stat = &#123;&#125;</div><div class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> arr:</div><div class="line">            stat[num] = stat.get(num, <span class="number">0</span>) + <span class="number">1</span></div><div class="line">        result = sorted(arr, key=<span class="keyword">lambda</span> num: (stat[num], num))</div><div class="line">        <span class="keyword">return</span> len(set(result[k:]))</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/least-number-of-unique-integers-after-k-removals/" target="_blank" rel="external">https://leetcode.com/problems/least-number-of-unique-integers-after-k-removals/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1481. Least Number of Unique Integers after K Removals
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 368. Largest Divisible Subset</title>
    <link href="http://noahsnail.com/2021/02/08/2021-02-08-Leetcode-368-Largest-Divisible-Subset/"/>
    <id>http://noahsnail.com/2021/02/08/2021-02-08-Leetcode-368-Largest-Divisible-Subset/</id>
    <published>2021-02-08T09:43:33.715Z</published>
    <updated>2021-02-08T09:52:21.905Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Largest_Divisible_Subset.png" alt="Largest Divisible Subset"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">largestDivisibleSubset</span><span class="params">(self, nums)</span>:</span></div><div class="line">        nums.sort()</div><div class="line">        length = len(nums)</div><div class="line">        dp = [<span class="number">1</span>] * length</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, length):</div><div class="line">                <span class="keyword">if</span> nums[j] % nums[i] == <span class="number">0</span>:</div><div class="line">                    dp[j] = max(dp[j], dp[i] + <span class="number">1</span>)</div><div class="line"></div><div class="line">        max_index = dp.index(max(dp))</div><div class="line">        result = [nums[max_index]]</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(max_index - <span class="number">1</span>, <span class="number">-1</span> , <span class="number">-1</span>):</div><div class="line">            <span class="keyword">if</span> nums[max_index] % nums[i] == <span class="number">0</span> <span class="keyword">and</span> dp[i] == dp[max_index] - len(result) <span class="keyword">and</span> result[<span class="number">-1</span>] % nums[i] == <span class="number">0</span>:</div><div class="line">                result.append(nums[i])</div><div class="line"></div><div class="line">        result.reverse()</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/largest-divisible-subset/" target="_blank" rel="external">https://leetcode.com/problems/largest-divisible-subset/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 368. Largest Divisible Subset
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 1232. Check If It Is a Straight Line</title>
    <link href="http://noahsnail.com/2021/02/08/2021-02-08-Leetcode-1232-Check-If-It-Is-a-Straight-Line/"/>
    <id>http://noahsnail.com/2021/02/08/2021-02-08-Leetcode-1232-Check-If-It-Is-a-Straight-Line/</id>
    <published>2021-02-08T07:04:31.946Z</published>
    <updated>2021-02-08T07:27:15.170Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Check_If_It_Is_a_Straight_Line.png" alt="Check If It Is a Straight Line"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>解析：直线的表示，可以用斜率式，也可以用两点式，Version 1是斜率式，Version 2是两点式。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkStraightLine</span><span class="params">(self, coordinates)</span>:</span></div><div class="line">        diff_x = coordinates[<span class="number">-1</span>][<span class="number">0</span>] - coordinates[<span class="number">0</span>][<span class="number">0</span>]</div><div class="line">        <span class="keyword">if</span> diff_x == <span class="number">0</span>:</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(coordinates)):</div><div class="line">                <span class="keyword">if</span> coordinates[i][<span class="number">0</span>] != coordinates[<span class="number">0</span>][<span class="number">0</span>]:</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line"></div><div class="line">        slope = (coordinates[<span class="number">-1</span>][<span class="number">1</span>] - coordinates[<span class="number">0</span>][<span class="number">1</span>]) / diff_x</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(coordinates) - <span class="number">1</span>):</div><div class="line">            point1 = coordinates[i]</div><div class="line">            point2 = coordinates[i + <span class="number">1</span>]</div><div class="line">            <span class="keyword">if</span> point2[<span class="number">0</span>] - point1[<span class="number">0</span>] == <span class="number">0</span>:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">            ratio = (point2[<span class="number">1</span>] - point1[<span class="number">1</span>]) / (point2[<span class="number">0</span>] - point1[<span class="number">0</span>])</div><div class="line">            <span class="keyword">if</span> slope != ratio:</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkStraightLine</span><span class="params">(self, coordinates)</span>:</span></div><div class="line">        x1 = coordinates[<span class="number">0</span>][<span class="number">0</span>]</div><div class="line">        y1 = coordinates[<span class="number">0</span>][<span class="number">0</span>]</div><div class="line">        x2 = coordinates[<span class="number">-1</span>][<span class="number">0</span>]</div><div class="line">        y2 = coordinates[<span class="number">-1</span>][<span class="number">0</span>]</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(coordinates) - <span class="number">1</span>):</div><div class="line">            x = coordinates[i][<span class="number">0</span>]</div><div class="line">            y = coordinates[i][<span class="number">1</span>]</div><div class="line">            <span class="keyword">if</span> (y - y1)(x2 - x1) != (x - x1)(y2 - y1):</div><div class="line">                <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">True</span></div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/check-if-it-is-a-straight-line/" target="_blank" rel="external">https://leetcode.com/problems/check-if-it-is-a-straight-line/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 1232. Check If It Is a Straight Line
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 942. DI String Match</title>
    <link href="http://noahsnail.com/2021/02/08/2021-02-08-Leetcode-942-DI-String-Match/"/>
    <id>http://noahsnail.com/2021/02/08/2021-02-08-Leetcode-942-DI-String-Match/</id>
    <published>2021-02-08T06:42:04.944Z</published>
    <updated>2021-02-08T06:45:04.696Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/DI_String_Match.png" alt="DI String Match"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">diStringMatch</span><span class="params">(self, S)</span>:</span></div><div class="line">        n = len(S)</div><div class="line">        left = <span class="number">0</span></div><div class="line">        right = n</div><div class="line">        result = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n + <span class="number">1</span>):</div><div class="line">            <span class="keyword">if</span> i == n <span class="keyword">or</span> S[i] == <span class="string">'I'</span>:</div><div class="line">                result.append(left)</div><div class="line">                left += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result.append(right)</div><div class="line">                right -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">diStringMatch</span><span class="params">(self, S)</span>:</span></div><div class="line">        left = <span class="number">0</span></div><div class="line">        right = len(S)</div><div class="line">        result = []</div><div class="line">        <span class="keyword">for</span> ch <span class="keyword">in</span> S:</div><div class="line">            <span class="keyword">if</span> ch == <span class="string">'I'</span>:</div><div class="line">                result.append(left)</div><div class="line">                left += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result.append(right)</div><div class="line">                right -= <span class="number">1</span></div><div class="line">        result.append(left)</div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/di-string-match/" target="_blank" rel="external">https://leetcode.com/problems/di-string-match/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 942. DI String Match
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 238. Product of Array Except Self</title>
    <link href="http://noahsnail.com/2021/02/07/2021-02-07-Leetcode-238-Product-of-Array-Except-Self/"/>
    <id>http://noahsnail.com/2021/02/07/2021-02-07-Leetcode-238-Product-of-Array-Except-Self/</id>
    <published>2021-02-07T06:41:30.408Z</published>
    <updated>2021-02-08T06:44:59.809Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Product_of_Array_Except_Self.png" alt="Product of Array Except Self"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>解析：可以使用两个数组<code>left, right</code>分别保存从左边到第i个元素的积以及从右边到第i个元素的积，则结果中<code>result[i]=left[i-1] * right[i+1]</code>，这种情况下的空间复杂度为<code>O(n)</code>。另一种方式是，计算左边元素积的同时更新结果数组，计算右边积的同时也更新结果数组，这种情况下的空间复杂度为<code>O(1)</code>。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">productExceptSelf</span><span class="params">(self, nums)</span>:</span></div><div class="line">        length = len(nums)</div><div class="line">        result = [<span class="number">1</span>] * length</div><div class="line">        left = [<span class="number">1</span>] * length</div><div class="line">        right = [<span class="number">1</span>] * length</div><div class="line">        left[<span class="number">0</span>] = nums[<span class="number">0</span>]</div><div class="line">        right[<span class="number">-1</span>] = nums[<span class="number">-1</span>]</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            <span class="keyword">if</span> i &gt; <span class="number">0</span>:</div><div class="line">                left[i] = left[i - <span class="number">1</span>] * nums[i]</div><div class="line">            <span class="keyword">if</span> i &lt; length - <span class="number">1</span>:</div><div class="line">                right[-i - <span class="number">2</span>] = nums[-i - <span class="number">2</span>] * right[-i - <span class="number">1</span>]</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            <span class="keyword">if</span> i == <span class="number">0</span>:</div><div class="line">                result[i] = right[i + <span class="number">1</span>]</div><div class="line">            <span class="keyword">elif</span> i == length - <span class="number">1</span>:</div><div class="line">                result[i] = left[i - <span class="number">1</span>]</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result[i] = left[i - <span class="number">1</span>] * right[i + <span class="number">1</span>]</div><div class="line"></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">productExceptSelf</span><span class="params">(self, nums)</span>:</span></div><div class="line">        length = len(nums)</div><div class="line">        result = [<span class="number">1</span>] * length</div><div class="line">        left = <span class="number">1</span></div><div class="line">        right = <span class="number">1</span></div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length - <span class="number">1</span>):</div><div class="line">            left *= nums[i]</div><div class="line">            result[i + <span class="number">1</span>] = result[i + <span class="number">1</span>] * left</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length - <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>):</div><div class="line">            right *= nums[i]</div><div class="line">            result[i - <span class="number">1</span>] = result[i - <span class="number">1</span>] * right</div><div class="line"></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/product-of-array-except-self/" target="_blank" rel="external">https://leetcode.com/problems/product-of-array-except-self/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 238. Product of Array Except Self
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 42. Trapping Rain Water</title>
    <link href="http://noahsnail.com/2021/02/07/2021-02-07-Leetcode-42-Trapping-Rain-Water/"/>
    <id>http://noahsnail.com/2021/02/07/2021-02-07-Leetcode-42-Trapping-Rain-Water/</id>
    <published>2021-02-07T02:39:28.004Z</published>
    <updated>2021-02-07T06:37:22.452Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Trapping_Rain_Water.png" alt="Trapping Rain Water"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><p>解析：总的留存的雨水等于每个柱子上留存的雨水，而每个柱子上留存的雨水等于其左边最高柱子与右边最高柱子中较矮柱子的高度减去其高度。Version 1超时，Version 2是以空间换时间，Version 3是对Version 2的进一步优化。</p>
<ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trap</span><span class="params">(self, height)</span>:</span></div><div class="line">        length = len(height)</div><div class="line">        evalation_map = [<span class="number">0</span>] * length</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            self.trap_rain(evalation_map, i, height)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> sum(evalation_map)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trap_rain</span><span class="params">(self, evalation_map, index, height)</span>:</span></div><div class="line">        left = index</div><div class="line">        right = index</div><div class="line"></div><div class="line">        i = index</div><div class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span>:</div><div class="line">            <span class="keyword">if</span> height[i] &gt; height[left]:</div><div class="line">                left = i</div><div class="line">            i -= <span class="number">1</span></div><div class="line"></div><div class="line">        <span class="keyword">if</span> left == index:</div><div class="line">            <span class="keyword">return</span></div><div class="line">        i = index</div><div class="line">        <span class="keyword">while</span> i &lt;= len(height) - <span class="number">1</span>:</div><div class="line">            <span class="keyword">if</span> height[i] &gt; height[right]:</div><div class="line">                right = i</div><div class="line">            i += <span class="number">1</span></div><div class="line"></div><div class="line">        evalation_map[index] = min(height[left], height[right]) - height[index]</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trap</span><span class="params">(self, height)</span>:</span></div><div class="line">        length = len(height)</div><div class="line">        evalation_map = [<span class="number">0</span>] * length</div><div class="line"></div><div class="line">        left = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(length)]</div><div class="line">        right = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(length)]</div><div class="line"></div><div class="line">        max_index = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            <span class="keyword">if</span> height[i] &gt;= height[max_index]:</div><div class="line">                max_index = i</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                left[i] = max_index</div><div class="line"></div><div class="line">        max_index = length - <span class="number">1</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length - <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</div><div class="line">            <span class="keyword">if</span> height[i] &gt;= height[max_index]:</div><div class="line">                max_index = i</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                right[i] = max_index</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">            evalation_map[i] = min(height[left[i]], height[right[i]]) - height[i]</div><div class="line"></div><div class="line">        <span class="keyword">return</span> sum(evalation_map)</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">trap</span><span class="params">(self, height)</span>:</span></div><div class="line">        left = <span class="number">0</span></div><div class="line">        right = len(height) - <span class="number">1</span></div><div class="line">        result = <span class="number">0</span></div><div class="line">        max_left_index = <span class="number">0</span></div><div class="line">        max_right_index = len(height) - <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> left &lt; right:</div><div class="line">            <span class="keyword">if</span> height[left] &lt; height[right]:</div><div class="line">                <span class="keyword">if</span> height[left] &gt;= height[max_left_index]:</div><div class="line">                    max_left_index = left</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    result = result + height[max_left_index] - height[left]</div><div class="line">                left += <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">if</span> height[right] &gt;= height[max_right_index]:</div><div class="line">                    max_right_index = right</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    result = result + height[max_right_index] - height[right]</div><div class="line">                right -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> result</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/trapping-rain-water/" target="_blank" rel="external">https://leetcode.com/problems/trapping-rain-water/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 42. Trapping Rain Water
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 658. Find K Closest Elements</title>
    <link href="http://noahsnail.com/2021/02/05/2021-02-05-Leetcode-658-Find-K-Closest-Elements/"/>
    <id>http://noahsnail.com/2021/02/05/2021-02-05-Leetcode-658-Find-K-Closest-Elements/</id>
    <published>2021-02-05T10:10:19.333Z</published>
    <updated>2021-02-05T10:16:38.484Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="http://noahsnail.com/images/leetcode/Find_K_Closest_Elements.png" alt="Find K Closest Elements"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findClosestElements</span><span class="params">(self, arr, k, x)</span>:</span></div><div class="line">        result = []</div><div class="line">        index = self.binarySearch(arr, x)</div><div class="line">        left = index</div><div class="line">        right = index + <span class="number">1</span></div><div class="line">        length = len(arr)</div><div class="line">        <span class="keyword">while</span> k:</div><div class="line">            <span class="keyword">if</span> left &lt; <span class="number">0</span>:</div><div class="line">                result = result + [arr[right]]</div><div class="line">                right += <span class="number">1</span></div><div class="line">            <span class="keyword">elif</span> right &gt;= length:</div><div class="line">                result = [arr[left]] + result</div><div class="line">                left -= <span class="number">1</span></div><div class="line">            <span class="keyword">elif</span> x - arr[left] &lt;= arr[right] - x:</div><div class="line">                result = [arr[left]] + result</div><div class="line">                left -= <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                result = result + [arr[right]]</div><div class="line">                right += <span class="number">1</span></div><div class="line">            k -= <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">binarySearch</span><span class="params">(self, arr, x)</span>:</span></div><div class="line">        left = <span class="number">0</span></div><div class="line">        right = len(arr) - <span class="number">1</span></div><div class="line">        index = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> left &lt;= right:</div><div class="line">            middle = (left + right) // <span class="number">2</span></div><div class="line">            <span class="keyword">if</span> arr[middle] &lt; x:</div><div class="line">                index = left</div><div class="line">                left += <span class="number">1</span></div><div class="line">            <span class="keyword">elif</span> arr[middle] &gt; x:</div><div class="line">                right -=<span class="number">1</span></div><div class="line">                index = right</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                <span class="keyword">return</span> middle</div><div class="line">        <span class="keyword">return</span> index</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findClosestElements</span><span class="params">(self, arr, k, x)</span>:</span></div><div class="line">        left = <span class="number">0</span></div><div class="line">        right = len(arr) - k</div><div class="line">        <span class="keyword">while</span> left &lt; right:</div><div class="line">            middle = (left + right) // <span class="number">2</span></div><div class="line">            <span class="keyword">if</span> x - arr[middle] &gt;  arr[middle + k] - x:</div><div class="line">                left = middle + <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                right = middle</div><div class="line">        <span class="keyword">return</span> arr[left:left+k]</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/find-k-closest-elements/" target="_blank" rel="external">https://leetcode.com/problems/find-k-closest-elements/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 658. Find K Closest Elements
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
