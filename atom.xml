<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SnailTyan</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://noahsnail.com/"/>
  <updated>2019-05-09T07:18:09.000Z</updated>
  <id>http://noahsnail.com/</id>
  
  <author>
    <name>Tyan</name>
    <email>Tyan.Liu.Git@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux登录信息查询</title>
    <link href="http://noahsnail.com/2019/05/09/2019-05-09-Linux%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2/"/>
    <id>http://noahsnail.com/2019/05/09/2019-05-09-Linux登录信息查询/</id>
    <published>2019-05-09T03:34:26.000Z</published>
    <updated>2019-05-09T07:18:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Linux登录日志的存储"><a href="#1-Linux登录日志的存储" class="headerlink" title="1. Linux登录日志的存储"></a>1. Linux登录日志的存储</h2><p>在Linux系统中，登录日志主要存储在三个文件中，<code>/var/log/wtmp</code>，<code>/var/run/utmp</code>，<code>/var/log/lastlog</code>。常用的查询命令有<code>w</code>，<code>who</code>，<code>last</code>，<code>users</code>，<code>lastlog</code>等。</p>
<h2 id="2-w命令"><a href="#2-w命令" class="headerlink" title="2. w命令"></a>2. w命令</h2><ul>
<li><code>w</code>命令可用于显示当前登录系统的用户信息。</li>
<li>执行这项指令可查询目前登录系统的用户有哪些人，以及正在执行的程序。</li>
<li>单独执行<code>w</code>指令会显示所有的用户，也可以指定用户名称，仅显示某位用户的相关信息。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">root@0b6987cc587f /workspace $ w</div><div class="line">19:30  up 48 days,  3:05, 2 users, load averages: 2.11 2.11 2.14</div><div class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</div><div class="line">root     pts/2    192.168.0.1      Wed14    0.00s  0.08s  0.00s w</div><div class="line">root     pts/16   192.168.0.1      Wed11    5:20   0.08s  0.08s -bash</div></pre></td></tr></table></figure>
<p><code>w</code>命令显示的对应信息如下：</p>
<p>当前时间，系统启动到现在的时间，登录用户的数目，系统在最近1秒、5秒和15秒的平均负载。</p>
<p>USER: 登录帐号<br>TTY : 终端名称<br>FROM: 远程主机名<br>LOGIN@: 登录时间<br>IDLE: 空闲时间<br>JCPU: 该TTY终端连接的所有进程的占用时间<br>PCPU: 当前进程(即w项中显示的)的占用时间<br>WHAT: 当前正在运行进程的命令行</p>
<h2 id="3-who命令"><a href="#3-who命令" class="headerlink" title="3. who命令"></a>3. who命令</h2><p><code>who</code>命令用于显示系统中有哪些登录用户。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@0b6987cc587f /workspace $ who</div><div class="line">root   pts/2        2019-05-08 19:14 (192.168.0.1)</div><div class="line">root   pts/16       2019-05-08 18:39 (192.168.0.1)</div></pre></td></tr></table></figure>
<p><code>who</code>命令显示的对应信息如下：</p>
<p>登录帐号，终端名称，日期和时间，用户登录IP地址。</p>
<p><code>who am i</code>用来查看当前登陆者的信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@0b6987cc587f /workspace $ who am i</div><div class="line">root   pts/2        2019-05-08 19:14 (192.168.0.1)</div></pre></td></tr></table></figure>
<h2 id="4-last命令"><a href="#4-last命令" class="headerlink" title="4. last命令"></a>4. last命令</h2><p><code>last</code>命令用于显示用户最近登录信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">root@0b6987cc587f /workspace $ last -n 3</div><div class="line">root   pts/21       192.168.0.1    Thu May  9 12:01 - 19:00  (00:00)</div><div class="line">root   pts/6        192.168.0.1    Wed May  8 18:30   still logged in</div><div class="line">root   pts/2        192.168.0.1    Wed May  8 18:14   still logged in</div><div class="line"></div><div class="line">wtmp begins Sun Dec 30 19:10:00 2018</div></pre></td></tr></table></figure>
<p><code>last</code>命令显示的对应信息如下：</p>
<p>用户名称，终端名称，远程主机名，日志活动发生时间，括号中的数字表示连接持续了多少小时和分钟。</p>
<h2 id="5-users命令"><a href="#5-users命令" class="headerlink" title="5. users命令"></a>5. users命令</h2><p><code>users</code>命令用于显示当前登录系统的所有用户列表。每个用户名对应一个登录会话。如果一个用户有不止一个登录会话，则用户名将显示相同的次数。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@0b6987cc587f /workspace $ users</div><div class="line">root root</div></pre></td></tr></table></figure>
<h2 id="6-lastlog命令"><a href="#6-lastlog命令" class="headerlink" title="6. lastlog命令"></a>6. lastlog命令</h2><p><code>lastlog</code>命令用于显示系统中所有用户最近一次的登录信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">root@0b6987cc587f /workspace $ lastlog</div><div class="line">Username         Port     From             Latest</div><div class="line">root             pts/6    192.168.0.1      Sun Apr 28 18:38:20 +0800 2019</div><div class="line">daemon                                     **Never logged in**</div><div class="line">bin                                        **Never logged in**</div><div class="line">sys                                        **Never logged in**</div><div class="line">sync                                       **Never logged in**</div><div class="line">games                                      **Never logged in**</div><div class="line">man                                        **Never logged in**</div><div class="line">lp                                         **Never logged in**</div><div class="line">mail                                       **Never logged in**</div><div class="line">news                                       **Never logged in**</div><div class="line">uucp                                       **Never logged in**</div><div class="line">proxy                                      **Never logged in**</div><div class="line">www-data                                   **Never logged in**</div><div class="line">backup                                     **Never logged in**</div><div class="line">list                                       **Never logged in**</div><div class="line">irc                                        **Never logged in**</div><div class="line">gnats                                      **Never logged in**</div><div class="line">nobody                                     **Never logged in**</div><div class="line">systemd-timesync                           **Never logged in**</div><div class="line">systemd-network                            **Never logged in**</div><div class="line">systemd-resolve                            **Never logged in**</div><div class="line">systemd-bus-proxy                           **Never logged in**</div><div class="line">_apt                                       **Never logged in**</div><div class="line">sshd                                       **Never logged in**</div></pre></td></tr></table></figure>
<h2 id="7-ac命令"><a href="#7-ac命令" class="headerlink" title="7. ac命令"></a>7. ac命令</h2><p><code>ac</code>命令计算所有用户总的连接时间，默认单位是小时，基于<code>/var/log/wtmp</code>文件统计。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">root@0b6987cc587f /workspace $ ac</div><div class="line">total     4595.16</div></pre></td></tr></table></figure>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="http://www.runoob.com/linux/linux-comm-w.html" target="_blank" rel="external">http://www.runoob.com/linux/linux-comm-w.html</a></li>
<li><a href="http://www.runoob.com/linux/linux-comm-who.html" target="_blank" rel="external">http://www.runoob.com/linux/linux-comm-who.html</a></li>
<li><a href="https://linux.cn/article-2437-1.html" target="_blank" rel="external">https://linux.cn/article-2437-1.html</a></li>
<li><a href="http://www.runoob.com/linux/linux-comm-last.html" target="_blank" rel="external">http://www.runoob.com/linux/linux-comm-last.html</a></li>
<li><a href="http://man.linuxde.net/users" target="_blank" rel="external">http://man.linuxde.net/users</a></li>
<li><a href="http://man.linuxde.net/lastlog" target="_blank" rel="external">http://man.linuxde.net/lastlog</a></li>
<li><a href="https://cnbin.github.io/blog/2015/06/26/linux-ac-ming-ling/" target="_blank" rel="external">https://cnbin.github.io/blog/2015/06/26/linux-ac-ming-ling/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Linux登录信息查询
    
    </summary>
    
      <category term="Linux" scheme="http://noahsnail.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://noahsnail.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 139. Word Break</title>
    <link href="http://noahsnail.com/2019/05/06/2019-05-06-Leetcode-139--Word-Break/"/>
    <id>http://noahsnail.com/2019/05/06/2019-05-06-Leetcode-139--Word-Break/</id>
    <published>2019-05-06T03:15:37.000Z</published>
    <updated>2019-05-13T07:00:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://i.loli.net/2019/05/06/5ccfa5fc5a3e8.png" alt="Word Break"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">wordBreak</span><span class="params">(<span class="built_in">string</span> s, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; wordDict)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(s.size() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; flags(s.size(), <span class="number">-1</span>);</div><div class="line">        <span class="built_in">unordered_set</span>&lt;<span class="built_in">string</span>&gt; dict(wordDict.begin(), wordDict.end());</div><div class="line">        <span class="keyword">return</span> split(s, dict, flags, <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">split</span><span class="params">(<span class="built_in">string</span>&amp; s, <span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt;&amp; dict, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; flags, <span class="keyword">int</span> start)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(start == s.size()) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(flags[start] != <span class="number">-1</span>) &#123;</div><div class="line">            <span class="keyword">return</span> flags[start];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = start + <span class="number">1</span>; i &lt;= s.size(); i++) &#123;</div><div class="line">            <span class="built_in">string</span> temp = s.substr(start, i - start);</div><div class="line">            <span class="keyword">if</span>(dict.find(temp) != dict.end() &amp;&amp; split(s, dict, flags, i)) &#123;</div><div class="line">                flags[start] = <span class="number">1</span>;</div><div class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        flags[start] = <span class="number">0</span>;</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">wordBreak</span><span class="params">(<span class="built_in">string</span> s, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; wordDict)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(s.size() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt; dict(wordDict.begin(), wordDict.end());</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; flag(s.size() + <span class="number">1</span>, <span class="literal">false</span>);</div><div class="line">        flag[<span class="number">0</span>] = <span class="literal">true</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= s.size(); i++) &#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</div><div class="line">                <span class="keyword">if</span>(flag[j] &amp;&amp; dict.find(s.substr(j, i - j)) != dict.end()) &#123;</div><div class="line">                    flag[i] = <span class="literal">true</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> flag[s.size()];</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>Version 3</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">wordBreak</span><span class="params">(<span class="built_in">string</span> s, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; wordDict)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(s.size() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt; dict(wordDict.begin(), wordDict.end());</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; flag(s.size() + <span class="number">1</span>, <span class="literal">false</span>);</div><div class="line">        flag[<span class="number">0</span>] = <span class="literal">true</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= s.size(); i++) &#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) &#123;</div><div class="line">                <span class="keyword">if</span>(flag[j] &amp;&amp; dict.find(s.substr(j, i - j)) != dict.end()) &#123;</div><div class="line">                    flag[i] = <span class="literal">true</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> flag[s.size()];</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/word-break/" target="_blank" rel="external">https://leetcode.com/problems/word-break/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 139. Word Break
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Python中list的切片操作</title>
    <link href="http://noahsnail.com/2019/04/29/2019-04-29-Python%E4%B8%ADlist%E7%9A%84%E5%88%87%E7%89%87%E6%93%8D%E4%BD%9C/"/>
    <id>http://noahsnail.com/2019/04/29/2019-04-29-Python中list的切片操作/</id>
    <published>2019-04-29T06:02:46.000Z</published>
    <updated>2019-04-29T06:52:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-list的切片操作"><a href="#1-list的切片操作" class="headerlink" title="1. list的切片操作"></a>1. list的切片操作</h2><p>Python中可以对list使用索引来进行切片操作，其语法(Python3)如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">a[:]           # a copy of the whole array</div><div class="line">a[start:]      # items start through the rest of the array</div><div class="line">a[:stop]       # items from the beginning through stop-1</div><div class="line">a[start:stop]  # items start through stop-1</div><div class="line"></div><div class="line">a[start:stop:step] # start through not past stop, by step</div><div class="line"></div><div class="line">a[-1]    # last item in the array</div><div class="line">a[-2:]   # last two items in the array</div><div class="line">a[:-2]   # everything except the last two items</div><div class="line"></div><div class="line"></div><div class="line">a[::-1]    # all items in the array, reversed</div><div class="line">a[1::-1]   # the first two items, reversed</div><div class="line">a[:-3:-1]  # the last two items, reversed</div><div class="line">a[-3::-1]  # everything except the last two items, reversed</div></pre></td></tr></table></figure>
<p>测试结果：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 从0开始索引列表，索引值为整数</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = list(range(<span class="number">10</span>))  <span class="comment"># 定义列表a</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a</div><div class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[:]  <span class="comment"># 复制列表</span></div><div class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>:]  <span class="comment"># 从索引为0的列表元素开始迭代列表至列表结束</span></div><div class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">1</span>:]  <span class="comment"># 从索引为1的列表元素开始迭代列表至列表结束</span></div><div class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[:<span class="number">9</span>]  <span class="comment"># 从索引为0的列表元素开始迭代列表至索引为8的列表元素，不包含索引为9的列表元素</span></div><div class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">3</span>:<span class="number">5</span>] <span class="comment"># 从索引为3的列表元素开始迭代列表至索引为4的列表元素，不包含索引为5的列表元素</span></div><div class="line">[<span class="number">3</span>, <span class="number">4</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[::<span class="number">1</span>] <span class="comment"># 从索引为0的列表元素开始索引列表，每次迭代索引值加1，直至列表结束</span></div><div class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[::<span class="number">2</span>] <span class="comment"># 从索引为0的列表元素开始索引列表，每次迭代索引值加2，直至列表结束</span></div><div class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">3</span>:<span class="number">9</span>:<span class="number">2</span>] <span class="comment"># 从索引为3的列表元素开始索引列表，每次迭代索引值加2，直至索引为8的列表元素，不包含索引为9的列表元素</span></div><div class="line">[<span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>]</div><div class="line"></div><div class="line"><span class="comment"># 当索引值为负数时</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">-1</span>] <span class="comment"># 列表的最后一个元素</span></div><div class="line"><span class="number">9</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">-2</span>:] <span class="comment"># 从列表的倒数第二个元素直至列表结束，即从索引值为-2的元素直至列表结束</span></div><div class="line">[<span class="number">8</span>, <span class="number">9</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[:<span class="number">-1</span>] <span class="comment"># 从列表的第一个元素直至列表的倒数第二个元素结束，不包含最后一个列表元素</span></div><div class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[:<span class="number">-2</span>] <span class="comment"># 从列表的第一个元素直至列表的倒数第三个元素结束，不包含最后两个个列表元素</span></div><div class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 当step为负值时，表示逆向索引列表</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[::<span class="number">-1</span>] <span class="comment"># 反转列表，从列表最后一个元素到列表的第一个元素</span></div><div class="line">[<span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">1</span>::<span class="number">-1</span>] <span class="comment"># 从索引值为1的列表元素开始，逆向索引直列表开头</span></div><div class="line">[<span class="number">1</span>, <span class="number">0</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">-3</span>::<span class="number">-1</span>] <span class="comment"># 从索引值为-3的列表元素开始，逆向索引直列表开头</span></div><div class="line">[<span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a[:<span class="number">-3</span>:<span class="number">-1</span>] <span class="comment"># 从索引值为-1，逆向索引直索引为-2的元素结束，不包含索引为-3的元素</span></div><div class="line">[<span class="number">9</span>, <span class="number">8</span>]</div></pre></td></tr></table></figure>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://stackoverflow.com/questions/509211/understanding-slice-notation" target="_blank" rel="external">https://stackoverflow.com/questions/509211/understanding-slice-notation</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Python中list的切片操作
    
    </summary>
    
      <category term="Python" scheme="http://noahsnail.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://noahsnail.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>理解PyTorch的contiguous()</title>
    <link href="http://noahsnail.com/2019/04/29/2019-04-29-%E7%90%86%E8%A7%A3PyTorch%E7%9A%84contiguous()/"/>
    <id>http://noahsnail.com/2019/04/29/2019-04-29-理解PyTorch的contiguous()/</id>
    <published>2019-04-29T02:33:32.000Z</published>
    <updated>2019-04-29T02:49:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; [简书](<a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">http://www.jianshu.com/users/7731e83f3a4e/latest_articles</a></p>
<h2 id="1-PyTorch中的Tensor操作"><a href="#1-PyTorch中的Tensor操作" class="headerlink" title="1. PyTorch中的Tensor操作"></a>1. PyTorch中的Tensor操作</h2><p>在PyTorch中，有一些对Tensor的操作不会真正改变Tensor的内容，改变的仅仅是Tensor中字节位置的索引。这些操作有：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">narrow(), view(), expand(), transpose()</div></pre></td></tr></table></figure>
<p>例如执行<code>view</code>操作之后，不会开辟新的内存空间来存放处理之后的数据，实际上新数据与原始数据共享同一块内存。</p>
<p>而在调用<code>contiguous()</code>之后，PyTorch会开辟一块新的内存空间存放变换之后的数据，并会真正改变Tensor的内容，按照变换之后的顺序存放数据。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://stackoverflow.com/questions/48915810/pytorch-contiguous" target="_blank" rel="external">https://stackoverflow.com/questions/48915810/pytorch-contiguous</a></li>
<li><a href="https://www.zhihu.com/question/60321866" target="_blank" rel="external">https://www.zhihu.com/question/60321866</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      理解PyTorch的contiguous()
    
    </summary>
    
      <category term="PyTorch" scheme="http://noahsnail.com/categories/PyTorch/"/>
    
    
      <category term="PyTorch" scheme="http://noahsnail.com/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>理解Python中super</title>
    <link href="http://noahsnail.com/2019/03/19/2019-03-19-%E7%90%86%E8%A7%A3Python%E4%B8%ADsuper/"/>
    <id>http://noahsnail.com/2019/03/19/2019-03-19-理解Python中super/</id>
    <published>2019-03-19T07:22:58.000Z</published>
    <updated>2019-03-20T05:22:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-单继承"><a href="#1-单继承" class="headerlink" title="1. 单继承"></a>1. 单继承</h2><p>在单继承时，<code>super().__init__()</code>与<code>Base.__init__()</code>是一样的。super()避免了基类的显式调用。代码如下：</p>
<ul>
<li>super().<strong>init</strong>()</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">class Base(object):</div><div class="line">    def __init__(self):</div><div class="line">        print &apos;Create Base&apos;</div><div class="line"></div><div class="line">class A(Base):</div><div class="line">    def __init__(self):</div><div class="line">        Base.__init__(self)</div><div class="line">        print &apos;Create A&apos;</div><div class="line"></div><div class="line">A()</div><div class="line"></div><div class="line"># 测试结果</div><div class="line">Create Base</div><div class="line">Create A</div></pre></td></tr></table></figure>
<ul>
<li>Base.<strong>init</strong>()</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">class Base(object):</div><div class="line">    def __init__(self):</div><div class="line">        print &apos;Create Base&apos;</div><div class="line"></div><div class="line">class A(Base):</div><div class="line">    def __init__(self):</div><div class="line">        super(A, self).__init__()</div><div class="line">        # super().__init()  python3</div><div class="line">        print &apos;Create A&apos;</div><div class="line"></div><div class="line">A()</div><div class="line"></div><div class="line"># 测试结果</div><div class="line">Create Base</div><div class="line">Create A</div></pre></td></tr></table></figure>
<h2 id="2-多继承"><a href="#2-多继承" class="headerlink" title="2. 多继承"></a>2. 多继承</h2><p><code>super</code>与父类没有实质性的关联。在单继承时，<code>super</code>获取的类刚好是父类，但多继承时，<code>super</code>获取的是继承顺序中的下一个类。以下面的继承方式为例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">  Base</div><div class="line">  /  \</div><div class="line"> /    \</div><div class="line">A      B</div><div class="line"> \    /</div><div class="line">  \  /</div><div class="line">   C</div></pre></td></tr></table></figure>
<p>使用super，代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">class Base(object):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter Base&quot;</div><div class="line">        print &quot;leave Base&quot;</div><div class="line"></div><div class="line">class A(Base):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter A&quot;</div><div class="line">        super(A, self).__init__()</div><div class="line">        print &quot;leave A&quot;</div><div class="line"></div><div class="line">class B(Base):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter B&quot;</div><div class="line">        super(B, self).__init__()</div><div class="line">        print &quot;leave B&quot;</div><div class="line"></div><div class="line">class C(A, B):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter C&quot;</div><div class="line">        super(C, self).__init__()</div><div class="line">        print &quot;leave C&quot;</div><div class="line"></div><div class="line">C()</div><div class="line"></div><div class="line"># 测试结果</div><div class="line">enter C</div><div class="line">enter A</div><div class="line">enter B</div><div class="line">enter Base</div><div class="line">leave Base</div><div class="line">leave B</div><div class="line">leave A</div><div class="line">leave C</div></pre></td></tr></table></figure>
<p>如果不使用<code>super</code>，代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">class Base(object):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter Base&quot;</div><div class="line">        print &quot;leave Base&quot;</div><div class="line"></div><div class="line">class A(Base):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter A&quot;</div><div class="line">        Base().__init__()</div><div class="line">        print &quot;leave A&quot;</div><div class="line"></div><div class="line">class B(Base):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter B&quot;</div><div class="line">        Base().__init__()</div><div class="line">        print &quot;leave B&quot;</div><div class="line"></div><div class="line">class C(A, B):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter C&quot;</div><div class="line">        A().__init__()</div><div class="line">        B().__init__()</div><div class="line">        print &quot;leave C&quot;</div><div class="line"></div><div class="line">C()</div><div class="line"></div><div class="line"># 测试结果</div><div class="line">enter C</div><div class="line">enter A</div><div class="line">enter Base</div><div class="line">leave Base</div><div class="line">enter Base</div><div class="line">leave Base</div><div class="line">leave A</div><div class="line">enter A</div><div class="line">enter Base</div><div class="line">leave Base</div><div class="line">enter Base</div><div class="line">leave Base</div><div class="line">leave A</div><div class="line">enter B</div><div class="line">enter Base</div><div class="line">leave Base</div><div class="line">enter Base</div><div class="line">leave Base</div><div class="line">leave B</div><div class="line">enter B</div><div class="line">enter Base</div><div class="line">leave Base</div><div class="line">enter Base</div><div class="line">leave Base</div><div class="line">leave B</div><div class="line">leave C</div></pre></td></tr></table></figure>
<p>从上面可以看到如果不使用<code>super</code>，会导致基类被多次调用，开销非常大。</p>
<p>对于定义的类，在Python中会创建一个MRO(Method Resolution Order)列表，它代表了类继承的顺序。查看MRO列表：</p>
<ul>
<li>使用super</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">class Base(object):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;Create Base&quot;</div><div class="line"></div><div class="line">class A(Base):</div><div class="line">    def __init__(self):</div><div class="line">        super(A, self).__init__()</div><div class="line">        print &quot;Create A&quot;</div><div class="line"></div><div class="line">class B(Base):</div><div class="line">    def __init__(self):</div><div class="line">        super(B, self).__init__()</div><div class="line">        print &quot;Create B&quot;</div><div class="line"></div><div class="line">class C(A, B):</div><div class="line">    def __init__(self):</div><div class="line">        super(C, self).__init__()</div><div class="line">        print &quot;Create C&quot;</div><div class="line"></div><div class="line">print C.mro()</div><div class="line"></div><div class="line"># 测试结果</div><div class="line"></div><div class="line">[&lt;class &apos;__main__.C&apos;&gt;, &lt;class &apos;__main__.A&apos;&gt;, &lt;class &apos;__main__.B&apos;&gt;, &lt;class &apos;__main__.Base&apos;&gt;, &lt;type &apos;object&apos;&gt;]</div></pre></td></tr></table></figure>
<ul>
<li>不使用super</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">class Base(object):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter Base&quot;</div><div class="line">        print &quot;leave Base&quot;</div><div class="line"></div><div class="line">class A(Base):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter A&quot;</div><div class="line">        Base().__init__()</div><div class="line">        print &quot;leave A&quot;</div><div class="line"></div><div class="line">class B(Base):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter B&quot;</div><div class="line">        Base().__init__()</div><div class="line">        print &quot;leave B&quot;</div><div class="line"></div><div class="line">class C(A, B):</div><div class="line">    def __init__(self):</div><div class="line">        print &quot;enter C&quot;</div><div class="line">        A().__init__()</div><div class="line">        B().__init__()</div><div class="line">        print &quot;leave C&quot;</div><div class="line"></div><div class="line">print C.mro()</div><div class="line"></div><div class="line"># 测试结果</div><div class="line">[&lt;class &apos;__main__.C&apos;&gt;, &lt;class &apos;__main__.A&apos;&gt;, &lt;class &apos;__main__.B&apos;&gt;, &lt;class &apos;__main__.Base&apos;&gt;, &lt;type &apos;object&apos;&gt;]</div></pre></td></tr></table></figure>
<p>从测试结果来看，两种方式的MRO列表是一样的。MRO的查找顺序是按广度优先来的(基类继承object，Python 2.3之后)。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods" target="_blank" rel="external">https://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods</a></li>
<li><a href="https://my.oschina.net/jhao104/blog/682322" target="_blank" rel="external">https://my.oschina.net/jhao104/blog/682322</a></li>
<li><a href="http://funhacks.net/explore-python/Class/super.html" target="_blank" rel="external">http://funhacks.net/explore-python/Class/super.html</a></li>
<li><a href="https://www.artima.com/weblogs/viewpost.jsp?thread=236275" target="_blank" rel="external">https://www.artima.com/weblogs/viewpost.jsp?thread=236275</a></li>
<li><a href="https://docs.python.org/2/library/functions.html#super" target="_blank" rel="external">https://docs.python.org/2/library/functions.html#super</a></li>
<li><a href="https://blog.51cto.com/freshair/2063290" target="_blank" rel="external">https://blog.51cto.com/freshair/2063290</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      理解Python中super
    
    </summary>
    
      <category term="Python" scheme="http://noahsnail.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://noahsnail.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 98. Validate Binary Search Tree</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-98--Validate-Binary-Search-Tree/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-98--Validate-Binary-Search-Tree/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-302f74a4dbd1b837.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Validate Binary Search Tree"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Recurrent</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * struct TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode *left;</div><div class="line"> *     TreeNode *right;</div><div class="line"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</div><div class="line"> * &#125;;</div><div class="line"> */</div><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isValidBST</span><span class="params">(TreeNode* root)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> validate(root, <span class="literal">nullptr</span>, <span class="literal">nullptr</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">validate</span><span class="params">(TreeNode* root, TreeNode* max, TreeNode* min)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(!root) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>((min &amp;&amp; root-&gt;val &lt;= min-&gt;val) || (max &amp;&amp; root-&gt;val &gt;= max-&gt;val)) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> validate(root-&gt;left, root, min) &amp;&amp; validate(root-&gt;right, max, root);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/validate-binary-search-tree/description/" target="_blank" rel="external">https://leetcode.com/problems/validate-binary-search-tree/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 98. Validate Binary Search Tree
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 99. Recover Binary Search Tree</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-99--Recover-Binary-Search-Tree/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-99--Recover-Binary-Search-Tree/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <summary type="html">
    
      Leetcode 99. Recover Binary Search Tree
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 96. Unique Binary Search Trees</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-96--Unique-Binary-Search-Trees/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-96--Unique-Binary-Search-Trees/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-22a02bb2659c41b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Unique Binary Search Trees"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>参考<br><a href="https://leetcode.com/problems/unique-binary-search-trees/discuss/31666/DP-Solution-in-6-lines-with-explanation.-F(i-n" target="_blank" rel="external">DP Solution in 6 lines with explanation. F(i, n) = G(i-1) * G(n-i)</a>-G(i-1)-*-G(n-i)?page=2)</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numTrees</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> total[n + <span class="number">1</span>];</div><div class="line">        total[<span class="number">0</span>] = total[<span class="number">1</span>] = <span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</div><div class="line">            total[i] = <span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</div><div class="line">                total[i] += total[j - <span class="number">1</span>] * total[i - j];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> total[n];</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/unique-binary-search-trees/description/" target="_blank" rel="external">https://leetcode.com/problems/unique-binary-search-trees/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 96. Unique Binary Search Trees
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 92. Reverse Linked List II</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-92--Reverse-Linked-List-II/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-92--Reverse-Linked-List-II/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-f4e06f7f5d634709.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Reverse Linked List II"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * struct ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode *next;</div><div class="line"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</div><div class="line"> * &#125;;</div><div class="line"> */</div><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function">ListNode* <span class="title">reverseBetween</span><span class="params">(ListNode* head, <span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(m == n) &#123;</div><div class="line">            <span class="keyword">return</span> head;</div><div class="line">        &#125;</div><div class="line">        ListNode* start = <span class="literal">nullptr</span>;</div><div class="line">        ListNode* end = <span class="literal">nullptr</span>;</div><div class="line">        ListNode* left = <span class="literal">nullptr</span>;</div><div class="line">        ListNode* right = <span class="literal">nullptr</span>;</div><div class="line"></div><div class="line">        ListNode* pre = <span class="literal">nullptr</span>;</div><div class="line">        ListNode* current = head;</div><div class="line">        ListNode* next = <span class="literal">nullptr</span>;</div><div class="line">        <span class="keyword">int</span> diff = n - m + <span class="number">1</span>;</div><div class="line">        m--;</div><div class="line">        <span class="keyword">while</span>(m) &#123;</div><div class="line">            pre = current;</div><div class="line">            current = current-&gt;next;</div><div class="line">            m--;</div><div class="line">        &#125;</div><div class="line">        start = pre;</div><div class="line">        right = current;</div><div class="line">        <span class="keyword">while</span>(diff) &#123;</div><div class="line">            next = current-&gt;next;</div><div class="line">            current-&gt;next = pre;</div><div class="line">            pre = current;</div><div class="line">            current = next;</div><div class="line">            diff--;</div><div class="line">        &#125;</div><div class="line">        left = pre;</div><div class="line">        end = current;</div><div class="line">        right-&gt;next = end;</div><div class="line">        <span class="keyword">if</span>(start) &#123;</div><div class="line">            start-&gt;next = left;</div><div class="line">            <span class="keyword">return</span> head;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> left;</div><div class="line">        &#125; </div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/reverse-linked-list-ii/description/" target="_blank" rel="external">https://leetcode.com/problems/reverse-linked-list-ii/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 92. Reverse Linked List II
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 897. Increasing Order Search Tree</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-897--Increasing-Order-Search-Tree/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-897--Increasing-Order-Search-Tree/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-c0be25bc8091620f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Increasing Order Search Tree"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * struct TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode *left;</div><div class="line"> *     TreeNode *right;</div><div class="line"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</div><div class="line"> * &#125;;</div><div class="line"> */</div><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function">TreeNode* <span class="title">increasingBST</span><span class="params">(TreeNode* root)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(!root) &#123;</div><div class="line">            <span class="keyword">return</span> root;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">vector</span>&lt;TreeNode*&gt; nodes;</div><div class="line">        inorder(root, nodes);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nodes.size() - <span class="number">1</span>; i++) &#123;</div><div class="line">            nodes[i]-&gt;right = nodes[i + <span class="number">1</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> nodes[<span class="number">0</span>];</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">inorder</span><span class="params">(TreeNode* root, <span class="built_in">vector</span>&lt;TreeNode*&gt;&amp; nodes)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(!root) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        inorder(root-&gt;left, nodes);</div><div class="line">        root-&gt;left = <span class="literal">nullptr</span>;</div><div class="line">        nodes.push_back(root);</div><div class="line">        inorder(root-&gt;right, nodes);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for a binary tree node.</div><div class="line"> * struct TreeNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     TreeNode *left;</div><div class="line"> *     TreeNode *right;</div><div class="line"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</div><div class="line"> * &#125;;</div><div class="line"> */</div><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function">TreeNode* <span class="title">increasingBST</span><span class="params">(TreeNode* root)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(!root) &#123;</div><div class="line">            <span class="keyword">return</span> root;</div><div class="line">        &#125;</div><div class="line">        TreeNode* head = <span class="keyword">new</span> TreeNode(<span class="number">0</span>);</div><div class="line">        TreeNode* current = head;</div><div class="line">        inorder(root, current);</div><div class="line">        <span class="keyword">return</span> head-&gt;right;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">inorder</span><span class="params">(TreeNode* root, TreeNode* current)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(!root) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        inorder(root-&gt;left);</div><div class="line">        root-&gt;left = <span class="literal">nullptr</span>;</div><div class="line">        current-&gt;right = root;</div><div class="line">        current = root;</div><div class="line">        inorder(root-&gt;right);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/increasing-order-search-tree/description/" target="_blank" rel="external">https://leetcode.com/problems/increasing-order-search-tree/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 897. Increasing Order Search Tree
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 884. Uncommon Words from Two Sentences</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-884--Uncommon-Words-from-Two-Sentences/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-884--Uncommon-Words-from-Two-Sentences/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-c067b4bcd01cbd3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Uncommon Words from Two Sentences"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; uncommonFromSentences(<span class="built_in">string</span> A, <span class="built_in">string</span> B) &#123;</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; result;</div><div class="line">        <span class="built_in">unordered_map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m;</div><div class="line">        <span class="built_in">string</span> s;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> ch : A) &#123;</div><div class="line">            <span class="keyword">if</span>(ch != <span class="string">' '</span>) &#123;</div><div class="line">                s += ch;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                m[s]++;</div><div class="line">                s = <span class="string">""</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        m[s]++;</div><div class="line">        s = <span class="string">""</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> ch : B) &#123;</div><div class="line">            <span class="keyword">if</span>(ch != <span class="string">' '</span>) &#123;</div><div class="line">                s += ch;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                m[s]++;</div><div class="line">                s = <span class="string">""</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        m[s]++;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> pair : m) &#123;</div><div class="line">            <span class="keyword">if</span>(pair.second == <span class="number">1</span>) &#123;</div><div class="line">                result.emplace_back(pair.first);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; uncommonFromSentences(<span class="built_in">string</span> A, <span class="built_in">string</span> B) &#123;</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; result;</div><div class="line">        <span class="built_in">unordered_map</span>&lt;<span class="built_in">string</span>, <span class="keyword">int</span>&gt; m;</div><div class="line">        <span class="function"><span class="built_in">istringstream</span> <span class="title">strA</span><span class="params">(A)</span></span>;  </div><div class="line">        <span class="built_in">string</span> s;  </div><div class="line">        <span class="keyword">while</span>(strA &gt;&gt; s) &#123;</div><div class="line">            m[s]++;    </div><div class="line">        &#125;</div><div class="line">        <span class="function"><span class="built_in">istringstream</span> <span class="title">strB</span><span class="params">(B)</span></span>; </div><div class="line">        <span class="keyword">while</span>(strB &gt;&gt; s) &#123;</div><div class="line">            m[s]++;    </div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> pair : m) &#123;</div><div class="line">            <span class="keyword">if</span>(pair.second == <span class="number">1</span>) &#123;</div><div class="line">                result.emplace_back(pair.first);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/uncommon-words-from-two-sentences/description/" target="_blank" rel="external">https://leetcode.com/problems/uncommon-words-from-two-sentences/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 884. Uncommon Words from Two Sentences
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 9. Palindrome Number</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-9--Palindrome-Number/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-9--Palindrome-Number/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-ea245db403bb5f2c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Palindrome Number"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(x &lt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> m = x;</div><div class="line">        <span class="keyword">int</span> y = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span>(m) &#123;</div><div class="line">            y = y * <span class="number">10</span> + m % <span class="number">10</span>;</div><div class="line">            m /= <span class="number">10</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> x == y;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>Version 2<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(x &lt; <span class="number">0</span> || (x != <span class="number">0</span> &amp;&amp; x % <span class="number">10</span> == <span class="number">0</span>)) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> m = x;</div><div class="line">        <span class="keyword">int</span> y = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span>(m) &#123;</div><div class="line">            y = y * <span class="number">10</span> + m % <span class="number">10</span>;</div><div class="line">            m /= <span class="number">10</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> x == y;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/palindrome-number/description/" target="_blank" rel="external">https://leetcode.com/problems/palindrome-number/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 9. Palindrome Number
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 89. Gray Code</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-89--Gray-Code/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-89--Gray-Code/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-099396be7dad2d3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Gray Code"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; grayCode(<span class="keyword">int</span> n) &#123;</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; result;</div><div class="line">        <span class="built_in">bitset</span>&lt;32&gt; code;</div><div class="line">        traverse(result, code, n - <span class="number">1</span>);</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; result, <span class="built_in">bitset</span>&lt;<span class="number">32</span>&gt;&amp; code, <span class="keyword">int</span> pos)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(pos &lt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">int</span> value = code.to_ulong();</div><div class="line">            result.push_back(value);</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        traverse(result, code, pos - <span class="number">1</span>);</div><div class="line">        code.flip(pos);</div><div class="line">        traverse(result, code, pos - <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; grayCode(<span class="keyword">int</span> n) &#123;</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; result;</div><div class="line">        <span class="keyword">int</span> code = <span class="number">0</span>;</div><div class="line">        traverse(result, code, n - <span class="number">1</span>);</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; result, <span class="keyword">int</span>&amp; code, <span class="keyword">int</span> pos)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(pos &lt; <span class="number">0</span>) &#123;</div><div class="line">            result.push_back(code);</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        traverse(result, code, pos - <span class="number">1</span>);</div><div class="line">        code ^= (<span class="number">1</span> &lt;&lt; pos);</div><div class="line">        traverse(result, code, pos - <span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/gray-code/description/" target="_blank" rel="external">https://leetcode.com/problems/gray-code/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 89. Gray Code
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 88. Merge Sorted Array</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-88--Merge-Sorted-Array/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-88--Merge-Sorted-Array/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-16e46cbf264ac47c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Merge Sorted Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="keyword">int</span> m, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2, <span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">        <span class="keyword">while</span>(m != <span class="number">0</span> &amp;&amp; n != <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">int</span> a = nums1[m - <span class="number">1</span>];</div><div class="line">            <span class="keyword">int</span> b = nums2[n - <span class="number">1</span>];</div><div class="line">            <span class="keyword">if</span>(a &gt; b) &#123;</div><div class="line">                nums1[m + n - <span class="number">1</span>] = a;</div><div class="line">                m--;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                nums1[m + n - <span class="number">1</span>] = b;</div><div class="line">                n--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(n) &#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</div><div class="line">                nums1[i] = nums2[i];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/sort-list/description/" target="_blank" rel="external">https://leetcode.com/problems/sort-list/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 88. Merge Sorted Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 870. Advantage Shuffle</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-870--Advantage-Shuffle/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-870--Advantage-Shuffle/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-61c027f3f3e9480d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Advantage Shuffle"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>Version 1</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; advantageCount(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; B) &#123;</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; result(A.size());</div><div class="line">        sort(A.begin(), A.end());</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; B.size(); i++) &#123;</div><div class="line">            <span class="keyword">int</span> index = findLargerNumber(A, B[i]);</div><div class="line">            result[i] = A[index];</div><div class="line">            A.erase(A.begin() + index);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findLargerNumber</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> target)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(A[A.size() - <span class="number">1</span>] &lt;= target) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; A.size(); i++) &#123;</div><div class="line">            <span class="keyword">if</span>(A[i] &gt; target) &#123;</div><div class="line">                <span class="keyword">return</span> i;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>Version 2</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; advantageCount(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; B) &#123;</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; result(A.size());</div><div class="line">        sort(A.begin(), A.end());</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; B.size(); i++) &#123;</div><div class="line">            <span class="keyword">int</span> index = findLargerNumber(A, B[i]);</div><div class="line">            result[i] = A[index];</div><div class="line">            A.erase(A.begin() + index);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span>:</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">findLargerNumber</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">int</span> target)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> right = A.size() - <span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span>(left &lt; right) &#123;</div><div class="line">            <span class="keyword">int</span> middle = (left + right) / <span class="number">2</span>;</div><div class="line">            <span class="keyword">if</span>(A[middle] &lt;= target) &#123;</div><div class="line">                left = middle + <span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                right = middle;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(A[right] &lt;= target) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> right;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/advantage-shuffle/description/" target="_blank" rel="external">https://leetcode.com/problems/advantage-shuffle/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 870. Advantage Shuffle
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 876. Middle of the Linked List</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-876--Middle-of-the-Linked-List/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-876--Middle-of-the-Linked-List/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-ad08a44d5fa8f930.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Middle of the Linked List"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * struct ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode *next;</div><div class="line"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</div><div class="line"> * &#125;;</div><div class="line"> */</div><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function">ListNode* <span class="title">middleNode</span><span class="params">(ListNode* head)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(!head) &#123;</div><div class="line">            <span class="keyword">return</span> head;</div><div class="line">        &#125;</div><div class="line">        ListNode* p1 = head;</div><div class="line">        ListNode* p2 = head;</div><div class="line">        ListNode* pre = <span class="literal">nullptr</span>;</div><div class="line">        <span class="keyword">while</span>(p2 &amp;&amp; p2-&gt;next) &#123;</div><div class="line">            p1 = p1-&gt;next;</div><div class="line">            p2 = p2-&gt;next-&gt;next;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> p1;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/middle-of-the-linked-list/description/" target="_blank" rel="external">https://leetcode.com/problems/middle-of-the-linked-list/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 876. Middle of the Linked List
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 867. Transpose Matrix</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-867--Transpose-Matrix/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-867--Transpose-Matrix/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-633914db8e15634d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Transpose Matrix"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; transpose(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;&amp; A) &#123;</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; result;</div><div class="line">        <span class="keyword">int</span> rows = A.size();</div><div class="line">        <span class="keyword">if</span>(rows == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span> result;</div><div class="line">        &#125; </div><div class="line">        <span class="keyword">int</span> columns = A[<span class="number">0</span>].size();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; columns; i++) &#123;</div><div class="line">            <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; row;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; rows; j++) &#123;</div><div class="line">                row.emplace_back(A[j][i]);</div><div class="line">            &#125;</div><div class="line">            result.emplace_back(row);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/transpose-matrix/description/" target="_blank" rel="external">https://leetcode.com/problems/transpose-matrix/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 867. Transpose Matrix
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 852. Peak Index in a Mountain Array</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-852--Peak-Index-in-a-Mountain-Array/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-852--Peak-Index-in-a-Mountain-Array/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-3514a3c789bb2d22.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Peak Index in a Mountain Array"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">peakIndexInMountainArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> left = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> right = A.size() - <span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span>(left &lt; right) &#123;</div><div class="line">            <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</div><div class="line">            <span class="keyword">if</span>(A[mid] &gt; A[mid + <span class="number">1</span>]) &#123;</div><div class="line">                right = mid;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                left = mid + <span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> left;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/peak-index-in-a-mountain-array/description/" target="_blank" rel="external">https://leetcode.com/problems/peak-index-in-a-mountain-array/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 852. Peak Index in a Mountain Array
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 86. Partition List</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-86--Partition-List/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-86--Partition-List/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-bd7ed6e8a53b647e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Partition List"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * struct ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode *next;</div><div class="line"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</div><div class="line"> * &#125;;</div><div class="line"> */</div><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function">ListNode* <span class="title">partition</span><span class="params">(ListNode* head, <span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(!head) &#123;</div><div class="line">            <span class="keyword">return</span> head;</div><div class="line">        &#125;</div><div class="line">        ListNode* left_head = <span class="literal">nullptr</span>;</div><div class="line">        ListNode* right_head = <span class="literal">nullptr</span>;</div><div class="line">        ListNode* left = <span class="literal">nullptr</span>;</div><div class="line">        ListNode* right = <span class="literal">nullptr</span>;</div><div class="line">        ListNode* current = head;</div><div class="line">        <span class="keyword">while</span>(current) &#123;</div><div class="line">            <span class="keyword">if</span>(current-&gt;val &lt; x) &#123;</div><div class="line">                <span class="keyword">if</span>(left) &#123;</div><div class="line">                    left-&gt;next = current;</div><div class="line">                    left = left-&gt;next;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> &#123;</div><div class="line">                    left = current;</div><div class="line">                    left_head = left;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">if</span>(right) &#123;</div><div class="line">                    right-&gt;next = current;</div><div class="line">                    right = right-&gt;next;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> &#123;</div><div class="line">                    right = current;</div><div class="line">                    right_head = right;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            current = current-&gt;next;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(right) &#123;</div><div class="line">            right-&gt;next = <span class="literal">nullptr</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(left) &#123;</div><div class="line">            left-&gt;next = right_head;</div><div class="line">            <span class="keyword">return</span> left_head;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> right_head;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/partition-list/description/" target="_blank" rel="external">https://leetcode.com/problems/partition-list/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 86. Partition List
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode 84. Largest Rectangle in Histogram</title>
    <link href="http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-84--Largest-Rectangle-in-Histogram/"/>
    <id>http://noahsnail.com/2018/12/12/2018-12-12-Leetcode-84--Largest-Rectangle-in-Histogram/</id>
    <published>2018-12-12T05:23:49.000Z</published>
    <updated>2018-12-12T05:38:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章作者：Tyan<br>博客：<a href="http://noahsnail.com">noahsnail.com</a> &nbsp;|&nbsp; <a href="http://blog.csdn.net/quincuntial" target="_blank" rel="external">CSDN</a> &nbsp;|&nbsp; <a href="http://www.jianshu.com/users/7731e83f3a4e/latest_articles" target="_blank" rel="external">简书</a></p>
<h2 id="1-Description"><a href="#1-Description" class="headerlink" title="1. Description"></a>1. Description</h2><p><img src="https://upload-images.jianshu.io/upload_images/3232548-312ab1e532186121.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Largest Rectangle in Histogram"></p>
<h2 id="2-Solution"><a href="#2-Solution" class="headerlink" title="2. Solution"></a>2. Solution</h2><ul>
<li>O(N^2)</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">largestRectangleArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; heights)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> maxArea = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; heights.size(); i++) &#123;</div><div class="line">            <span class="keyword">int</span> left = i;</div><div class="line">            <span class="keyword">int</span> right = i;</div><div class="line">            <span class="keyword">for</span>(left = i; left &gt;= <span class="number">0</span>; left--) &#123;</div><div class="line">                <span class="keyword">if</span>(heights[left] &lt; heights[i]) &#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span>(right = i; right &lt; heights.size(); right++) &#123;</div><div class="line">                <span class="keyword">if</span>(heights[right] &lt; heights[i]) &#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">int</span> area = (right - <span class="number">1</span> - left - <span class="number">1</span> + <span class="number">1</span>) * heights[i];</div><div class="line">            <span class="keyword">if</span>(area &gt; maxArea) &#123;</div><div class="line">                maxArea = area;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> maxArea;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>O(N)</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">largestRectangleArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; heights)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> maxArea = <span class="number">0</span>;</div><div class="line">        <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; border;</div><div class="line">        heights.push_back(<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; heights.size(); i++) &#123;</div><div class="line">            <span class="keyword">if</span>(border.empty() || heights[i] &gt; heights[border.top()]) &#123;</div><div class="line">                border.push(i);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">int</span> index = border.top();</div><div class="line">                border.pop();</div><div class="line">                <span class="keyword">int</span> area = heights[index] * (border.empty()?i:i - border.top() - <span class="number">1</span>);</div><div class="line">                <span class="keyword">if</span>(area &gt; maxArea) &#123;</div><div class="line">                    maxArea = area;</div><div class="line">                &#125;</div><div class="line">                i--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> maxArea;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://leetcode.com/problems/largest-rectangle-in-histogram/description/" target="_blank" rel="external">https://leetcode.com/problems/largest-rectangle-in-histogram/description/</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      Leetcode 84. Largest Rectangle in Histogram
    
    </summary>
    
      <category term="基础算法" scheme="http://noahsnail.com/categories/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://noahsnail.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
